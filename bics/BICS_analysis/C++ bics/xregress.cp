#include <stdio.h>#define  NRANSI#include <iostream.h>				// cin,cout#include <stdlib.h>					// abs()#include <math.h>#include "nr.h"						//RMR-NR.h#include "nr_util.h"				//RMR-NRUTIL#include "nr_util.cp"				//RMR-NRUTIL#include "raf_util.cp"#include "raf_util.h"#include "regress.cp"#define NPT 10void main(void){	int i,lag=0;	float b,sigb,rSqr,rSqrCrit,tval, tcrit,*x,*y;		x=vector(1,NPT);	y=vector(1,NPT);		for (i=1;i<=NPT;i++) {		x[i]= 0.1*i;		y[i] =  10.0*x[i]*(2.0 + 1.0*rand()/32767);	}	cout<<"set regression lag: ";	cin>>lag;		for( int j=-abs(lag); j<= abs(lag); j++)  {			regress(x,y,NPT,j,&b,&sigb,&rSqr,&tval, &tcrit);				//CHECK CRITICAL T-VALUE: significance of R2		// if p>.005,  rSqrCrit ->  -999 		rSqrCrit = rSqr; 		if(tval < tcrit ) rSqrCrit = -999;				cout.precision(10);		cout<<j<<"\t"<<b<<"\t"<<rSqrCrit<<"\t"<<tval<<"\t"<<tcrit<<endl;		}		free_vector(y,1,NPT);	free_vector(x,1,NPT);	return;}