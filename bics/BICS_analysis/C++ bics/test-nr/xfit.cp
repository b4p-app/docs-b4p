/* Driver for routine fit */#include <stdio.h>#define  NRANSI#include <iostream.h>				// cin,cout#include <stdlib.h>					// abs()#include "nr.h"						//RMR-NR.h#include "nr_util.h"				//RMR-NRUTIL#include "nr_util.cp"				//RMR-NRUTIL#include "raf_util.cp"#include "raf_util.h"#include "fit.cp"#include "gasdev.c"#include "ran1.c"#include "gammq.c"#include "gcf.c"#include "gser.c"#include "gammln.c"#define NPT 10000#define SPREAD 0.3int main(void){	long idum=(-117);	int i,mwt=0,lag=0;	float a,b,chi2,q,siga,sigb,*x,*y,*sig;	char ans;		x=vector(1,NPT);	y=vector(1,NPT);	sig=vector(1,NPT);		for (i=1;i<=NPT;i++) {		x[i]=0.1*i;		y[i] = 1.0*x[i];	 //+1.0+SPREAD*gasdev(&idum);		sig[i]=SPREAD;	}	cout<<"set regression lag: ";	cin>>lag;		for( int j=-abs(lag); j<= abs(lag); j++) {		fit(x,y,NPT,j,sig,mwt,&a,&b,&siga,&sigb,&chi2,&q);		cout<<j<<"\t"<<b<<"\t"<<q<<endl;		}		//	cout.precision(8);			free_vector(sig,1,NPT);	free_vector(y,1,NPT);	free_vector(x,1,NPT);	return 0;}#undef NRANSI/* (C) Copr. 1986-92 Numerical Recipes Software 2-2. */