(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    118653,       4691]
NotebookOptionsPosition[    107331,       4293]
NotebookOutlinePosition[    107936,       4317]
CellTagsIndexPosition[    107893,       4314]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "BICS DATA DISPLAY",
 StyleBox["",
  FontSize->20]
}], "Title",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["George Chovanes, M.D.\nRafael Richards, M.S.",
 FontFamily->"Helvetica",
 FontSize->8,
 FontWeight->"Plain",
 FontSlant->"Italic"]], "Input",
 TextAlignment->Center,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["OTHER", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["Development", "Subsubsection",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
 "\tAutomated processing of multiple files in a common directory: putting \
files in this directory will mean it will be processed. \t\tUse Mma function \
Directory and FileNames to get the names of all\n\t\tthese files; then \
process them\t\t\n\t\t",
 StyleBox["FileNames[\"*.*\",\"Project:BICS\", 2]",
  FontFamily->"Courier",
  FontSize->9,
  FontWeight->"Bold"],
 "\n\t\t\n\t\tEPOCH means: taken by a fixed length vector that shifts. This \
assumes that the time variable\n\t\tis fixed sampling rate, and there are not \
large gaps of missing data."
}], "Text",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["TEST CODE", "Subsubsection",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["timing of selColsRows", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
k=1;
While[ k<=10,
\ttCalc = Timing[ {v1,v2}=selColsRows[data,1,2,1,k*500 ]  ][[1]];
\tPrint[i,\"\\t\",tCalc];
\tk++
\t]\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell[TextData[{
 "dat={",
 StyleBox["{501,5.01667},{1001,15.0333},{1501,29.7667},{2001,45.85},\n\
{2501,70.3333},{3001,99.6333},{3501,134.267},{4001,173.617},\n\
{4501,217.167},{5001,266.}};\n\n",
  FontWeight->"Plain"],
 "datplot=ListPlot[dat];\nline=Fit[dat,{1,x,x^2},x];\n\
lineplot=Plot[line,{x,1,5000}];\nShow[datplot,lineplot];\nline/. x->20000  /60"
}], "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[OutputFormData["\<\
3.88250702853817433\
\>", "\<\
3.88251\
\>"], "Output",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["line", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[OutputFormData["\<\
1.988116235810902174 + 0.002314992984242423691*x + \
0.00001010453818181817833*x^2\
\>", "\<\
                                       2
1.98812 + 0.00231499 x + 0.0000101045 x\
\>"], "Output",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["testing:    plotVarsDeriv", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
For[j=2, j<=nCols,j++,

plotVarsDeriv[data,1,j,1,nRows, 1, 2];
plotVarsDeriv[data,1,j,1,nRows, 2, 5];
plotVarsDeriv[data,1,j,1,nRows, 3, 7];
plotVarsDeriv[data,1,j,1,nRows, 4, 10];
plotVarsDeriv[data,1,j,1,nRows, 5, 12];
plotVarsDeriv[data,1,j,1,nRows, 10, 20]
\t]\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["lags", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
lagr2={};
For[i=-10,i<=10, i++,
\tlagDat=lagR2[v1,v2,i*10];
\tAppendTo[lagr2,lagDat];
\t];\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
v3=Transpose[lagr2][[1]];
v4=Transpose[lagr2][[2]];
plotVecsMD[v3,v4];\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Courier findfont 8  scalefont  setfont
% Scaling calculations
0.5 0.0047619 -1.07983 4.12449 [
[(-100)] .02381 0 0 2 0 Minner Mrotsboxa
[(-50)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(50)] .7381 0 0 2 0 Minner Mrotsboxa
[(100)] .97619 0 0 2 0 Minner Mrotsboxa
[(v1)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0.28)] -0.0125 .07502 1 0 0 Minner Mrotsboxa
[(0.3)] -0.0125 .15751 1 0 0 Minner Mrotsboxa
[(0.32)] -0.0125 .24 1 0 0 Minner Mrotsboxa
[(0.34)] -0.0125 .32249 1 0 0 Minner Mrotsboxa
[(0.36)] -0.0125 .40498 1 0 0 Minner Mrotsboxa
[(0.38)] -0.0125 .48747 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .56996 1 0 0 Minner Mrotsboxa
[(v2)] -0.0125 .30902 1 0 0 -1 0 Mouter Mrotsboxa
[(N: 21)] .5 .61803 0 -2 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-100)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-50)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(50)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(100)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[(v1)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .07502 m
.00625 .07502 L
s
P
[(0.28)] -0.0125 .07502 1 0 0 Minner Mrotshowa
p
.002 w
0 .15751 m
.00625 .15751 L
s
P
[(0.3)] -0.0125 .15751 1 0 0 Minner Mrotshowa
p
.002 w
0 .24 m
.00625 .24 L
s
P
[(0.32)] -0.0125 .24 1 0 0 Minner Mrotshowa
p
.002 w
0 .32249 m
.00625 .32249 L
s
P
[(0.34)] -0.0125 .32249 1 0 0 Minner Mrotshowa
p
.002 w
0 .40498 m
.00625 .40498 L
s
P
[(0.36)] -0.0125 .40498 1 0 0 Minner Mrotshowa
p
.002 w
0 .48747 m
.00625 .48747 L
s
P
[(0.38)] -0.0125 .48747 1 0 0 Minner Mrotshowa
p
.002 w
0 .56996 m
.00625 .56996 L
s
P
[(0.4)] -0.0125 .56996 1 0 0 Minner Mrotshowa
p
.001 w
0 .09152 m
.00375 .09152 L
s
P
p
.001 w
0 .10802 m
.00375 .10802 L
s
P
p
.001 w
0 .12452 m
.00375 .12452 L
s
P
p
.001 w
0 .14102 m
.00375 .14102 L
s
P
p
.001 w
0 .17401 m
.00375 .17401 L
s
P
p
.001 w
0 .19051 m
.00375 .19051 L
s
P
p
.001 w
0 .20701 m
.00375 .20701 L
s
P
p
.001 w
0 .22351 m
.00375 .22351 L
s
P
p
.001 w
0 .2565 m
.00375 .2565 L
s
P
p
.001 w
0 .273 m
.00375 .273 L
s
P
p
.001 w
0 .2895 m
.00375 .2895 L
s
P
p
.001 w
0 .306 m
.00375 .306 L
s
P
p
.001 w
0 .33899 m
.00375 .33899 L
s
P
p
.001 w
0 .35549 m
.00375 .35549 L
s
P
p
.001 w
0 .37199 m
.00375 .37199 L
s
P
p
.001 w
0 .38849 m
.00375 .38849 L
s
P
p
.001 w
0 .42148 m
.00375 .42148 L
s
P
p
.001 w
0 .43798 m
.00375 .43798 L
s
P
p
.001 w
0 .45448 m
.00375 .45448 L
s
P
p
.001 w
0 .47098 m
.00375 .47098 L
s
P
p
.001 w
0 .50397 m
.00375 .50397 L
s
P
p
.001 w
0 .52047 m
.00375 .52047 L
s
P
p
.001 w
0 .53697 m
.00375 .53697 L
s
P
p
.001 w
0 .55346 m
.00375 .55346 L
s
P
p
.001 w
0 .05853 m
.00375 .05853 L
s
P
p
.001 w
0 .04203 m
.00375 .04203 L
s
P
p
.001 w
0 .02553 m
.00375 .02553 L
s
P
p
.001 w
0 .00903 m
.00375 .00903 L
s
P
p
.001 w
0 .58646 m
.00375 .58646 L
s
P
p
.001 w
0 .60296 m
.00375 .60296 L
s
P
[(v2)] -0.0125 .30902 1 0 0 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
[(N: 21)] .5 .61803 0 -2 Mshowa
p
.002 w
.99375 .07502 m
1 .07502 L
s
P
p
.002 w
.99375 .15751 m
1 .15751 L
s
P
p
.002 w
.99375 .24 m
1 .24 L
s
P
p
.002 w
.99375 .32249 m
1 .32249 L
s
P
p
.002 w
.99375 .40498 m
1 .40498 L
s
P
p
.002 w
.99375 .48747 m
1 .48747 L
s
P
p
.002 w
.99375 .56996 m
1 .56996 L
s
P
p
.001 w
.99625 .09152 m
1 .09152 L
s
P
p
.001 w
.99625 .10802 m
1 .10802 L
s
P
p
.001 w
.99625 .12452 m
1 .12452 L
s
P
p
.001 w
.99625 .14102 m
1 .14102 L
s
P
p
.001 w
.99625 .17401 m
1 .17401 L
s
P
p
.001 w
.99625 .19051 m
1 .19051 L
s
P
p
.001 w
.99625 .20701 m
1 .20701 L
s
P
p
.001 w
.99625 .22351 m
1 .22351 L
s
P
p
.001 w
.99625 .2565 m
1 .2565 L
s
P
p
.001 w
.99625 .273 m
1 .273 L
s
P
p
.001 w
.99625 .2895 m
1 .2895 L
s
P
p
.001 w
.99625 .306 m
1 .306 L
s
P
p
.001 w
.99625 .33899 m
1 .33899 L
s
P
p
.001 w
.99625 .35549 m
1 .35549 L
s
P
p
.001 w
.99625 .37199 m
1 .37199 L
s
P
p
.001 w
.99625 .38849 m
1 .38849 L
s
P
p
.001 w
.99625 .42148 m
1 .42148 L
s
P
p
.001 w
.99625 .43798 m
1 .43798 L
s
P
p
.001 w
.99625 .45448 m
1 .45448 L
s
P
p
.001 w
.99625 .47098 m
1 .47098 L
s
P
p
.001 w
.99625 .50397 m
1 .50397 L
s
P
p
.001 w
.99625 .52047 m
1 .52047 L
s
P
p
.001 w
.99625 .53697 m
1 .53697 L
s
P
p
.001 w
.99625 .55346 m
1 .55346 L
s
P
p
.001 w
.99625 .05853 m
1 .05853 L
s
P
p
.001 w
.99625 .04203 m
1 .04203 L
s
P
p
.001 w
.99625 .02553 m
1 .02553 L
s
P
p
.001 w
.99625 .00903 m
1 .00903 L
s
P
p
.001 w
.99625 .58646 m
1 .58646 L
s
P
p
.001 w
.99625 .60296 m
1 .60296 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
p
.002 w
0 .07502 m
1 .07502 L
s
P
p
.002 w
.5 0 m
.5 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
.001 w
.02381 .47464 Mdot
.07143 .42858 Mdot
.11905 .38723 Mdot
.16667 .47208 Mdot
.21429 .60332 Mdot
.2619 .5856 Mdot
.30952 .56195 Mdot
.35714 .55676 Mdot
.40476 .58673 Mdot
.45238 .56789 Mdot
.5 .50975 Mdot
.54762 .58565 Mdot
.59524 .43899 Mdot
.64286 .39627 Mdot
.69048 .28051 Mdot
.7381 .24955 Mdot
.78571 .23183 Mdot
.83333 .1992 Mdot
.88095 .16749 Mdot
.92857 .1154 Mdot
.97619 .01472 Mdot
P
P
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{384, 236},
 ImageMargins->{{24, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["cleanDeriv[ c1, r1, r2]", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\

cleanDeriv[ vec_, slope1_, slope2_]:=Module[{},

v={};
For[i=2, i<= Length[vec]-1, i++,

\tFLAG=1;\t
\tIf[ Abs[vec[[i+1]] - vec[[i]]  ]  >= slope1,  \t\t\t\tFLAG=0 ];
\tIf[ Abs[vec[[i]] - vec[[i-1]]  ]  >= slope1,  \t\t\t\tFLAG=0 ];
\tIf[ Abs[vec[[i+1]] - 2 vec[[i]] + vec[[i-1]] ]  >= slope2,  FLAG=0 ];
\t
\tIf[ FLAG != 0, AppendTo[ v, vec[[i]] ]\t];
\t
\t];

Return[v];
]
 
\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["displayFile", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
Clear[displayFile];
displayFile[file_String]:= Module[{},\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
\t\t
\tfile=\"berg_out\";
\tpathName = StringJoin[ Directory[],\":\", ToString[file]  ];

\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\tinStream = OpenRead[pathName];", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[OutputFormData["\<\
\"Project:BICS:data:berg_out\"\
\>", "\<\
Project:BICS:data:berg_out\
\>"], "Output",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]],

Cell["Read[inStream,String]", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
(*---------print first two lines --------------*)\t
\tnPrintLines = 2;\t\t\t(* number of lines to print *)
\tnSkipLines  = 0;\t\t\t(* number of lines to skip *)
\tSkip[inStream, String, nSkipLines];
\tPrint[ lineSeparator];
\tDo[
\t\tinstring= Read[inStream, String];
\t\tPrint[instring];
\t\tPrint[ lineSeparator],
\t\t{nPrintLines}
\t\t];
\t\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
------------------------------------------------------------------------------\
------
\
\>", "Print",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]],

Cell["\<\
(*---------calculate total rows --------------*)\t
\t(*
\tSetStreamPosition[inStream, 0];
\tnRows = 0;
\tWhile[ !( Read[inStream,String] === EndOfFile),
\t\t\t\tnRows = nRows +1
\t\t\t\t];
\tPrint[\"ROWS: \",nRows];\t\t
\t*)\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
 "(*---------determine number of var names --------------*)\n\t\n\t\
SetStreamPosition[inStream, 0];\t\n\tnVars = nVals = 0;\n\tword = \
Read[inStream, Word];\t\n\nwordval = ToExpression[word];\n\t\t\n\tWhile[ \
!NumberQ[wordval],\n\t\t\t\t\t\t\tIf[ NumberQ[wordval], nVals++, nVars++ ];\n\
\t\t\t\t\t\t\tword = Read[inStream, Word];\t\t\t\t\t\t(* char string *)\n\t\t\
\t\t\t\t\twordval = ToExpression[word];\t\t\t\t\t(*",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression *)\n\t\t\t\t\t\t];\n\t\t\t\t\t\t\n\tPrint[\"NUM VARS: \", \
nVars];\n\tPrint[\"NUM VALS: \", nVals];"
}], "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\

(*---------read in and print var names --------------*)
\tSetStreamPosition[inStream, 0];
\tvar={};
\tFor[i=1, i<=nVars,i++,
\t\t\t\tword = Read[inStream, Word ];
\t\t\t\tAppendTo[var, word];
\t\t\t\t];
\t
\tReturn[printNumList[var,5]//MatrixForm ];
\t
\t
\tClose[inStream];\t\t
\t\t
\t]\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["plotFile[ \"file\", nCols ]", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
(* file must be saved as Macintosh format in BBEdit *)

Clear[plotFile];
plotFile[fileName_String, numCols_]:=Module[{},

\tpathName = StringJoin[ Directory[],\":\", ToString[fileName]  ];
\tinputFormat = Table[ Number, {numCols}];
\tdata \t\t= ReadList[fileName,inputFormat];

\tcol = Transpose[data];
\tv[n_]:= col[[n]];

\tnumRows = Length[data];
\tcaseNum = Range[ numRows];
\tnumPoints = numRows*numCols;

\tPrint[\"Path : \",\t\t\"\\t \\t \\t\",\tpathName];
\tPrint[\"Rows : \", \t\t\"\\t \\t \\t\",\tnumRows];
\tPrint[\"Columns :\",\t\t\"\\t \\t\",\tnumCols];
\tPrint[\"Total Points:\",\t\"\\t\", \t\tnumPoints];

\tminV1=Min[v[1] ];
\tmaxV1=Max[v[1] ];
\tPrint[\"Start Time: \",\t\"\\t\",\t\t minV1]
\tPrint[\"End Time: \",\t\t\"\\t \\t\",\t maxV1]
\t
\tFor[ j=2, j<=numCols, j++,
\t\t{v1,v2}=nonMissing[ v[1], v[j] ];
\t
\t\t(*need min 5 non-missing points to plot *)\t
\t\tIf[  Length[v1] > 5,\t
\t\t
\t\t\tplotdat=Transpose[ {v1,v2}];\t
\t\t\txlabel = var[[1]];
\t\t\tylabel = var[[j]];
\t\t\t
\t\t\tListPlot[ plotdat,
\t\t\t\tPlotStyle->{PointSize[.001]},
\t\t\t\tPlotRange->{minV1, maxV1};
\t\t\t\tDefaultFont :> {\"Courier\",8},
\t\t\t\tFrame -> True,
\t\t\t\tFrameLabel->{xlabel,ylabel},
\t\t\t\tRotateLabel->False
\t\t\t\t]
\t\t\t]\t\t
\t\t]

]
\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"ylabel\"
     is similar to existing symbol \"xlabel\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["{v1,v2}=nonMissing[ v[m], v[n] ]", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\

nonMissing[ v1_List, v2_List]:=Module[{},

\t\tv1New={};
\t\tv2New={};
\t\tlen=Length[v1];
\t\t
\t\tFor[ i=1, i<=len, i++,
\t\t\tIf[  (v1[[i]] != -999) && ( v2[[i]] != -999),
\t\t\t\t\tAppendTo[ v1New, v1[[i]] ];
\t\t\t\t\tAppendTo[ v2New, v2[[i]] ],
\t\t\t\t\tNull
\t\t\t\t\t];
\t\t\t];
\t\t
\t\tReturn[{v1New, v2New}];
\t\t]
\t\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["containsChars", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
containsChars[word_,chars_]:=Module[{},
\t\tcharsword = Characters[ToString[word]];
\t\tcharsearch = Characters[ToString[chars]];
\t\tIf[ Length[ Intersection[ charsword, charsearch ] ] == 0,
\t\t\tFalse,
\t\t\tTrue
\t\t\t]
\t\t];
\t\t
(* Characters -> character array *)

\t\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["delimList", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
(* function to take parse string by StringPostition of delimiter *)
(* parse data: assuming there is a delimiter -before- each value,except for \
first *)
(* delim=\"\\t +/:,\"\ttab,space,plus,slash,colon, or comma\t\t\t\t*)

Clear[delimList];

delimList[ instring_String, delim_String]:=Module[{},
\t
\tdelimpos = StringPosition[instring, delim];
\tdelims = Map[ First, delimpos ];
\t
\t(*
\toutstring = StringReplace[instring,delim->\"*\"];\t
\tPrint[\"INSTRING: \", instring  ];
\tPrint[\"DELIM:    \", FullForm[delim]  ];\t
\tPrint[\"DELIMS:   \", Length[delims ] ];
\tPrint[\"OUTSTRING:\", outstring ];\t
\t*)
\t
\tvals={};
\tvals = Append[ vals, StringTake[instring,{1, delims[[1]]-1 }]  ];

\tFor[k=0, k < Length[delims], k++,
\t\tIf[ ( delims[[k+1]] - delims[[k]] ) >1,\t\t
\t\t(*non-adjacent delims *)
\t\t\tvals = Append[ vals, StringTake[ 
\t\t\t\t\t\t\tinstring, {delims[[k]]+1, delims[[k+1]]-1 }]  ],
\t\t(*else missing data*)
\t\t\tvals = Append[ vals,  -999. ]\t\t(* Null  or ToString[ -999.] *)
\t\t\t]
\t];

\tReturn[vals]
]\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
format1=Table[
\t\tIf[ colStart < i < colEnd, Number, Word]
\t\t,
\t\t{i,1,Length[row2]}
\t\t];
recWords=Table[ Word, {i,1,Length[row2]} ]\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[OutputFormData["\<\
{Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, \
Word, Word, Word, Word, Word, Word, Word, Word, Word}\
\>", "\<\
{Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, \
Word, Word, Word, Word, Word, Word, Word, Word, Word}\
\>"], "Output",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]],

Cell["record=ReadList[\"horin50\", Record];", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["other", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
\tfile=\"berg1.dos\";
\tpathName = StringJoin[ Directory[],\":\", ToString[file]  ];
\tinStream = OpenRead[pathName];
\t
\tnPrintLines = 2;\t\t\t(* number of lines to print *)
\tnSkipLines  = 0;\t\t\t(* number of lines to skip *)
\tSkip[inStream, String, nSkipLines];
\t
\tdelim = \"\\t\"
\t
\tinstring1\t=Read[inStream, String];
\trow1=delimList[instring1,delim];
\t
\tinstring2\t=Read[inStream, String];
\trow2=delimList[instring2,delim];\t
\t
\tPrint[pathName];
\tPrint[ lineSeparator];
\tPrint[\"ROW_1 VARIABLES: \", Length[row1] ];\t
\tPrint[ printNumList[row1,6]//TableForm ];
\tPrint[ lineSeparator];\t
\tPrint[\"ROW_2 VALUES: \", Length[row2] ];\t\t
\tPrint[ printNumList[row2,6]//TableForm ];
\tPrint[ lineSeparator];\t


\tIf[ Length[row1] != Length[row2], 
\t\tPrint[\"WARNING: unequal number of columns in ROW_1 and ROW_2\"],Null];

\tcolStart =Input[\"Enter: first column number\"];
\tcolEnd   =Input[\"Enter: last column number\"];
\tnVars=colEnd-colStart+1;
\tPrint[\"NUMBER OF VARS: \",nVars];
\t\t
\tvars= Take[row1,{colStart,colEnd}];
\tvals= Take[row2,{colStart,colEnd}]//ToExpression;
\tvarsdata =Transpose[{vars,vals}];
\tprintList[varsdata,2] //TableForm;
\t
\t
\t(*
\tstreampos1  =StreamPosition[inStream];\t
\tSetStreamPosition[inStream, streampos1];
\t*)
\t
\t
\tdata={};
\tAppendTo[data,vals];
\t\t
\t(*
\tnRows = 1;
\tWhile[ !( Read[inStream,String] === EndOfFile),  
\t\t\t\tnRows = nRows +1;
\t*)
\t(*
\tnRows = 0;
\tFor[i=1,i<=100,i++,
\t\t\tnRows++;
\t\t\tIf[ (Mod[nRows, 25] ==0), Print[nRows], Null];\t
\t\t\tinstring = Read[inStream, String];
\t\t\trow = delimList[instring,delim];
\t\t\tvals = Take[row,{colStart,colEnd}]//ToExpression;
\t\t\tAppendTo[data, vals];\t\t
\t\t];
\t\t
\tPrint[\"NUMBER OF ROWS: \",nRows];
\t
\t*)
\tClose[inStream];
\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Input  / fileInfo", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
fileName = Input[\"Enter File Name: \"] //ToString;
pathName =StringJoin[filePath,fileName];
numCols = Input[\"Enter Number of Columns\"];
inputFormat = Table[ Number, {numCols}];
data \t\t= ReadList[fileName,inputFormat];

col = Transpose[data];
v[n_]:= col[[n]]

numRows = Length[data];
caseNum = Range[ numRows];
numPoints = numRows*numCols;

fileInfo  := Module[ { },
   Print[\"Path : \",\t\t\"\\t \\t \\t\",\tpathName];
   Print[\"Rows : \", \t\"\\t \\t \\t\",\tnumRows];
   Print[\"Columns :\",\t\"\\t \\t\",\tnumCols];
   Print[\"Total Points:\",\t\"\\t\", \t\tnumPoints]
]

fileInfo\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
Path : \t \t \tPB:BICS:1995:jones1
Rows : \t \t \t2049
Columns :\t \t17
Total Points:\t34833\
\>", "Print",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
ReadList[\"Project:BICS:data:horin\", {Word},
\t\t\tRecordLists->True,
\t\t\tRecordSeparators->{\"\\n\"}
\t\t\t]\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[OutputFormData["\<\
{{{\"hr\"}, {\"min\"}, {\"sec\"}, {\"BP\"}, {\"ICP\"}, {\"CVP\"}, {\"PAP\"}, \
{\"SVO2-J\"}, {\"SVO2-VC\"}, {\"CBF-1\"}, {\"CBF-2\"}, 
 
   {\"TCD\"}, {\"SaO2\"}, {\"ETPCO2\"}, {\"Resp-P\"}, {\"Resp-V\"}, \
{\"EKG\"}, {\"EEG-1\"}, {\"EEG-2\"}}, {{\"\"}}, 
 
  {{\"0.0708\"}, {\"4.25\"}, {\"255\"}, {\"81.72\"}, {\"3.70\"}, {\"21.64\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}, {\"14.94\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.0872\"}, {\"5.23\"}, {\"314\"}, {\"83.63\"}, {\"4.18\"}, {\"21.86\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}, {\"11.98\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"2.99\"}, {\"0.43\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.1036\"}, {\"6.22\"}, {\"373\"}, {\"83.90\"}, {\"3.66\"}, {\"21.82\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}, {\"16.66\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"0.56\"}, {\"-999\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.1200\"}, {\"7.20\"}, {\"432\"}, {\"80.24\"}, {\"3.76\"}, {\"21.57\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}, {\"14.89\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"0.15\"}, {\"-999\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.1364\"}, {\"8.18\"}, {\"491\"}, {\"81.68\"}, {\"3.55\"}, {\"21.54\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}, {\"14.68\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"0.13\"}, {\"-999\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.1528\"}, {\"9.17\"}, {\"550\"}, {\"86.49\"}, {\"4.02\"}, {\"-999\"}, \
{\"22.69\"}, {\"-999\"}, {\"-999\"}, {\"-999\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"0.28\"}, {\"-999\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.1692\"}, {\"10.15\"}, {\"609\"}, {\"83.35\"}, {\"3.51\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}, {\"-999\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"-999\"}, {\"0.51\"}, {\"0.02\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.1856\"}, {\"11.13\"}, {\"668\"}, {\"85.51\"}, {\"4.01\"}, {\"-999\"}, \
{\"47.30\"}, {\"-999\"}, {\"61.24\"}, {\"59.58\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"7.70\"}, {\"32.88\"}, {\"7.62\"}, {\"-999\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.2019\"}, {\"12.12\"}, {\"727\"}, {\"84.34\"}, {\"4.10\"}, {\"-999\"}, \
{\"22.61\"}, {\"-999\"}, {\"61.76\"}, {\"52.67\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.66\"}, {\"2.69\"}, {\"2.31\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.2183\"}, {\"13.10\"}, {\"786\"}, {\"78.92\"}, {\"3.56\"}, {\"-999\"}, \
{\"22.47\"}, {\"-999\"}, {\"62.01\"}, {\"55.62\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.91\"}, {\"2.43\"}, {\"2.25\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.2347\"}, {\"14.08\"}, {\"845\"}, {\"73.73\"}, {\"2.69\"}, {\"-999\"}, \
{\"22.04\"}, {\"-999\"}, {\"62.01\"}, {\"55.08\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.33\"}, {\"7.43\"}, {\"3.41\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.2511\"}, {\"15.07\"}, {\"904\"}, {\"83.04\"}, {\"3.79\"}, {\"-999\"}, \
{\"23.38\"}, {\"-999\"}, {\"61.31\"}, {\"54.52\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.67\"}, {\"1.35\"}, {\"2.15\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.2675\"}, {\"16.05\"}, {\"963\"}, {\"87.06\"}, {\"3.63\"}, {\"-999\"}, \
{\"23.13\"}, {\"-999\"}, {\"62.71\"}, {\"55.28\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.74\"}, {\"4.63\"}, {\"3.25\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.2839\"}, {\"17.03\"}, {\"1022\"}, {\"82.54\"}, {\"3.67\"}, \
{\"-999\"}, {\"22.69\"}, {\"-999\"}, {\"62.01\"}, {\"56.21\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.52\"}, {\"-999\"}, {\"1.41\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.3003\"}, {\"18.02\"}, {\"1081\"}, {\"78.51\"}, {\"2.51\"}, \
{\"-999\"}, {\"22.72\"}, {\"-999\"}, {\"62.48\"}, {\"57.05\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.13\"}, {\"6.84\"}, {\"3.35\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.3167\"}, {\"19.00\"}, {\"1140\"}, {\"77.98\"}, {\"2.53\"}, \
{\"-999\"}, {\"22.37\"}, {\"-999\"}, {\"62.46\"}, {\"53.66\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.55\"}, {\"-999\"}, {\"1.51\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.3331\"}, {\"19.98\"}, {\"1199\"}, {\"80.91\"}, {\"2.43\"}, \
{\"-999\"}, {\"22.66\"}, {\"-999\"}, {\"62.55\"}, {\"53.13\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.53\"}, {\"5.98\"}, {\"3.49\"}, {\"-999\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.3494\"}, {\"20.97\"}, {\"1258\"}, {\"79.69\"}, {\"1.56\"}, \
{\"-999\"}, {\"23.01\"}, {\"-999\"}, {\"61.75\"}, {\"52.15\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"0.99\"}, {\"27.05\"}, {\"9.68\"}, {\"17.47\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.3658\"}, {\"21.95\"}, {\"1317\"}, {\"78.54\"}, {\"1.51\"}, \
{\"-999\"}, {\"22.52\"}, {\"-999\"}, {\"61.49\"}, {\"50.40\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"0.77\"}, {\"15.39\"}, {\"13.56\"}, {\"47.94\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.3822\"}, {\"22.93\"}, {\"1376\"}, {\"76.90\"}, {\"1.40\"}, \
{\"-999\"}, {\"22.35\"}, {\"-999\"}, {\"62.01\"}, {\"55.34\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"9.48\"}, {\"49.03\"}, {\"13.84\"}, {\"7.08\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.3986\"}, {\"23.92\"}, {\"1435\"}, {\"71.58\"}, {\"0.29\"}, \
{\"-999\"}, {\"22.01\"}, {\"-999\"}, {\"62.01\"}, {\"55.76\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"24.79\"}, {\"-999\"}, {\"20.70\"}, {\"49.82\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.4150\"}, {\"24.90\"}, {\"1494\"}, {\"81.06\"}, {\"0.64\"}, \
{\"-999\"}, {\"22.69\"}, {\"-999\"}, {\"60.52\"}, {\"53.72\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"0.67\"}, {\"-999\"}, {\"6.85\"}, {\"36.68\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.4314\"}, {\"25.88\"}, {\"1553\"}, {\"75.73\"}, {\"-999\"}, \
{\"-999\"}, {\"21.91\"}, {\"-999\"}, {\"61.29\"}, {\"52.67\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"0.89\"}, {\"-999\"}, {\"20.81\"}, {\"49.85\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.4478\"}, {\"26.87\"}, {\"1612\"}, {\"82.33\"}, {\"-999\"}, \
{\"-999\"}, {\"22.30\"}, {\"-999\"}, {\"62.99\"}, {\"63.99\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"22.91\"}, {\"-999\"}, {\"13.03\"}, {\"23.65\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.4642\"}, {\"27.85\"}, {\"1671\"}, {\"79.05\"}, {\"-999\"}, \
{\"-999\"}, {\"21.90\"}, {\"-999\"}, {\"61.82\"}, {\"63.47\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.46\"}, {\"-999\"}, {\"9.78\"}, {\"8.40\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.4806\"}, {\"28.83\"}, {\"1730\"}, {\"79.11\"}, {\"-999\"}, \
{\"-999\"}, {\"22.33\"}, {\"-999\"}, {\"61.06\"}, {\"63.23\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"18.47\"}, {\"-999\"}, {\"15.12\"}, {\"12.99\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.4969\"}, {\"29.82\"}, {\"1789\"}, {\"94.36\"}, {\"-999\"}, \
{\"-999\"}, {\"22.99\"}, {\"-999\"}, {\"62.64\"}, {\"57.38\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.91\"}, {\"-999\"}, {\"10.00\"}, {\"8.31\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.5133\"}, {\"30.80\"}, {\"1848\"}, {\"83.15\"}, {\"-999\"}, \
{\"-999\"}, {\"22.59\"}, {\"-999\"}, {\"62.96\"}, {\"59.62\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"0.84\"}, {\"-999\"}, {\"8.07\"}, {\"22.37\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.5356\"}, {\"32.13\"}, {\"1928\"}, {\"95.12\"}, {\"-999\"}, \
{\"-999\"}, {\"12.22\"}, {\"-999\"}, {\"62.41\"}, {\"60.26\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"0.61\"}, {\"-999\"}, {\"7.55\"}, {\"28.80\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.5461\"}, {\"32.77\"}, {\"1966\"}, {\"81.53\"}, {\"-999\"}, \
{\"-999\"}, {\"23.77\"}, {\"-999\"}, {\"62.57\"}, {\"60.73\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"5.44\"}, {\"-999\"}, {\"12.01\"}, {\"5.39\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.5625\"}, {\"33.75\"}, {\"2025\"}, {\"84.04\"}, {\"-999\"}, \
{\"-999\"}, {\"23.38\"}, {\"-999\"}, {\"63.96\"}, {\"62.50\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.71\"}, {\"-999\"}, {\"24.56\"}, {\"49.75\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.5789\"}, {\"34.73\"}, {\"2084\"}, {\"87.72\"}, {\"-999\"}, \
{\"-999\"}, {\"23.40\"}, {\"-999\"}, {\"62.41\"}, {\"62.22\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"20.83\"}, {\"-999\"}, {\"20.62\"}, {\"49.84\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.5953\"}, {\"35.72\"}, {\"2143\"}, {\"87.25\"}, {\"-999\"}, \
{\"-999\"}, {\"23.30\"}, {\"-999\"}, {\"63.96\"}, {\"64.38\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"24.10\"}, {\"-999\"}, {\"20.68\"}, {\"49.83\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.6117\"}, {\"36.70\"}, {\"2202\"}, {\"86.27\"}, {\"-999\"}, \
{\"-999\"}, {\"23.03\"}, {\"-999\"}, {\"63.96\"}, {\"61.89\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"2.01\"}, {\"-999\"}, {\"9.95\"}, {\"5.39\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.6281\"}, {\"37.68\"}, {\"2261\"}, {\"81.21\"}, {\"-999\"}, \
{\"-999\"}, {\"22.43\"}, {\"-999\"}, {\"62.22\"}, {\"61.60\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"19.96\"}, {\"-999\"}, {\"20.60\"}, {\"49.69\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.6444\"}, {\"38.67\"}, {\"2320\"}, {\"84.35\"}, {\"-999\"}, \
{\"-999\"}, {\"23.08\"}, {\"-999\"}, {\"64.94\"}, {\"65.20\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"17.57\"}, {\"-999\"}, {\"15.23\"}, {\"12.11\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.6608\"}, {\"39.65\"}, {\"2379\"}, {\"81.46\"}, {\"-999\"}, \
{\"-999\"}, {\"23.45\"}, {\"-999\"}, {\"64.62\"}, {\"65.69\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"21.93\"}, {\"-999\"}, {\"20.62\"}, {\"49.85\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.6772\"}, {\"40.63\"}, {\"2438\"}, {\"78.42\"}, {\"-999\"}, \
{\"-999\"}, {\"23.38\"}, {\"-999\"}, {\"66.76\"}, {\"67.80\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"20.03\"}, {\"-999\"}, {\"20.57\"}, {\"46.40\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.6936\"}, {\"41.62\"}, {\"2497\"}, {\"88.10\"}, {\"-999\"}, \
{\"-999\"}, {\"23.38\"}, {\"-999\"}, {\"65.61\"}, {\"68.31\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"21.02\"}, {\"-999\"}, {\"20.67\"}, {\"49.83\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.7100\"}, {\"42.60\"}, {\"2556\"}, {\"84.19\"}, {\"-999\"}, \
{\"-999\"}, {\"23.01\"}, {\"-999\"}, {\"65.92\"}, {\"71.95\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.83\"}, {\"-999\"}, {\"28.10\"}, {\"49.76\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.7264\"}, {\"43.58\"}, {\"2615\"}, {\"85.28\"}, {\"-999\"}, \
{\"-999\"}, {\"23.23\"}, {\"-999\"}, {\"66.26\"}, {\"70.41\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"19.77\"}, {\"-999\"}, {\"20.62\"}, {\"48.66\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.7428\"}, {\"44.57\"}, {\"2674\"}, {\"83.12\"}, {\"-999\"}, \
{\"-999\"}, {\"23.25\"}, {\"-999\"}, {\"66.90\"}, {\"64.58\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"18.16\"}, {\"-999\"}, {\"13.46\"}, {\"13.52\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.7592\"}, {\"45.55\"}, {\"2733\"}, {\"83.35\"}, {\"-999\"}, \
{\"-999\"}, {\"22.49\"}, {\"-999\"}, {\"67.23\"}, {\"61.19\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"12.16\"}, {\"-999\"}, {\"20.65\"}, {\"49.80\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.7756\"}, {\"46.53\"}, {\"2792\"}, {\"85.15\"}, {\"-999\"}, \
{\"-999\"}, {\"22.72\"}, {\"-999\"}, {\"66.89\"}, {\"61.21\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.07\"}, {\"-999\"}, {\"9.28\"}, {\"7.44\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.7919\"}, {\"47.52\"}, {\"2851\"}, {\"86.09\"}, {\"-999\"}, \
{\"-999\"}, {\"22.04\"}, {\"-999\"}, {\"65.98\"}, {\"60.67\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.15\"}, {\"-999\"}, {\"25.58\"}, {\"49.81\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.8083\"}, {\"48.50\"}, {\"2910\"}, {\"84.02\"}, {\"0.01\"}, \
{\"-999\"}, {\"22.44\"}, {\"-999\"}, {\"66.31\"}, {\"60.33\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"20.86\"}, {\"-999\"}, {\"20.70\"}, {\"49.79\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.8247\"}, {\"49.48\"}, {\"2969\"}, {\"84.38\"}, {\"0.68\"}, \
{\"-999\"}, {\"22.53\"}, {\"-999\"}, {\"66.89\"}, {\"60.28\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.36\"}, {\"-999\"}, {\"9.23\"}, {\"13.90\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.8411\"}, {\"50.47\"}, {\"3028\"}, {\"80.92\"}, {\"0.98\"}, \
{\"-999\"}, {\"21.92\"}, {\"-999\"}, {\"66.89\"}, {\"58.52\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"22.49\"}, {\"-999\"}, {\"14.45\"}, {\"21.24\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.8575\"}, {\"51.45\"}, {\"3087\"}, {\"88.12\"}, {\"2.15\"}, \
{\"-999\"}, {\"23.19\"}, {\"-999\"}, {\"67.87\"}, {\"57.33\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"2.61\"}, {\"-999\"}, {\"25.67\"}, {\"50.82\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.8739\"}, {\"52.43\"}, {\"3146\"}, {\"89.82\"}, {\"1.03\"}, \
{\"-999\"}, {\"22.05\"}, {\"-999\"}, {\"69.20\"}, {\"63.10\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"23.49\"}, {\"-999\"}, {\"21.61\"}, {\"50.64\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.8903\"}, {\"53.42\"}, {\"3205\"}, {\"78.61\"}, {\"0.32\"}, \
{\"-999\"}, {\"20.95\"}, {\"-999\"}, {\"72.07\"}, {\"61.97\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"19.80\"}, {\"-999\"}, {\"20.45\"}, {\"49.76\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.9067\"}, {\"54.40\"}, {\"3264\"}, {\"81.04\"}, {\"1.44\"}, \
{\"-999\"}, {\"21.23\"}, {\"-999\"}, {\"71.22\"}, {\"58.79\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"22.78\"}, {\"-999\"}, {\"20.47\"}, {\"49.78\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.9231\"}, {\"55.38\"}, {\"3323\"}, {\"84.78\"}, {\"2.47\"}, \
{\"-999\"}, {\"21.42\"}, {\"-999\"}, {\"69.12\"}, {\"57.18\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"12.64\"}, {\"-999\"}, {\"20.51\"}, {\"49.83\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.9394\"}, {\"56.37\"}, {\"3382\"}, {\"84.90\"}, {\"3.40\"}, \
{\"-999\"}, {\"21.28\"}, {\"-999\"}, {\"63.58\"}, {\"56.51\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"19.82\"}, {\"-999\"}, {\"20.47\"}, {\"47.69\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.9558\"}, {\"57.35\"}, {\"3441\"}, {\"84.64\"}, {\"3.42\"}, \
{\"-999\"}, {\"21.49\"}, {\"-999\"}, {\"62.99\"}, {\"57.01\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"21.18\"}, {\"-999\"}, {\"13.97\"}, {\"19.64\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.9722\"}, {\"58.33\"}, {\"3500\"}, {\"79.40\"}, {\"3.49\"}, \
{\"-999\"}, {\"21.13\"}, {\"-999\"}, {\"62.99\"}, {\"56.76\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"23.52\"}, {\"-999\"}, {\"20.50\"}, {\"49.77\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"0.9886\"}, {\"59.32\"}, {\"3559\"}, {\"84.19\"}, {\"4.36\"}, \
{\"-999\"}, {\"21.07\"}, {\"-999\"}, {\"62.14\"}, {\"55.90\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.35\"}, {\"-999\"}, {\"18.07\"}, {\"49.62\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.0050\"}, {\"60.30\"}, {\"3618\"}, {\"86.43\"}, {\"4.63\"}, \
{\"-999\"}, {\"21.44\"}, {\"-999\"}, {\"62.01\"}, {\"56.42\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.31\"}, {\"-999\"}, {\"9.23\"}, {\"15.54\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.0253\"}, {\"61.52\"}, {\"3691\"}, {\"84.77\"}, {\"5.22\"}, \
{\"-999\"}, {\"21.17\"}, {\"-999\"}, {\"62.99\"}, {\"56.63\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"2.39\"}, {\"-999\"}, {\"10.29\"}, {\"10.66\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.0378\"}, {\"62.27\"}, {\"3736\"}, {\"88.63\"}, {\"5.06\"}, \
{\"-999\"}, {\"21.55\"}, {\"-999\"}, {\"62.35\"}, {\"56.74\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"19.46\"}, {\"-999\"}, {\"20.44\"}, {\"47.59\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.0542\"}, {\"63.25\"}, {\"3795\"}, {\"82.24\"}, {\"4.79\"}, \
{\"-999\"}, {\"21.01\"}, {\"-999\"}, {\"62.61\"}, {\"57.10\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"14.93\"}, {\"-999\"}, {\"15.01\"}, {\"10.55\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.0706\"}, {\"64.23\"}, {\"3854\"}, {\"88.99\"}, {\"5.70\"}, \
{\"-999\"}, {\"21.41\"}, {\"-999\"}, {\"62.01\"}, {\"56.16\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"5.57\"}, {\"-999\"}, {\"12.28\"}, {\"6.02\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.0869\"}, {\"65.22\"}, {\"3913\"}, {\"85.28\"}, {\"5.37\"}, \
{\"-999\"}, {\"21.21\"}, {\"-999\"}, {\"62.37\"}, {\"56.26\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"0.63\"}, {\"-999\"}, {\"8.88\"}, {\"20.74\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.1033\"}, {\"66.20\"}, {\"3972\"}, {\"89.28\"}, {\"6.14\"}, \
{\"-999\"}, {\"21.32\"}, {\"-999\"}, {\"62.01\"}, {\"57.08\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"24.13\"}, {\"-999\"}, {\"20.39\"}, {\"49.80\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.1197\"}, {\"67.18\"}, {\"4031\"}, {\"86.54\"}, {\"6.09\"}, \
{\"-999\"}, {\"20.97\"}, {\"-999\"}, {\"62.99\"}, {\"61.84\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"15.58\"}, {\"-999\"}, {\"16.81\"}, {\"7.17\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.1361\"}, {\"68.17\"}, {\"4090\"}, {\"85.09\"}, {\"5.98\"}, \
{\"-999\"}, {\"20.96\"}, {\"-999\"}, {\"62.78\"}, {\"66.23\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"19.06\"}, {\"-999\"}, {\"11.57\"}, {\"16.82\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.1525\"}, {\"69.15\"}, {\"4149\"}, {\"85.23\"}, {\"6.49\"}, \
{\"-999\"}, {\"21.10\"}, {\"-999\"}, {\"62.38\"}, {\"63.47\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"21.17\"}, {\"-999\"}, {\"20.42\"}, {\"49.79\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.1689\"}, {\"70.13\"}, {\"4208\"}, {\"88.93\"}, {\"7.21\"}, \
{\"-999\"}, {\"21.17\"}, {\"-999\"}, {\"62.01\"}, {\"61.60\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"18.22\"}, {\"-999\"}, {\"13.52\"}, {\"15.10\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.1853\"}, {\"71.12\"}, {\"4267\"}, {\"84.86\"}, {\"6.82\"}, \
{\"-999\"}, {\"20.58\"}, {\"-999\"}, {\"62.12\"}, {\"61.88\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"19.54\"}, {\"-999\"}, {\"20.41\"}, {\"49.72\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.2017\"}, {\"72.10\"}, {\"4326\"}, {\"89.09\"}, {\"7.07\"}, \
{\"-999\"}, {\"21.14\"}, {\"-999\"}, {\"61.92\"}, {\"60.54\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"13.86\"}, {\"-999\"}, {\"20.38\"}, {\"49.81\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.2181\"}, {\"73.08\"}, {\"4385\"}, {\"83.31\"}, {\"7.13\"}, \
{\"-999\"}, {\"20.77\"}, {\"-999\"}, {\"62.01\"}, {\"56.72\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"15.26\"}, {\"-999\"}, {\"15.98\"}, {\"8.15\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.2344\"}, {\"74.07\"}, {\"4444\"}, {\"88.92\"}, {\"7.91\"}, \
{\"-999\"}, {\"21.28\"}, {\"-999\"}, {\"62.01\"}, {\"55.47\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"18.19\"}, {\"-999\"}, {\"12.38\"}, {\"14.51\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.2508\"}, {\"75.05\"}, {\"4503\"}, {\"82.75\"}, {\"7.42\"}, \
{\"-999\"}, {\"21.03\"}, {\"-999\"}, {\"62.27\"}, {\"56.34\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"19.92\"}, {\"-999\"}, {\"20.42\"}, {\"49.77\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.2672\"}, {\"76.03\"}, {\"4562\"}, {\"85.91\"}, {\"7.63\"}, \
{\"-999\"}, {\"21.29\"}, {\"-999\"}, {\"61.15\"}, {\"56.35\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.46\"}, {\"-999\"}, {\"9.65\"}, {\"7.27\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.2836\"}, {\"77.02\"}, {\"4621\"}, {\"87.08\"}, {\"7.77\"}, \
{\"-999\"}, {\"21.11\"}, {\"-999\"}, {\"62.12\"}, {\"56.67\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"24.03\"}, {\"-999\"}, {\"20.42\"}, {\"49.78\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.3000\"}, {\"78.00\"}, {\"4680\"}, {\"80.85\"}, {\"7.26\"}, \
{\"-999\"}, {\"21.08\"}, {\"-999\"}, {\"61.39\"}, {\"54.79\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"12.18\"}, {\"-999\"}, {\"20.45\"}, {\"49.84\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.3164\"}, {\"78.98\"}, {\"4739\"}, {\"88.95\"}, {\"8.49\"}, \
{\"-999\"}, {\"21.02\"}, {\"-999\"}, {\"61.65\"}, {\"53.45\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"14.08\"}, {\"-999\"}, {\"20.41\"}, {\"49.79\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.3328\"}, {\"79.97\"}, {\"4798\"}, {\"78.42\"}, {\"7.42\"}, \
{\"-999\"}, {\"20.82\"}, {\"-999\"}, {\"61.04\"}, {\"55.70\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"21.29\"}, {\"-999\"}, {\"20.17\"}, {\"44.38\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.3492\"}, {\"80.95\"}, {\"4857\"}, {\"85.93\"}, {\"7.70\"}, \
{\"-999\"}, {\"21.14\"}, {\"-999\"}, {\"61.40\"}, {\"60.78\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"1.81\"}, {\"-999\"}, {\"25.75\"}, {\"49.82\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.3656\"}, {\"81.93\"}, {\"4916\"}, {\"85.98\"}, {\"7.94\"}, \
{\"-999\"}, {\"20.94\"}, {\"-999\"}, {\"62.01\"}, {\"60.13\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"0.96\"}, {\"-999\"}, {\"23.57\"}, {\"49.75\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.3819\"}, {\"82.92\"}, {\"4975\"}, {\"89.32\"}, {\"8.35\"}, \
{\"-999\"}, {\"21.00\"}, {\"-999\"}, {\"61.04\"}, {\"60.42\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"7.63\"}, {\"-999\"}, {\"13.47\"}, {\"5.87\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.3983\"}, {\"83.90\"}, {\"5034\"}, {\"84.02\"}, {\"7.82\"}, \
{\"-999\"}, {\"21.07\"}, {\"-999\"}, {\"60.78\"}, {\"58.16\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"17.92\"}, {\"-999\"}, {\"14.27\"}, {\"14.21\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.4147\"}, {\"84.88\"}, {\"5093\"}, {\"85.27\"}, {\"7.58\"}, \
{\"-999\"}, {\"21.09\"}, {\"-999\"}, {\"61.04\"}, {\"57.30\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"22.31\"}, {\"-999\"}, {\"20.40\"}, {\"49.79\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.4311\"}, {\"85.87\"}, {\"5152\"}, {\"84.47\"}, {\"7.31\"}, \
{\"-999\"}, {\"21.09\"}, {\"-999\"}, {\"61.04\"}, {\"56.12\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"4.56\"}, {\"-999\"}, {\"11.66\"}, {\"5.37\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.4475\"}, {\"86.85\"}, {\"5211\"}, {\"84.52\"}, {\"7.56\"}, \
{\"-999\"}, {\"21.26\"}, {\"-999\"}, {\"60.27\"}, {\"55.07\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"25.39\"}, {\"-999\"}, {\"14.57\"}, {\"29.24\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.4639\"}, {\"87.83\"}, {\"5270\"}, {\"81.01\"}, {\"7.08\"}, \
{\"-999\"}, {\"20.96\"}, {\"-999\"}, {\"61.80\"}, {\"55.59\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"13.13\"}, {\"-999\"}, {\"17.49\"}, {\"6.44\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.4803\"}, {\"88.82\"}, {\"5329\"}, {\"85.35\"}, {\"7.89\"}, \
{\"-999\"}, {\"21.02\"}, {\"-999\"}, {\"61.04\"}, {\"53.08\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"14.41\"}, {\"-999\"}, {\"20.40\"}, {\"49.78\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.4967\"}, {\"89.80\"}, {\"5388\"}, {\"84.52\"}, {\"7.97\"}, \
{\"-999\"}, {\"20.98\"}, {\"-999\"}, {\"61.38\"}, {\"52.81\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"3.85\"}, {\"-999\"}, {\"11.00\"}, {\"4.89\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.5169\"}, {\"91.02\"}, {\"5461\"}, {\"85.06\"}, {\"8.27\"}, \
{\"-999\"}, {\"20.85\"}, {\"-999\"}, {\"60.52\"}, {\"54.22\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"12.23\"}, {\"-999\"}, {\"15.81\"}, {\"6.54\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.5294\"}, {\"91.77\"}, {\"5506\"}, {\"87.01\"}, {\"7.87\"}, \
{\"-999\"}, {\"21.01\"}, {\"-999\"}, {\"62.01\"}, {\"54.43\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"13.03\"}, {\"-999\"}, {\"20.43\"}, {\"49.85\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.5458\"}, {\"92.75\"}, {\"5565\"}, {\"82.08\"}, {\"7.67\"}, \
{\"-999\"}, {\"20.96\"}, {\"-999\"}, {\"61.13\"}, {\"53.41\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"7.18\"}, {\"-999\"}, {\"13.64\"}, {\"5.99\"}, {\
\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.5622\"}, {\"93.73\"}, {\"5624\"}, {\"84.77\"}, {\"8.09\"}, \
{\"-999\"}, {\"20.94\"}, {\"-999\"}, {\"60.66\"}, {\"53.76\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"20.16\"}, {\"-999\"}, {\"20.41\"}, {\"45.88\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.5786\"}, {\"94.72\"}, {\"5683\"}, {\"84.31\"}, {\"8.27\"}, \
{\"-999\"}, {\"20.94\"}, {\"-999\"}, {\"60.57\"}, {\"53.53\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"22.06\"}, {\"-999\"}, {\"19.17\"}, {\"41.39\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.5950\"}, {\"95.70\"}, {\"5742\"}, {\"81.68\"}, {\"7.91\"}, \
{\"-999\"}, {\"20.73\"}, {\"-999\"}, {\"61.04\"}, {\"54.79\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"20.31\"}, {\"-999\"}, {\"20.11\"}, {\"45.83\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.6114\"}, {\"96.68\"}, {\"5801\"}, {\"87.18\"}, {\"8.24\"}, \
{\"-999\"}, {\"21.18\"}, {\"-999\"}, {\"60.78\"}, {\"62.65\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"24.46\"}, {\"-999\"}, {\"20.38\"}, {\"49.80\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.6278\"}, {\"97.67\"}, {\"5860\"}, {\"87.22\"}, {\"8.16\"}, \
{\"-999\"}, {\"21.38\"}, {\"-999\"}, {\"61.24\"}, {\"64.86\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"23.01\"}, {\"-999\"}, {\"20.43\"}, {\"49.83\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.6442\"}, {\"98.65\"}, {\"5919\"}, {\"82.32\"}, {\"8.33\"}, \
{\"-999\"}, {\"21.10\"}, {\"-999\"}, {\"62.01\"}, {\"62.46\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"11.54\"}, {\"-999\"}, {\"20.39\"}, {\"49.80\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.6606\"}, {\"99.63\"}, {\"5978\"}, {\"83.87\"}, {\"8.26\"}, \
{\"-999\"}, {\"21.30\"}, {\"-999\"}, {\"61.55\"}, {\"61.87\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"17.91\"}, {\"-999\"}, {\"12.75\"}, {\"13.94\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}, {{\"\"}}, 
 
  {{\"1.6769\"}, {\"100.62\"}, {\"6037\"}, {\"81.71\"}, {\"8.20\"}, \
{\"-999\"}, {\"21.27\"}, {\"-999\"}, {\"61.17\"}, {\"59.12\"}, 
 
   {\"-999\"}, {\"-999\"}, {\"18.96\"}, {\"-999\"}, {\"20.40\"}, {\"49.82\"}, \
{\"-999\"}, {\"-999\"}, {\"-999\"}}}\
\>", "\<\
{{{hr}, {min}, {sec}, {BP}, {ICP}, {CVP}, {PAP}, {SVO2-J}, {SVO2-VC}, \
{CBF-1}, {CBF-2}, {TCD}, {SaO2}, 
 
   {ETPCO2}, {Resp-P}, {Resp-V}, {EKG}, {EEG-1}, {EEG-2}}, {{}}, 
 
  {{0.0708}, {4.25}, {255}, {81.72}, {3.70}, {21.64}, {-999}, {-999}, {-999}, \
{14.94}, {-999}, {-999}, {-999}, 
 
   {-999}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.0872}, {5.23}, {314}, {83.63}, {4.18}, {21.86}, {-999}, {-999}, {-999}, \
{11.98}, {-999}, {-999}, {-999}, 
 
   {2.99}, {0.43}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.1036}, {6.22}, {373}, {83.90}, {3.66}, {21.82}, {-999}, {-999}, {-999}, \
{16.66}, {-999}, {-999}, {-999}, 
 
   {0.56}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.1200}, {7.20}, {432}, {80.24}, {3.76}, {21.57}, {-999}, {-999}, {-999}, \
{14.89}, {-999}, {-999}, {-999}, 
 
   {0.15}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.1364}, {8.18}, {491}, {81.68}, {3.55}, {21.54}, {-999}, {-999}, {-999}, \
{14.68}, {-999}, {-999}, {-999}, 
 
   {0.13}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.1528}, {9.17}, {550}, {86.49}, {4.02}, {-999}, {22.69}, {-999}, {-999}, \
{-999}, {-999}, {-999}, {-999}, 
 
   {0.28}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.1692}, {10.15}, {609}, {83.35}, {3.51}, {-999}, {-999}, {-999}, {-999}, \
{-999}, {-999}, {-999}, {-999}, 
 
   {0.51}, {0.02}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.1856}, {11.13}, {668}, {85.51}, {4.01}, {-999}, {47.30}, {-999}, \
{61.24}, {59.58}, {-999}, {-999}, 
 
   {7.70}, {32.88}, {7.62}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.2019}, {12.12}, {727}, {84.34}, {4.10}, {-999}, {22.61}, {-999}, \
{61.76}, {52.67}, {-999}, {-999}, 
 
   {1.66}, {2.69}, {2.31}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.2183}, {13.10}, {786}, {78.92}, {3.56}, {-999}, {22.47}, {-999}, \
{62.01}, {55.62}, {-999}, {-999}, 
 
   {1.91}, {2.43}, {2.25}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.2347}, {14.08}, {845}, {73.73}, {2.69}, {-999}, {22.04}, {-999}, \
{62.01}, {55.08}, {-999}, {-999}, 
 
   {1.33}, {7.43}, {3.41}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.2511}, {15.07}, {904}, {83.04}, {3.79}, {-999}, {23.38}, {-999}, \
{61.31}, {54.52}, {-999}, {-999}, 
 
   {1.67}, {1.35}, {2.15}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.2675}, {16.05}, {963}, {87.06}, {3.63}, {-999}, {23.13}, {-999}, \
{62.71}, {55.28}, {-999}, {-999}, 
 
   {1.74}, {4.63}, {3.25}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.2839}, {17.03}, {1022}, {82.54}, {3.67}, {-999}, {22.69}, {-999}, \
{62.01}, {56.21}, {-999}, {-999}, 
 
   {1.52}, {-999}, {1.41}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.3003}, {18.02}, {1081}, {78.51}, {2.51}, {-999}, {22.72}, {-999}, \
{62.48}, {57.05}, {-999}, {-999}, 
 
   {1.13}, {6.84}, {3.35}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.3167}, {19.00}, {1140}, {77.98}, {2.53}, {-999}, {22.37}, {-999}, \
{62.46}, {53.66}, {-999}, {-999}, 
 
   {1.55}, {-999}, {1.51}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.3331}, {19.98}, {1199}, {80.91}, {2.43}, {-999}, {22.66}, {-999}, \
{62.55}, {53.13}, {-999}, {-999}, 
 
   {1.53}, {5.98}, {3.49}, {-999}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.3494}, {20.97}, {1258}, {79.69}, {1.56}, {-999}, {23.01}, {-999}, \
{61.75}, {52.15}, {-999}, {-999}, 
 
   {0.99}, {27.05}, {9.68}, {17.47}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.3658}, {21.95}, {1317}, {78.54}, {1.51}, {-999}, {22.52}, {-999}, \
{61.49}, {50.40}, {-999}, {-999}, 
 
   {0.77}, {15.39}, {13.56}, {47.94}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.3822}, {22.93}, {1376}, {76.90}, {1.40}, {-999}, {22.35}, {-999}, \
{62.01}, {55.34}, {-999}, {-999}, 
 
   {9.48}, {49.03}, {13.84}, {7.08}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.3986}, {23.92}, {1435}, {71.58}, {0.29}, {-999}, {22.01}, {-999}, \
{62.01}, {55.76}, {-999}, {-999}, 
 
   {24.79}, {-999}, {20.70}, {49.82}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.4150}, {24.90}, {1494}, {81.06}, {0.64}, {-999}, {22.69}, {-999}, \
{60.52}, {53.72}, {-999}, {-999}, 
 
   {0.67}, {-999}, {6.85}, {36.68}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.4314}, {25.88}, {1553}, {75.73}, {-999}, {-999}, {21.91}, {-999}, \
{61.29}, {52.67}, {-999}, {-999}, 
 
   {0.89}, {-999}, {20.81}, {49.85}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.4478}, {26.87}, {1612}, {82.33}, {-999}, {-999}, {22.30}, {-999}, \
{62.99}, {63.99}, {-999}, {-999}, 
 
   {22.91}, {-999}, {13.03}, {23.65}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.4642}, {27.85}, {1671}, {79.05}, {-999}, {-999}, {21.90}, {-999}, \
{61.82}, {63.47}, {-999}, {-999}, 
 
   {1.46}, {-999}, {9.78}, {8.40}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.4806}, {28.83}, {1730}, {79.11}, {-999}, {-999}, {22.33}, {-999}, \
{61.06}, {63.23}, {-999}, {-999}, 
 
   {18.47}, {-999}, {15.12}, {12.99}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.4969}, {29.82}, {1789}, {94.36}, {-999}, {-999}, {22.99}, {-999}, \
{62.64}, {57.38}, {-999}, {-999}, 
 
   {1.91}, {-999}, {10.00}, {8.31}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.5133}, {30.80}, {1848}, {83.15}, {-999}, {-999}, {22.59}, {-999}, \
{62.96}, {59.62}, {-999}, {-999}, 
 
   {0.84}, {-999}, {8.07}, {22.37}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.5356}, {32.13}, {1928}, {95.12}, {-999}, {-999}, {12.22}, {-999}, \
{62.41}, {60.26}, {-999}, {-999}, 
 
   {0.61}, {-999}, {7.55}, {28.80}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.5461}, {32.77}, {1966}, {81.53}, {-999}, {-999}, {23.77}, {-999}, \
{62.57}, {60.73}, {-999}, {-999}, 
 
   {5.44}, {-999}, {12.01}, {5.39}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.5625}, {33.75}, {2025}, {84.04}, {-999}, {-999}, {23.38}, {-999}, \
{63.96}, {62.50}, {-999}, {-999}, 
 
   {1.71}, {-999}, {24.56}, {49.75}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.5789}, {34.73}, {2084}, {87.72}, {-999}, {-999}, {23.40}, {-999}, \
{62.41}, {62.22}, {-999}, {-999}, 
 
   {20.83}, {-999}, {20.62}, {49.84}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.5953}, {35.72}, {2143}, {87.25}, {-999}, {-999}, {23.30}, {-999}, \
{63.96}, {64.38}, {-999}, {-999}, 
 
   {24.10}, {-999}, {20.68}, {49.83}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.6117}, {36.70}, {2202}, {86.27}, {-999}, {-999}, {23.03}, {-999}, \
{63.96}, {61.89}, {-999}, {-999}, 
 
   {2.01}, {-999}, {9.95}, {5.39}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.6281}, {37.68}, {2261}, {81.21}, {-999}, {-999}, {22.43}, {-999}, \
{62.22}, {61.60}, {-999}, {-999}, 
 
   {19.96}, {-999}, {20.60}, {49.69}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.6444}, {38.67}, {2320}, {84.35}, {-999}, {-999}, {23.08}, {-999}, \
{64.94}, {65.20}, {-999}, {-999}, 
 
   {17.57}, {-999}, {15.23}, {12.11}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.6608}, {39.65}, {2379}, {81.46}, {-999}, {-999}, {23.45}, {-999}, \
{64.62}, {65.69}, {-999}, {-999}, 
 
   {21.93}, {-999}, {20.62}, {49.85}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.6772}, {40.63}, {2438}, {78.42}, {-999}, {-999}, {23.38}, {-999}, \
{66.76}, {67.80}, {-999}, {-999}, 
 
   {20.03}, {-999}, {20.57}, {46.40}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.6936}, {41.62}, {2497}, {88.10}, {-999}, {-999}, {23.38}, {-999}, \
{65.61}, {68.31}, {-999}, {-999}, 
 
   {21.02}, {-999}, {20.67}, {49.83}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.7100}, {42.60}, {2556}, {84.19}, {-999}, {-999}, {23.01}, {-999}, \
{65.92}, {71.95}, {-999}, {-999}, 
 
   {1.83}, {-999}, {28.10}, {49.76}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.7264}, {43.58}, {2615}, {85.28}, {-999}, {-999}, {23.23}, {-999}, \
{66.26}, {70.41}, {-999}, {-999}, 
 
   {19.77}, {-999}, {20.62}, {48.66}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.7428}, {44.57}, {2674}, {83.12}, {-999}, {-999}, {23.25}, {-999}, \
{66.90}, {64.58}, {-999}, {-999}, 
 
   {18.16}, {-999}, {13.46}, {13.52}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.7592}, {45.55}, {2733}, {83.35}, {-999}, {-999}, {22.49}, {-999}, \
{67.23}, {61.19}, {-999}, {-999}, 
 
   {12.16}, {-999}, {20.65}, {49.80}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.7756}, {46.53}, {2792}, {85.15}, {-999}, {-999}, {22.72}, {-999}, \
{66.89}, {61.21}, {-999}, {-999}, 
 
   {1.07}, {-999}, {9.28}, {7.44}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.7919}, {47.52}, {2851}, {86.09}, {-999}, {-999}, {22.04}, {-999}, \
{65.98}, {60.67}, {-999}, {-999}, 
 
   {1.15}, {-999}, {25.58}, {49.81}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.8083}, {48.50}, {2910}, {84.02}, {0.01}, {-999}, {22.44}, {-999}, \
{66.31}, {60.33}, {-999}, {-999}, 
 
   {20.86}, {-999}, {20.70}, {49.79}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.8247}, {49.48}, {2969}, {84.38}, {0.68}, {-999}, {22.53}, {-999}, \
{66.89}, {60.28}, {-999}, {-999}, 
 
   {1.36}, {-999}, {9.23}, {13.90}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.8411}, {50.47}, {3028}, {80.92}, {0.98}, {-999}, {21.92}, {-999}, \
{66.89}, {58.52}, {-999}, {-999}, 
 
   {22.49}, {-999}, {14.45}, {21.24}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.8575}, {51.45}, {3087}, {88.12}, {2.15}, {-999}, {23.19}, {-999}, \
{67.87}, {57.33}, {-999}, {-999}, 
 
   {2.61}, {-999}, {25.67}, {50.82}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.8739}, {52.43}, {3146}, {89.82}, {1.03}, {-999}, {22.05}, {-999}, \
{69.20}, {63.10}, {-999}, {-999}, 
 
   {23.49}, {-999}, {21.61}, {50.64}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.8903}, {53.42}, {3205}, {78.61}, {0.32}, {-999}, {20.95}, {-999}, \
{72.07}, {61.97}, {-999}, {-999}, 
 
   {19.80}, {-999}, {20.45}, {49.76}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.9067}, {54.40}, {3264}, {81.04}, {1.44}, {-999}, {21.23}, {-999}, \
{71.22}, {58.79}, {-999}, {-999}, 
 
   {22.78}, {-999}, {20.47}, {49.78}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.9231}, {55.38}, {3323}, {84.78}, {2.47}, {-999}, {21.42}, {-999}, \
{69.12}, {57.18}, {-999}, {-999}, 
 
   {12.64}, {-999}, {20.51}, {49.83}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.9394}, {56.37}, {3382}, {84.90}, {3.40}, {-999}, {21.28}, {-999}, \
{63.58}, {56.51}, {-999}, {-999}, 
 
   {19.82}, {-999}, {20.47}, {47.69}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.9558}, {57.35}, {3441}, {84.64}, {3.42}, {-999}, {21.49}, {-999}, \
{62.99}, {57.01}, {-999}, {-999}, 
 
   {21.18}, {-999}, {13.97}, {19.64}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.9722}, {58.33}, {3500}, {79.40}, {3.49}, {-999}, {21.13}, {-999}, \
{62.99}, {56.76}, {-999}, {-999}, 
 
   {23.52}, {-999}, {20.50}, {49.77}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{0.9886}, {59.32}, {3559}, {84.19}, {4.36}, {-999}, {21.07}, {-999}, \
{62.14}, {55.90}, {-999}, {-999}, 
 
   {1.35}, {-999}, {18.07}, {49.62}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.0050}, {60.30}, {3618}, {86.43}, {4.63}, {-999}, {21.44}, {-999}, \
{62.01}, {56.42}, {-999}, {-999}, 
 
   {1.31}, {-999}, {9.23}, {15.54}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.0253}, {61.52}, {3691}, {84.77}, {5.22}, {-999}, {21.17}, {-999}, \
{62.99}, {56.63}, {-999}, {-999}, 
 
   {2.39}, {-999}, {10.29}, {10.66}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.0378}, {62.27}, {3736}, {88.63}, {5.06}, {-999}, {21.55}, {-999}, \
{62.35}, {56.74}, {-999}, {-999}, 
 
   {19.46}, {-999}, {20.44}, {47.59}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.0542}, {63.25}, {3795}, {82.24}, {4.79}, {-999}, {21.01}, {-999}, \
{62.61}, {57.10}, {-999}, {-999}, 
 
   {14.93}, {-999}, {15.01}, {10.55}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.0706}, {64.23}, {3854}, {88.99}, {5.70}, {-999}, {21.41}, {-999}, \
{62.01}, {56.16}, {-999}, {-999}, 
 
   {5.57}, {-999}, {12.28}, {6.02}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.0869}, {65.22}, {3913}, {85.28}, {5.37}, {-999}, {21.21}, {-999}, \
{62.37}, {56.26}, {-999}, {-999}, 
 
   {0.63}, {-999}, {8.88}, {20.74}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.1033}, {66.20}, {3972}, {89.28}, {6.14}, {-999}, {21.32}, {-999}, \
{62.01}, {57.08}, {-999}, {-999}, 
 
   {24.13}, {-999}, {20.39}, {49.80}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.1197}, {67.18}, {4031}, {86.54}, {6.09}, {-999}, {20.97}, {-999}, \
{62.99}, {61.84}, {-999}, {-999}, 
 
   {15.58}, {-999}, {16.81}, {7.17}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.1361}, {68.17}, {4090}, {85.09}, {5.98}, {-999}, {20.96}, {-999}, \
{62.78}, {66.23}, {-999}, {-999}, 
 
   {19.06}, {-999}, {11.57}, {16.82}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.1525}, {69.15}, {4149}, {85.23}, {6.49}, {-999}, {21.10}, {-999}, \
{62.38}, {63.47}, {-999}, {-999}, 
 
   {21.17}, {-999}, {20.42}, {49.79}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.1689}, {70.13}, {4208}, {88.93}, {7.21}, {-999}, {21.17}, {-999}, \
{62.01}, {61.60}, {-999}, {-999}, 
 
   {18.22}, {-999}, {13.52}, {15.10}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.1853}, {71.12}, {4267}, {84.86}, {6.82}, {-999}, {20.58}, {-999}, \
{62.12}, {61.88}, {-999}, {-999}, 
 
   {19.54}, {-999}, {20.41}, {49.72}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.2017}, {72.10}, {4326}, {89.09}, {7.07}, {-999}, {21.14}, {-999}, \
{61.92}, {60.54}, {-999}, {-999}, 
 
   {13.86}, {-999}, {20.38}, {49.81}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.2181}, {73.08}, {4385}, {83.31}, {7.13}, {-999}, {20.77}, {-999}, \
{62.01}, {56.72}, {-999}, {-999}, 
 
   {15.26}, {-999}, {15.98}, {8.15}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.2344}, {74.07}, {4444}, {88.92}, {7.91}, {-999}, {21.28}, {-999}, \
{62.01}, {55.47}, {-999}, {-999}, 
 
   {18.19}, {-999}, {12.38}, {14.51}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.2508}, {75.05}, {4503}, {82.75}, {7.42}, {-999}, {21.03}, {-999}, \
{62.27}, {56.34}, {-999}, {-999}, 
 
   {19.92}, {-999}, {20.42}, {49.77}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.2672}, {76.03}, {4562}, {85.91}, {7.63}, {-999}, {21.29}, {-999}, \
{61.15}, {56.35}, {-999}, {-999}, 
 
   {1.46}, {-999}, {9.65}, {7.27}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.2836}, {77.02}, {4621}, {87.08}, {7.77}, {-999}, {21.11}, {-999}, \
{62.12}, {56.67}, {-999}, {-999}, 
 
   {24.03}, {-999}, {20.42}, {49.78}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.3000}, {78.00}, {4680}, {80.85}, {7.26}, {-999}, {21.08}, {-999}, \
{61.39}, {54.79}, {-999}, {-999}, 
 
   {12.18}, {-999}, {20.45}, {49.84}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.3164}, {78.98}, {4739}, {88.95}, {8.49}, {-999}, {21.02}, {-999}, \
{61.65}, {53.45}, {-999}, {-999}, 
 
   {14.08}, {-999}, {20.41}, {49.79}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.3328}, {79.97}, {4798}, {78.42}, {7.42}, {-999}, {20.82}, {-999}, \
{61.04}, {55.70}, {-999}, {-999}, 
 
   {21.29}, {-999}, {20.17}, {44.38}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.3492}, {80.95}, {4857}, {85.93}, {7.70}, {-999}, {21.14}, {-999}, \
{61.40}, {60.78}, {-999}, {-999}, 
 
   {1.81}, {-999}, {25.75}, {49.82}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.3656}, {81.93}, {4916}, {85.98}, {7.94}, {-999}, {20.94}, {-999}, \
{62.01}, {60.13}, {-999}, {-999}, 
 
   {0.96}, {-999}, {23.57}, {49.75}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.3819}, {82.92}, {4975}, {89.32}, {8.35}, {-999}, {21.00}, {-999}, \
{61.04}, {60.42}, {-999}, {-999}, 
 
   {7.63}, {-999}, {13.47}, {5.87}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.3983}, {83.90}, {5034}, {84.02}, {7.82}, {-999}, {21.07}, {-999}, \
{60.78}, {58.16}, {-999}, {-999}, 
 
   {17.92}, {-999}, {14.27}, {14.21}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.4147}, {84.88}, {5093}, {85.27}, {7.58}, {-999}, {21.09}, {-999}, \
{61.04}, {57.30}, {-999}, {-999}, 
 
   {22.31}, {-999}, {20.40}, {49.79}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.4311}, {85.87}, {5152}, {84.47}, {7.31}, {-999}, {21.09}, {-999}, \
{61.04}, {56.12}, {-999}, {-999}, 
 
   {4.56}, {-999}, {11.66}, {5.37}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.4475}, {86.85}, {5211}, {84.52}, {7.56}, {-999}, {21.26}, {-999}, \
{60.27}, {55.07}, {-999}, {-999}, 
 
   {25.39}, {-999}, {14.57}, {29.24}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.4639}, {87.83}, {5270}, {81.01}, {7.08}, {-999}, {20.96}, {-999}, \
{61.80}, {55.59}, {-999}, {-999}, 
 
   {13.13}, {-999}, {17.49}, {6.44}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.4803}, {88.82}, {5329}, {85.35}, {7.89}, {-999}, {21.02}, {-999}, \
{61.04}, {53.08}, {-999}, {-999}, 
 
   {14.41}, {-999}, {20.40}, {49.78}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.4967}, {89.80}, {5388}, {84.52}, {7.97}, {-999}, {20.98}, {-999}, \
{61.38}, {52.81}, {-999}, {-999}, 
 
   {3.85}, {-999}, {11.00}, {4.89}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.5169}, {91.02}, {5461}, {85.06}, {8.27}, {-999}, {20.85}, {-999}, \
{60.52}, {54.22}, {-999}, {-999}, 
 
   {12.23}, {-999}, {15.81}, {6.54}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.5294}, {91.77}, {5506}, {87.01}, {7.87}, {-999}, {21.01}, {-999}, \
{62.01}, {54.43}, {-999}, {-999}, 
 
   {13.03}, {-999}, {20.43}, {49.85}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.5458}, {92.75}, {5565}, {82.08}, {7.67}, {-999}, {20.96}, {-999}, \
{61.13}, {53.41}, {-999}, {-999}, 
 
   {7.18}, {-999}, {13.64}, {5.99}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.5622}, {93.73}, {5624}, {84.77}, {8.09}, {-999}, {20.94}, {-999}, \
{60.66}, {53.76}, {-999}, {-999}, 
 
   {20.16}, {-999}, {20.41}, {45.88}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.5786}, {94.72}, {5683}, {84.31}, {8.27}, {-999}, {20.94}, {-999}, \
{60.57}, {53.53}, {-999}, {-999}, 
 
   {22.06}, {-999}, {19.17}, {41.39}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.5950}, {95.70}, {5742}, {81.68}, {7.91}, {-999}, {20.73}, {-999}, \
{61.04}, {54.79}, {-999}, {-999}, 
 
   {20.31}, {-999}, {20.11}, {45.83}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.6114}, {96.68}, {5801}, {87.18}, {8.24}, {-999}, {21.18}, {-999}, \
{60.78}, {62.65}, {-999}, {-999}, 
 
   {24.46}, {-999}, {20.38}, {49.80}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.6278}, {97.67}, {5860}, {87.22}, {8.16}, {-999}, {21.38}, {-999}, \
{61.24}, {64.86}, {-999}, {-999}, 
 
   {23.01}, {-999}, {20.43}, {49.83}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.6442}, {98.65}, {5919}, {82.32}, {8.33}, {-999}, {21.10}, {-999}, \
{62.01}, {62.46}, {-999}, {-999}, 
 
   {11.54}, {-999}, {20.39}, {49.80}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.6606}, {99.63}, {5978}, {83.87}, {8.26}, {-999}, {21.30}, {-999}, \
{61.55}, {61.87}, {-999}, {-999}, 
 
   {17.91}, {-999}, {12.75}, {13.94}, {-999}, {-999}, {-999}}, {{}}, 
 
  {{1.6769}, {100.62}, {6037}, {81.71}, {8.20}, {-999}, {21.27}, {-999}, \
{61.17}, {59.12}, {-999}, {-999}, 
 
   {18.96}, {-999}, {20.40}, {49.82}, {-999}, {-999}, {-999}}}\
\>"], "Output",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell["\<\
Reads in any file, parses it as required, and writes output file\
\>", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["instring", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
\tfile=\"DCAB.TXT\";
\tpathName = StringJoin[ Directory[],\":\", ToString[file]  ];
\tinStream = OpenRead[pathName];
\t
\tnPrintLines = 2;\t\t\t(* number of lines to print *)
\tnSkipLines  = 0;\t\t\t(* number of lines to skip *)
\tSkip[inStream, String, nSkipLines];
\t
\t
\tinstring1 =Read[inStream, String];
\tinstring2 =Read[inStream, String];
\t \t
\tClose[inStream];\t
\t\t\t\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["OpenRead::noopen: Can't open Project:BICS:data:DCAB.TXT.", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stream: $Failed is not a string, InputStream[ ], or OutputStream[ ].\
\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stream: $Failed is not a string, InputStream[ ], or OutputStream[ ].\
\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stream: $Failed is not a string, InputStream[ ], or OutputStream[ ].\
\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stream: $Failed is not a string, InputStream[ ], or OutputStream[ ].\
\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["delimRules", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
\t(* replacement rules for delimiters *)
\tdelimRules={ \"\\r\" -> \"\\t\",
\t\t\t\t\":\"  -> \"\\t\",
\t\t\t\t\"/\"  -> \"\\t\",
\t\t\t\t\",\"  -> \"\\t\",
\t\t\t\t\" \"  -> \"\\t\"
\t\t\t\t};
\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["String Maniplation", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
tabstring1=StringReplace[instring1, delimRules];\t(* .015 sec *)
tabstring2=StringReplace[instring2, delimRules];  

vars=delimList[tabstring1, \"\\t\"]; \t\t\t\t\t(* slow: .18 sec *)
vals=delimList[tabstring2,\"\\t\"];

nVars=Length[vars];
nVals=Length[vals];

printNumList[vars,6]//MatrixForm
printNumList[vals,6]//MatrixForm


(* numCol=Input[\"total columns to input\"]; *)
varBeg= Input[\"Enter start column number: \"];
varEnd= Input[\"Enter end column number:\"];
varOut=Take[vars,{varBeg,varEnd}];

valBeg= Input[\"Enter start column number: \"];
valEnd= Input[\"Enter end column number:\"];
valOut=Take[vals,{valBeg,valEnd}];


(*
varSel = Input[
\t\t\"Enter list of variable numbers.
\t\t.........USE CURLY BRACES........
\t\t{3,5,6,7,9,12,...} \"];

varOut=vars[[ varSel ]]

valSel = Input[\"Enter list of data column numbers. 
\t\t\t\t.........USE CURLY BRACES........
\t\t\t\t{2,3,4,7,9,12,...} \"];

valOut=vals[[ valSel ]]
*)
\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"nVals\" is \
similar to existing symbol \"nVars\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[OutputFormData["\<\
MatrixForm[printNumList[delimList[StringReplace[Read[$Failed, String], 
 
     {\"\\r\" -> \"\\t\", \":\" -> \"\\t\", \"/\" -> \"\\t\", \",\" -> \
\"\\t\", \" \" -> \"\\t\"}], \"\\t\"], 6]]\
\>", "\<\
printNumList[delimList[StringReplace[Read[$Failed, String], {
 -> \t, : -> \t, / -> \t, , -> \t,   -> \t}], \t], 6]\
\>"], "Output",
 LineSpacing->{1, 0},
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[OutputFormData["\<\
MatrixForm[printNumList[delimList[StringReplace[Read[$Failed, String], 
 
     {\"\\r\" -> \"\\t\", \":\" -> \"\\t\", \"/\" -> \"\\t\", \",\" -> \
\"\\t\", \" \" -> \"\\t\"}], \"\\t\"], 6]]\
\>", "\<\
printNumList[delimList[StringReplace[Read[$Failed, String], {
 -> \t, : -> \t, / -> \t, , -> \t,   -> \t}], \t], 6]\
\>"], "Output",
 LineSpacing->{1, 0},
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
Take::take: Cannot take positions 5 through 8 in 
    delimList[StringReplace[Read[$Failed, String], {
 -> \t, : -> \t, / -> \t, , -> \t,   -> \t}], \t].\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"valBeg\" is \
similar to existing symbol \"varBeg\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"valEnd\" is \
similar to existing symbol \"varEnd\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"valOut\" is \
similar to existing symbol \"varOut\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
Take::take: Cannot take positions 4 through 8 in 
    delimList[StringReplace[Read[$Failed, String], {
 -> \t, : -> \t, / -> \t, , -> \t,   -> \t}], \t].\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Character Manipulation", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
chars2=instring2//Characters;
Map[ Replace[ #, delimRules]& ,  chars2]\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[OutputFormData["\<\
Characters[Read[$Failed, String]]\
\>", "\<\
Characters[Read[$Failed, String]]\
\>"], "Output",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ReadList - Word", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
ClearAll[data]; Remove[data];
lSeparator=\"\";
rSeparator=\"\\n\";

data=ReadList[\"horin100\", Word,
\t\t\t\t\tWordSeparators->{\"\\r\",\"\\t\",\"/\",\":\",\" \"},
\t\t\t\t\tNullWords->True,
\t\t\t\t\tRecordLists->True,
\t\t\t\t\tRecordSeparators->{\"\\n\"}\t\t\t\t
\t\t\t\t\t];
\t\t\t\t\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["Do[ Print[ data[[i]]//Length ], {i,1,10}]", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\

namesVar= Take[data, Length[row1] ]  (*cannot use ToExpression on var names*)\
\t\t\t\t\t\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
row1
\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ReadList - Record", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\

data=ReadList[\"horin50\",Record];
Print[\"ROWS: \", Length[data]  ];
Print[ \"1st ROW \",lineSeparator, data[[1]]  ];
Print[ \"2nd ROW \",lineSeparator, data[[2]]  ];\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
ROWS: 21
1st ROW ----------------------------------------------------------------------\
--------------

 
  Date\tTime\thr\tmin\tsec\tBP\tICP\tCVP\tPAP\tSVO2_J\tSVO2_VC\tCBF_1\tCBF_2\t\
TCD\tSaO2\tETPCO2\tResp_P\tResp_V\tEKG\tEEG_1\tEEG_2\t
2nd ROW ----------------------------------------------------------------------\
--------------

 
  
9/30/94\t6:13:37 PM\t0.0556\t3.33\t200\t84.77\t4.90\t21.92\t\t\t\t17.63\t\t\t\
\t\t\t\t\t\t\t\
\>", "Print",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["test1", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\

(* pp386 - turn off message about new symbol creation for var names *)

\tfile=\"hoang.dos\";
\tpathName = StringJoin[ Directory[],\":\", ToString[file]  ];
\tinStream = OpenRead[pathName];
\t
\tnPrintLines = 2;\t\t\t(* number of lines to print *)
\tnSkipLines  = 0;\t\t\t(* number of lines to skip *)
\tSkip[inStream, String, nSkipLines];
\tPrint[ lineSeparator];
\t
\tdelim=\"\\t\";
\t
\t\tinstring1\t=Read[inStream, String];
\t\tdelimpos1\t=StringPosition[instring1, delim];
\t\tdelims1\t\t=Length[ delimpos1 ];\t
\t\tPrint[\"DELIMITERS: \", delims1 ];
\t\toutstring1\t=StringReplace[instring1,delim->\"*\"];
\t\tPrint[outstring1];
\t\tPrint[ lineSeparator];


\t\tinstring2\t=Read[inStream, String];
\t\tdelimpos2\t=StringPosition[instring2, delim];
\t\tdelims2\t\t=Length[ delimpos2 ];\t
\t\tPrint[\"DELIMITERS: \", delims2 ];
\t\toutstring1\t=StringReplace[instring2,delim->\"*\"];
\t\tPrint[outstring2];
\t\tPrint[ lineSeparator];
\t\t
\t\t\t\t
\t\tIf[ delims1 != delims2, Print[\"DELIMITERS: unequal number in row1 and \
row2\"], Null];
\t\t\t\t\t
\tClose[inStream];\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["test2", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
\t

\tfile=\"hoang.dos\";
\tpathName = StringJoin[ Directory[],\":\", ToString[file]  ];
\tinStream = OpenRead[pathName];
\t
\tnPrintLines = 2;\t\t\t(* number of lines to print *)
\tnSkipLines  = 0;\t\t\t(* number of lines to skip *)
\tSkip[inStream, String, nSkipLines];
\tPrint[ lineSeparator];
\t

\tinstring\t=Read[inStream, String];
\tdelim = \"\\t\"
\tdelimpos = StringPosition[instring, delim];
\tdelims = Map[ First, delimpos ];
\t
\tPrint[\"DELIMS: \",   Length[ delims ] ];
\toutstring = StringReplace[instring,delim->\"*\"];
\tPrint[outstring];\t

\tvals={};
\tvals = Append[ vals, StringTake[instring,{1, delims[[1]]-1 }]  ];

\tFor[k=0, k < Length[delims], k++,
\t\tIf[ ( delims[[k+1]] - delims[[k]] ) >1,\t\t
\t\t(*non-adjacent delims *)
\t\t\tvals = Append[ vals, StringTake[ 
\t\t\t\t\t\t\tinstring, {delims[[k]]+1, delims[[k+1]]-1 }]  ],
\t\t(*else missing data*)
\t\t\tvals = Append[ vals, ToString[ -999] ]
\t\t\t]
\t]
\t
\tPrint[vals];
\tPrint[ printList[vals,8] //TableForm ]


\tClose[inStream];
\t\t

\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["test3", "Text",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
\t(*\t
\tSetStreamPosition[inStream, 0];
\tline = Read[inStream, String]\t\t\t(* fstream *)
\tlineString = StringToStream[line];\t\t(* instrstream *)
\tvar = ReadList[lineString, Text];\t\t(* parse as text *)
\tClose[lineString];
\t
\tnumvars = Length[var];
\tPrint[\"VARS: \",numvars];
\tFor[i=1, i<=numvars,i++, 
\t\t\tPrint[i,\"\\t\\t\",var[[i]]  ]
\t\t\t]
\t*)
\t
(*
\tFor[ i=1, i<=150, i++,
\t\t\tword = Read[inStream, Word ];
\t\t\twordval = ToExpression[Read[inStream, Word] ];
\t\t\t
\t\t\tIf[ !NumberQ[wordval], 
\t\t\t\tnVars++, 
\t\t\t\tNull
\t\t\t\t]
\t\t]
*)
\t
\t\tstrstream = StringToStream[word];\t(* string stream *)
\
\>", "Input",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MAIN", "Section",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["Input File Format", "Subsubsection",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
FORMAT of files
* Saved as MACINTOSH format from BBEdit
* Number of variables must match number of valid data columns
* ASCII file
* TAB delimited
* NL at end of each line

FILE HEADER
* First row:  contains two numbers: number of columns (tab) number of rows
* Second row:  variable names (separated by tabs)
* Third and later rows:  data columns. 

NAMES of variables and files
* VALID - Alphanumeric string of any length, beginning with character, or \
containing underscore \"_\"
\t\t\t\t\t\t\t\tEEG,  EEG1, EEG_1\t\t\t
* INVALID - containing operator symbols (minus, plus, division, decimal \
point,equals) :
\t\t\t\t\t\t\t\tEEG.1, EEG-1, EEG+1, EEG/1, EEG=
*May not begin with a number or operator
\t\t\t\t\t\t\t\t1EEG


\
\>", "SmallText",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["startup", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
(* Input[\"Enter File Name: \"] //ToString; *)
(* streams:  String=linebuf \\n; Word= wordbuf \\t *)
(*  !!filename\t\tdisplay contents *)

(* Put relevant data and package files in path *)
(* MAC *)
$Path = Join[$Path, {\"PB:Apps:Mathematica:Packages:Statistics \"}];

(* WIN  
$Path = Join[$Path, {\"c:\\\\richards\\\\wnmath22\\\\packages\\\\numerica\\\\\
\"}];
$Path = Join[$Path, {\"c:\\\\richards\\\\wnmath22\\\\packages\\\\graphics\\\\\
\"}];
$Path = Join[$Path, \
{\"c:\\\\richards\\\\wnmath22\\\\packages\\\\preload\\\\\"}];
$Path = Join[$Path, {\"c:\\\\richards\\\\bics\"}];
filePath = \"c:\\\\richards\\\\bics\\\\\"
*)


(* -------- SET DIRECTORY -------------- *)
(*FileInformation[\"file\"] *)
SetDirectory[\"Project:BICS:data\"];



(*---------- TURN OFF SYMBOL WARNING pp386 SWolf ----*)
Off[General::newsym];


lineSeparator =
\"----------------------------------------------------------------------------\
--------\\r\";


(* ------DEFAULT VARIABLE NAMES-------*)
var = {\t
\t\tHours, var2, var3, var4, var5, var6, var7, var8, var9, var10,
\t\tvar11, var12, var13, var14, var15, var16, var17, var18, var19, var20,
\t\tvar21, var22, var23, var24
\t\t};


\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"var12\" is \
similar to existing symbol 
    \"var2\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"var13\" is \
similar to existing symbol 
    \"var3\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"var14\" is \
similar to existing symbol 
    \"var4\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stop: Further output of General::spell1 will be suppressed during \
this calculation.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["dir", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
Clear[dir];
dir = Module[{dirname,dirs,files,numfiles},\t
\t\tdirname  = StringJoin[\"DIRECTORY:  \", Directory[] ];
\t\tfiles \t = FileNames[];
\t\tdirs     = FileNames[\"*.*\"];
\t\tnumfiles = StringJoin[\"FILES:      \", ToString[Length[files] ] ];
\t\tnumdirs\t = StringJoin[\"DIRS :      \", ToString[Length[dirs] ] ];
\t\t\t\t
\t\tPrint[dirname];
\t\tPrint[numdirs];
\t\tPrint[numfiles];
\t\t
\t\tprintList[files,6]//MatrixForm
\t\t];\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"dirs\" is similar \
to existing symbol 
    \"dir\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
DIRECTORY:  Project:BICS:data
DIRS :      3
FILES:      17\
\>", "Print",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["printList[ list, width]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
(* pad item list so the number of columns is integer divisor of 
total number of items *)

Clear[printNumList];
printNumList[ lis_List, printWidth_Integer ]:=Module[{},
\t
\twidth=printWidth;\t
\tlen=Length[lis];
\tnulls = width - Mod[ len,width];
\tnulltable = Table[\"-\", {nulls}];
\tlisPadded=Append[lis,nulltable]//Flatten;
\t\t
\tindex=Table[i, {i, 1,Length[lisPadded] } ];

\tpairs=Transpose[{index,lisPadded}];
\tlines=Partition[pairs,width];
\tReturn[lines]
\t]\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\

Clear[printList];
printList[ lis_List, printWidth_Integer ]:=Module[{},
\t
\twidth = printWidth;
\tlen=Length[lis];
\t
\tnulls = width - Mod[ len,width];
\tnulltable = Table[\"-\", {nulls}];
\tlisPadded=Append[lis,nulltable]//Flatten;
\tlines=Partition[lisPadded,width];
\tReturn[lines]
\t]
\t
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Read", "Subsubsection",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["readFileOut[ \"file\"]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["extra", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
(* EXTRA FUNCTIONS

----- calculate time var -----
\tbegT   =  data[[1,1]] ;
\tendT   =  data[[dataRows,1]] ;
\tdeltaT = endT-begT;
\tPrint[\"Elapsed time: \\t\",deltaT];

----- display index,varname,firstval -----

outTable=Table[ StringJoin[
\t\"[\",ToString[i],\"] \",varNames[[i]],\"\\t\",ToString[data[[1,i]] ]  ],
\t{i,1,nCols}
\t];
\t
Return[ printList[outTable,3] //MatrixForm];
*)
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
readFileOut[fileName_String]:=Module[{stream1,varFormat,dataFormat,dataRows},
\t
\tClear[nRows,nCols,varNames,data];

\tstream1=OpenRead[fileName];
\tSetStreamPosition[stream1,0];

(*----- read header -----*)
\tnRows=Read[stream1, Number];
\tnCols=Read[stream1, Number];

\tPrint[\"nRows: \\t\\t\\t\", nRows];
\tPrint[\"nCols: \\t\\t\\t\", nCols];
\t
\tvarFormat=Table[Word, {nCols}];
\tdataFormat=Table[Number,{nCols}];

(*----- read var names -----*)
\tvarNames=Read[ stream1, varFormat];
\tPrint[\"Vars: \\t\\t\\t\", varNames ];
\t
(*---- read in data -----*)
\tPrint[\"reading rows...\"];
\tdataRows=0;
\tdata={{}};\t\t\t\t(* create empty array *)
\tFor[i=1, i<=nRows,i++,
\t\tline= Read[ stream1, dataFormat];
\t\t
\t\tIf[ line[[1]] != -999,
\t\t\tAppendTo[data, line];\t(* probably spends much time
\t\t\t\t\t\t\t\t\t\tallocating memory here... *)
\t\t\tdataRows++
\t\t\t,Null
\t\t\t];\t\t
\t\tIf[ Mod[i,500]==0, Print[\"\\t\\t\\t\\t\",i] ];
\t\t];
\t\t
\tnRows = dataRows;\t
\tPrint[\"\\t\\t\\t\\t\",nRows];
\t\t
(*----- drop the first,empty, member of data -----*)
\tdata= Drop[data,1];\t

\tPrint[\"\\t\\t\\t\\t\",\"DONE READING FILE\"];

];
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell: Possible spelling error: new symbol name \"line\" is similar \
to existing symbols 
    {Line, lines}.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["readFileReg[ \"file\"]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
readFileReg[fileName_String]:=Module[{stream1,varFormat,dataFormat,dataRows},
\t
\tClear[nRows,nCols,nCases,nVars,varNames,data];
\t
\tstream1=OpenRead[fileName];
\tSetStreamPosition[stream1,0];

(*----- read header -----*)
\tnRows  = Read[stream1, Number];
\tnCols  = Read[stream1, Number];
\tnCases = Read[stream1,Number];
\tnVars  = Read[stream1,Number];
\t
\tPrint[\"nRows: \\t\\t\\t\", nRows];
\tPrint[\"nCols: \\t\\t\\t\", nCols];
\tPrint[\"nCases:\\t\\t\\t\", nCases];
\tPrint[\"nVars: \\t\\t\\t\", nVars];
\t
\tvarFormat=Table[Word, {nVars}];
\tdataFormat=Table[Number,{nCols}];

(*----- read var names -----*)
\tvarNames=Read[ stream1, varFormat];
\tPrint[\"varNames: \\t\\t\", varNames ];
\t
(*---- read in data -----*)
\tPrint[\"reading rows...\"];
\tdataRows=0;
\tdata={{}};\t\t\t\t(* create array *)
\tFor[i=1, i<=nRows,i++,
\t\tline= Read[ stream1, dataFormat];
\t\t
\t\tIf[ line[[1]] != -999,
\t\t\tAppendTo[data, line]; dataRows++,
\t\t\tNull
\t\t\t];\t\t
\t\tIf[ Mod[i,500]==0, Print[\"\\t\\t\\t\\t\",i] ];
\t\t];
\t\t
\tnRows = dataRows;\t
\tPrint[\"\\t\\t\\t\\t\",nRows];
\t\t\t
(*----- drop the first,empty, member of data -----*)
\tdata= Drop[data,1];\t
\t
\tPrint[\"\\t\\t\\t\\t\",\"DONE READING FILE\"]\t

];
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"nCases\"
     is similar to existing symbol \"Cases\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["readFileLag[ \"file\"]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
readFileLag[fileName_String]:=Module[{stream1,varFormat,dataFormat,dataRows},
\t
\tClear[nRows,nCols,nCases,nVars,varNames,data];
\t
\tstream1=OpenRead[fileName];
\tSetStreamPosition[stream1,0];

(*----- read header -----*)
\tnRows  = Read[stream1, Number];
\tnCols  = Read[stream1, Number];
\tnCases = Read[stream1,Number];
\tnVars  = Read[stream1,Number];
\t
\tPrint[\"nRows: \\t\\t\\t\", nRows];
\tPrint[\"nCols: \\t\\t\\t\", nCols];
\tPrint[\"nCases:\\t\\t\\t\", nCases];
\tPrint[\"nVars: \\t\\t\\t\", nVars];
\t
\tvarFormat=Table[Word, {nVars}];
\tdataFormat=Table[Number,{nCols}];

(*----- read var names -----*)
\tvarNames=Read[ stream1, varFormat];
\tPrint[\"varNames: \\t\\t\", varNames ];
\t
(*---- read in data -----*)
\tPrint[\"reading rows...\"];
\tdataRows=0;
\tdata={{}};\t\t\t\t(* create array *)
\tFor[i=1, i<=nRows,i++,
\t\tline= Read[ stream1, dataFormat];
\t\t
\t\tIf[ line[[1]] != -999,
\t\t\tAppendTo[data, line]; dataRows++,
\t\t\tNull
\t\t\t];\t\t
\t\tIf[ Mod[i,500]==0, Print[\"\\t\\t\\t\\t\",i  ] ];
\t\t];
\t\t
\tnRows = dataRows;\t
\tPrint[\"\\t\\t\\t\\t\",nRows];
\t\t\t
(*----- drop the first,empty, member of data -----*)
\tdata= Drop[data,1];\t
\t
\tPrint[\"\\t\\t\\t\\t\",\"DONE READING FILE\"]\t

];
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Select", "Subsubsection",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["selColsRows[ data,c1,c2,r1,r2]    -> v1, v2", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
selColsRows[data_,c1_,c2_,row1_,row2_]:=Module[{},

\t\tv1=v2={};
\t\tFor[ i=row1, i<=row2, i++,
\t\t\t
\t\t\tIf[ (data[[i,c1]] != -999) && (data[[i,c2]] != -999),
\t\t\t\tAppendTo[ v1, data[[i,c1]] ];
\t\t\t\tAppendTo[ v2, data[[i,c2]] ];
\t\t\t\t];
\t\t\t];
\t\t
\t\tReturn[ {v1, v2}];
\t\t]
\t\t\t
\t\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["selCaseCols3[ data,caseNo,c1,c2,c3]    -> vars, v1, v2, v3", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
Clear[selCaseCols3];
selCaseCols3[data_,caseNo_,c1_,c2_,c3_]:=Module[{i,v1,v2,v3,vars},

v1=v2=v3={};
For[ i=1, i<=nRows, i++,

\tIf[ data[[i,1]] == caseNo, 
\t\tvars = {data[[i,2]], data[[i,3]] };
\t\tIf[data[[i,c1]] != -999 && data[[i,c2]] != -999 &&  data[[i,c3]] != -999,
\t\t\tAppendTo[ v1, data[[i,c1]] ];
\t\t\tAppendTo[ v2, data[[i,c2]] ];
\t\t\tAppendTo[ v3, data[[i,c3]] ]\t
\t\t  ];
\t  ];
   ];
   
{vars,v1, v2, v3 }//Return
];\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"vars\" is similar \
to existing symbol 
    \"var\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["selCaseCols2[ data,caseNo,c1,c2,c3]    -> vars, v1, v2", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
Clear[selCaseCols2];
selCaseCols2[data_,caseNo_,c1_,c2_]:=Module[{i,v1,v2,vars},

v1=v2={};
For[ i=1, i<=nRows, i++,

\tIf[ data[[i,1]] == caseNo, 
\t\tvars = {data[[i,2]], data[[i,3]] };
\t\tIf[data[[i,c1]] != -999 && data[[i,c2]] != -999,
\t\t\tAppendTo[ v1, data[[i,c1]] ];
\t\t\tAppendTo[ v2, data[[i,c2]] ];
\t\t  ];
\t  ];
   ];
   
{vars,v1, v2 }//Return
];\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["selColsRowsDeriv[ data,c1,c2,r1,r2, d1,d2]  -> v1, v2", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
(* \tc1,c2:\tcolumn1, column2
\tr1,r2:\trow1, row2
\td1,d2:\tfirst, second derivative cutoff values
*)

selColsRowsDeriv[data_,c1_,c2_,row1_,row2_,slope1_, slope2_]:=Module[{},

\t(*----- eliminate missing data -----*)
\tv1=v2={};
\tFor[ i=row1, i<=row2, i++,
\t\t
\t\tIf[ (data[[i,c1]]!=-999) && (data[[i,c2]]!=-999),
\t\t\tAppendTo[ v1, data[[i,c1]] ];
\t\t\tAppendTo[ v2, data[[i,c2]] ];
\t\t\t];
\t\t];
\t\t
\t(*----- 1st & 2nd derivative test -----*)
\tvec1=vec2={};
\tFor[i=2, i<= Length[v2]-1, i++,

\t\tFLAG=1;\t
\t\tIf[ Abs[v2[[i+1]] - v2[[i]]  ]  >= slope1,  \t\t\tFLAG=0 ];
\t\tIf[ Abs[v2[[i]] - v2[[i-1]]  ]  >= slope1,  \t\t\tFLAG=0 ];
\t\tIf[ Abs[v2[[i+1]] - 2 v2[[i]] + v2[[i-1]] ]  >= slope2,\tFLAG=0 ];
\t
\t\tIf[ FLAG != 0, \tAppendTo[ vec1, v1[[i]]  ];
\t\t\t\t\t\tAppendTo[ vec2, v2[[i]]\t ], \t];
\t
\t];

Return[{vec1,vec2}];

]
\t\t\t
\t\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["plotVecs[ v1,v2]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
plotVecs[v1_, v2_]:=Module[{},

\tminV1=Min[ v1 ];
\tmaxV1=Max[ v1 ];
\tlenV1=Length[v1];
\t
\t(*need min 5 non-missing points to plot *)\t
\t\tIf[  lenV1 < 5, Print[\"N too small to plot\"],\t
\t\t
\t\t\tplotdat=Transpose[ {v1,v2}];\t
\t\t\txlabel = \"v1\";
\t\t\tylabel = \"v2\";
\t\t\tplotname=StringJoin[\"N: \",ToString[lenV1] ];
\t\t\t
\t\t\tListPlot[ plotdat,
\t\t\t\tPlotStyle->{PointSize[.001]},
\t\t\t\tPlotRange->{minV1, maxV1};
\t\t\t\tDefaultFont :> {\"Courier\",8},
\t\t\t\tFrame -> True,
\t\t\t\tPlotLabel-> plotname,
\t\t\t\tFrameLabel->{xlabel,ylabel},
\t\t\t\tRotateLabel->False
\t\t\t\t]
\t\t\t]\t\t
\t]

\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"ylabel\"
     is similar to existing symbol \"xlabel\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["plotVecsMD[ v1,v2]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
plotVecsMD[vec1_, vec2_]:=Module[{},

\t\tv1=v2={};
\t\tFor[ i=1, i<=Length[vec1], i++,
\t\t\t
\t\t\tIf[ (vec1[[i]] != -999) && (vec2[[i]] != -999),
\t\t\t\tAppendTo[ v1, vec1[[i]] ];
\t\t\t\tAppendTo[ v2, vec2[[i]] ];
\t\t\t\t];
\t\t\t];
\t\t
\tminV1=Min[ v1 ];
\tmaxV1=Max[ v1 ];
\tlenV1=Length[v1];
\t
\t
\t(*need min 5 non-missing points to plot *)\t
\t\tIf[  lenV1  < 5, Print[\"N too small to plot\"],\t
\t\t
\t\t\tplotdat=Transpose[ {v1,v2}];\t
\t\t\txlabel = \"v1\";
\t\t\tylabel = \"v2\";
\t\t\tplotname=StringJoin[\"N: \",ToString[lenV1] ];
\t\t\t
\t\t\tListPlot[ plotdat,
\t\t\t\tPlotStyle->{PointSize[.001]},
\t\t\t\tPlotRange->{minV1, maxV1};
\t\t\t\tDefaultFont :> {\"Courier\",8},
\t\t\t\tFrame -> True,
\t\t\t\tFrameLabel->{xlabel,ylabel},
\t\t\t\tPlotLabel-> plotname,\t\t\t\t
\t\t\t\tRotateLabel->False
\t\t\t\t]
\t\t\t]\t\t
\t]

\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["plotCols[ data, c1,c2, r1, r2]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
plotCols[data_,c1_, c2_, r1_, r2_]:=Module[{},

\t{v1,v2} = selColsRows[data,c1,c2,r1,r2];

\tminV1=Min[ v1 ];
\tmaxV1=Max[ v1 ];
\tlenV1=Length[v1];
\t
\t(*need min 5 non-missing points to plot *)\t
\t\tIf[  lenV1 > 5,\t
\t\t
\t\t\tplotdat=Transpose[ {v1,v2}];\t
\t\t\txlabel = varNames[[c1]];
\t\t\tylabel = varNames[[c2]];
\t\t\tplotname=StringJoin[\"N: \",ToString[lenV1] ];\t\t
\t\t\t
\t\t\tListPlot[ plotdat,
\t\t\t\tPlotStyle->{PointSize[.001]},
\t\t\t\tPlotRange->{minV1, maxV1};
\t\t\t\tDefaultFont :> {\"Courier\",8},
\t\t\t\tFrame -> True,
\t\t\t\tFrameLabel->{xlabel,ylabel},
\t\t\t\tPlotLabel-> plotname,\t\t\t\t\t\t
\t\t\t\tRotateLabel->False
\t\t\t\t]
\t\t\t]\t\t
\t];

\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["plotColsDeriv[ data, c1,c2, r1, r2, d1,d2]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
plotColsDeriv[data_,c1_, c2_, r1_, r2_, slope1_, slope2_]:=Module[{},

\t{v1,v2} = selColsRowsDeriv[data,c1,c2,r1,r2, slope1, slope2];

\tminV1=Min[ v1 ];
\tmaxV1=Max[ v1 ];
\tlenV1=Length[v1];
\t
\t(*need min 5 non-missing points to plot *)\t
\t\tIf[  lenV1 > 5,\t
\t\t
\t\t\tplotdat=Transpose[ {v1,v2}];\t
\t\t\txlabel = varNames[[c1]];
\t\t\tylabel = varNames[[c2]];
\t\t\tplotname=StringJoin[\"N: \",ToString[lenV1] ];
\t\t\t
\t\t\tListPlot[ plotdat,
\t\t\t\tPlotStyle->{PointSize[.001]},
\t\t\t\tPlotRange->{minV1, maxV1};
\t\t\t\tDefaultFont :> {\"Courier\",8},
\t\t\t\tFrame -> True,
\t\t\t\tFrameLabel->{xlabel,ylabel},
\t\t\t\tPlotLabel-> plotname,\t\t\t\t\t\t
\t\t\t\tRotateLabel->False
\t\t\t\t]
\t\t\t]\t\t
\t];

\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["plotSlopesR2[vars,v1,v2,v3]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
plotSlopesR2[vars_,v1_, v2_, v3_]:=
\tModule[{Nvalid,tCol,rCol,bCol,bMin,bMax,xMin,xMax,xRange,
\t\t\tyMin,yMax,rLocal,theta,xLocal,yLocal,ptsEnd,ptsCenter,points,lines,
\t\t\txlabel,ylabel,plotlabel
\t\t\t},

\t\tNvalid = Length[v1];
\t\t\t\t
\t\tIf[ Nvalid <=3, Null,
\t\t\t\ttCol = v1;
\t\t\t\tbCol = v2;
\t\t\t\trCol = v3;

\t\t\t\ttMin  = Min[tCol];
\t\t\t\ttMax  = Max[tCol];\t\t\t\t
\t\t\t\t
\t\t\t\tbMin  = Min[bCol];
\t\t\t\tbMax  = Max[bCol];
\t\t\t
\t\t\t\txMin  = Min[tCol];
\t\t\t\txMax  = Max[tCol];
\t\t\t\txRange = xMin-xMax;
\t\t\t\t
\t\t\t\tyMin  = Min[rCol];
\t\t\t\tyMax  = Max[rCol];
\t\t\t\t(*----------------------------*)
\t\t\t\trLocal   = 1.0;\t\t\t\t\t\t(* radius of circle *)
\t\t\t\ttheta  = - ArcTan[bCol];
\t\t\t\txLocal = rLocal Cos[theta];
\t\t\t\tyLocal = rLocal Sin[theta]/xRange;\t(* scale y by xRange *)
\t
\t\t\t\tptsEnd = Table[{{ tCol[[i]] + xLocal[[i]], rCol[[i]] + yLocal[[i]] },
\t\t\t\t\t\t\t { tCol[[i]] - xLocal[[i]], rCol[[i]] - yLocal[[i]] }},
\t\t\t\t\t
\t\t\t\t\t\t\t{i,1,Nvalid}
\t\t\t\t\t\t\t];
\t\t\t\t\t\t\t
\t\t\t\tptsCenter = Table[\t{ tCol[[i]], rCol[[i]] },
\t\t\t\t\t\t\t\t{i,1,Nvalid}
\t\t\t\t\t\t\t\t];

\t\t\t\tpoints = Prepend[Map[Point,ptsCenter],  AbsolutePointSize[3]  ];
\t\t\t\tlines =  Prepend[Map[Line, ptsEnd],  AbsoluteThickness[.001]  ];
\t\t\t\t(*----------------------------*)
\t\t\t\txlabel = \"Hours\";
\t\t\t\tylabel = \"R^2\";\t
\t\t\t\t\t\t\t
\t\t\t\tplotlabel = StringJoin[\tvarNames[[ vars[[1]]  ]],
\t\t\t\t\t\t\t\t\t\t\" vs \",
\t\t\t\t\t\t\t\t\t\tvarNames[[  vars[[2]] ]],
\t\t\t\t\t\t\t\t\t\t\" // N:\",
\t\t\t\t\t\t\t\t\t\tToString[Nvalid],
\t\t\t\t\t\t\t\t\t\t\"   B:\",
\t\t\t\t\t\t\t\t\t\tToString[PaddedForm[bMin,{5,4}]],
\t\t\t\t\t\t\t\t\t\t\"...\",
\t\t\t\t\t\t\t\t\t\tToString[PaddedForm[bMax,{5,4}]]
\t\t\t\t\t\t\t\t\t\t];
\t\t\t\t\t\t\t\t\t\t
\t\t\t\t\t
\t\t\t\tShow[ Graphics[points], Graphics[lines],
\t\t\t\t\t\tPlotRange->{{tMin,tMax},{-0.1,1.0}},
\t\t\t\t\t\tDefaultFont :> {\"Courier\",8},
\t\t\t\t\t\tFrame -> True,
\t\t\t\t\t\tFrameLabel->{xlabel,ylabel},
\t\t\t\t\t\tRotateLabel -> False,
\t\t\t\t\t\tPlotLabel->FontForm[plotlabel,{\"Courier\",8}]
\t\t\t\t\t ]
\t\t\t\t]
\t\t\t]
\t\t\t
\t\t\t(*
\t\t\tPlotRange->{{xMin-1,xMax+1},{-0.1,1.0}},
\t\t\t*)
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"rCol\" is similar \
to existing symbol 
    \"tCol\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell: Possible spelling error: new symbol name \"bCol\" is similar \
to existing symbols 
    {rCol, tCol}.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"bMin\" is similar \
to existing symbol 
    \"Min\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"bMax\" is similar \
to existing symbol 
    \"Max\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stop: Further output of General::spell1 will be suppressed during \
this calculation.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell: Possible spelling error: new symbol name \"xMin\" is similar \
to existing symbols 
    {bMin, Min}.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell: Possible spelling error: new symbol name \"xMax\" is similar \
to existing symbols 
    {bMax, Max}.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stop: Further output of General::spell will be suppressed during \
this calculation.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["plotLagR2[vars,v1,v2]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
plotLagR2[vars_,v1_, v2_]:=
\tModule[{Nvalid,tCol,rCol,xMin,xMax,
\t\t\tyMin,yMax,rLocal,theta,xLocal,yLocal,ptsEnd,ptsCenter,points,lines,
\t\t\txlabel,ylabel,plotlabel
\t\t\t},

\t\tNvalid = Length[v1];
\t\t\t\t
\t\tIf[ Nvalid <=3, Null,
\t\t\t\t\t\t\t
\t\t\t\txMin  = Min[v1];
\t\t\t\txMax  = Max[v1];
\t\t\t\t
\t\t\t\tyMin  = Min[v2];
\t\t\t\tyMax  = Max[v2];
\t\t\t\t
\t\t\t\ti=1;
\t\t\t\tWhile[  v2[[i]] < yMax, i++];
\t\t\t\tlagVal = v1[[i]];\t
\t\t\t\t
\t\t\t\t(*----------------------------*)
\t\t\t\txlabel = \"Lag\";
\t\t\t\tylabel = \"R^2\";\t
\t\t\t\t\t\t\t
\t\t\t\tplotlabel = StringJoin[\tvarNames[[ vars[[1]]  ]],
\t\t\t\t\t\t\t\t\t\t\" vs \",
\t\t\t\t\t\t\t\t\t\tvarNames[[  vars[[2]] ]],
\t\t\t\t\t\t\t\t\t\t\" // N:\",
\t\t\t\t\t\t\t\t\t\tToString[Nvalid],
\t\t\t\t\t\t\t\t\t\t\"  R^2 :\",
\t\t\t\t\t\t\t\t\t\tToString[PaddedForm[yMax,{5,4}]],
\t\t\t\t\t\t\t\t\t\t\"  Lag: \",
\t\t\t\t\t\t\t\t\t\tToString[ lagVal ]
\t\t\t\t\t\t\t\t\t\t];

\t\t\t\tplotdat=Transpose[ {v1,v2}];\t

\t\t\t\tListPlot[ plotdat,
\t\t\t\t\tPlotStyle->{PointSize[.001]},
\t\t\t\t\t(* PlotRange->{{xMin,xMax},{-0.1,1.0}},  *)
\t\t\t\t\tDefaultFont :> {\"Courier\",8},
\t\t\t\t\tFrame -> True,
\t\t\t\t\tFrameLabel->{xlabel,ylabel},
\t\t\t\t\tRotateLabel->False,
\t\t\t\t\tPlotLabel->FontForm[plotlabel,{\"Courier\",8}]
\t\t\t\t\t]
\t\t\t]
\t]
\t\t\t
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["plotFile[  \" *.ext \" ]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
plotFile[ filename_String ]:=Module[{extension},

\textension = StringTake[filename,-3];
\t
\t
\t(*---   *.OUT  ----*)
\tIf[ StringMatchQ[ extension, \"out\" ],
\t\treadFileOut[filename];

\t\tFor[ k=2, k<=nCols,k++,
\t\t\tplotCols[data,1,k,1,nRows]
\t\t\t]
\t\t];
\t
\t
\t(*---   *.REG   ---*)
\tIf[ StringMatchQ[ extension, \"reg\" ],
\t\treadFileReg[filename];
\t
\t\tFor[ k=1, k<=nCases,k++,
\t\t\t{vars,v1,v2,v3}=selCaseCols3[data,k,4,5,6];
\t\t
\t\t\tplotSlopesR2[vars,v1,v2,v3]
\t\t\t]
\t\t];
\t\t
\t
\t(*---   *.LAG   ---*)
\tIf[ StringMatchQ[ extension, \"lag\" ],
\t\treadFileLag[filename];
\t
\t\tFor[ k=1, k<=nCases,k++,
\t\t\t{vars,v1,v2}=selCaseCols2[data,k,4,5];
\t\t
\t\t\tplotLagR2[vars,v1,v2]
\t\t\t]
\t\t];\t
\t\t
\t]
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Regress", "Subsubsection",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["Tcrit[ dof ]                           (p<.005)", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
(*
p005=ReadList[\"Mac:BICS:p005\",{Number,Number}];
mu005 = Transpose[p005] [[1]];
t005 = Transpose[p005] [[2]];  *)\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\

muCrit = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, \
20, 21, 22, 
23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 
72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 105, 110, 115, 
120, 125, 130, 135, 140, 145, 150, 160, 170, 180, 190, 200, 250, 300, 350, 
400, 450, 500, 600, 700, 800, 900, 1000, 1000000};\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\

t005 = {63.657, 9.925, 5.841, 4.604, 4.032, 3.707, 3.499, 3.355, 3.25, 
  3.169, 3.106, 3.055, 3.012, 2.977, 2.947, 2.921, 2.898, 2.878, 2.845, 2.845, 
  2.831, 2.819, 2.807, 2.797, 2.787, 2.779, 2.771, 2.763, 2.756, 2.75, 2.744, \

  2.738, 2.733, 2.728, 2.724, 2.719, 2.715, 2.712, 2.708, 2.704, 2.701, 2.698, 
  2.695, 2.692, 2.69, 2.687, 2.685, 2.682, 2.68, 2.678, 2.674, 2.67, 2.667, 
  2.663, 2.66, 2.657, 2.655, 2.652, 2.65, 2.648, 2.646, 2.644, 2.642, 2.64, 
  2.639, 2.637, 2.636, 2.634, 2.633, 2.632, 2.63, 2.629, 2.628, 2.627, 2.626, \

  2.623, 2.621, 2.619, 2.617, 2.616, 2.614, 2.613, 2.611, 2.61, 2.609, 2.607, \

  2.605, 2.603, 2.602, 2.601, 2.596, 2.592, 2.59, 2.588, 2.587, 2.586, 2.584, \

  2.583, 2.582, 2.581, 2.581, 2.5758};\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\

Tcrit[dof_]:=Module[{},
\t
\t(* index of critical t-value *)
\tiCrit[val_]:=\t\t
\t\tDo[ If[
\t\t\tmuCrit[[i]] <= val && muCrit[[i+1]] >= val,
\t\t\t\t\tReturn[i +1], Null
\t\t\t\t\t],
\t\t\t{i,0,Length[muCrit]-1}
\t\t\t];
\t\t\t
\tReturn[ t005[[ iCrit[dof]  ]]  ]
\t
\t]\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
R2[xdat, ydat]                      (= -500 if p>.005   and   = -999 if N<3 )\
\
\>", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
(* If T>Tcrit then p>.005, and printed R2-> -500, a missing value *)
 
 R2[Xdat_,Ydat_]:=Module[{\tNdat,totDF,regDF,resDF,Xsum,Ysum,
 \t\t\t\t\t\t\tXYsum,YYsum,XXsum,xySS,xxSS,yySS,
 \t\t\t\t\t\t\ttotSS,regSS,resSS,
 \t\t\t\t\t\t\ttotMS,regMS,resMS,Sxy,
 \t\t\t\t\t\t\tb,Sb,t,rSqr,rSqrCrit\t},
\t\t
\tvMean[list_List] := Apply[Plus, list] / Length[list];
\tvSum[list_List]:=Apply[Plus, list];

\tNdat = Length[Xdat];\t
\ttotDF = Ndat -1;
\tregDF = 1;
\tresDF = Ndat - 2;\t\t\t(* residual DOF *)

(* PROTECT FROM NULL DATA *)
If[ Ndat <= 3, Return[-999],\t\t
\t
\tXsum = Xdat //vSum;
\tYsum = Ydat //vSum;
\t
\tXYsum = Xdat Ydat //vSum;
\tYYsum = Ydat Ydat //vSum;
\tXXsum = Xdat Xdat //vSum;
\t
\txySS  = XYsum - (Xsum Ysum)/Ndat;
\txxSS  = XXsum - (Xsum Xsum)/Ndat;\t(* xxSS *)
\tyySS  = YYsum - (Ysum Ysum)/Ndat;
\t
\ttotSS = yySS;
\tregSS = (xySS)^2/xxSS;
\tresSS = totSS - regSS;\t\t(* residual sum of squares *)
\t
\ttotMS = totSS/totDF;
\tregMS = regSS/regDF;
\tresMS = resSS/resDF;
\tSxy = Sqrt[resMS];

\t(*VARIABLES
\tb\t\t\tslope
\tSb\t\t\tSE: std error of estimate (of slope)
\trSqr\t\tcoeff of determination
\trSqrCrit\tadjusted rSqr for p<.005 significance
\t*)
\t
\tb     = xySS/xxSS;\t\t\t
\tSb\t  = Re[Sqrt[Sxy^2/xxSS]];\t(* take real part *)
\tIf[ Sb==0, Sb= .000001 ]; \t\t(* avoid zero division *)
\tt     = b/Sb;\t\t
\trSqr  = regSS/totSS ;\t\t
\t
\t
\t(* \tCHECK CRITICAL T-VALUE: significance of R2 *)\t
\t(* if p>.005,  rSqrCrit -> -500(or -999) *)
\t
\tIf[ t < Tcrit[resDF], rSqrCrit = -999,\trSqrCrit = rSqr];
\t
\toutput={rSqrCrit,b};
\t
\tReturn[output]
\t]\t\t\t\t\t\t\t
];
\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell: Possible spelling error: new symbol name \"Ndat\"
     is similar to existing symbols {Xdat, Ydat}.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"resDF\"
     is similar to existing symbol \"regDF\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"Ysum\"
     is similar to existing symbol \"Xsum\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell: Possible spelling error: new symbol name \"XYsum\"
     is similar to existing symbols {Xsum, Ysum}.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell: Possible spelling error: new symbol name \"YYsum\"
     is similar to existing symbols {XYsum, Ysum}.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stop: Further output of General::spell will be suppressed during \
this calculation.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"xxSS\"
     is similar to existing symbol \"xySS\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::stop: Further output of General::spell1 will be suppressed during \
this calculation.\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["lagR2[v1,v2, lag]", "Text",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell["\<\
Clear[lagR2];
lagR2[v1_,v2_, lag_]:=Module[{},

\tlenV=Length[v1];
\tlen= lenV-Abs[lag];

\tIf[len <=3, Print[\"N<3 data for lag: \",lag]; Return[{lag,-999}],
\t\t\t\t\t
\t\tv1Lag= Drop[v1, - Sign[lag] Abs[lag] ];\t(*rotate left/right*)
\t\tv2Lag= Drop[v2,   Sign[lag] Abs[lag] ];\t(*rotate right/left*)
\t\t
\t\tresult=R2[ v1Lag, v2Lag];
\t\tPrint[lag,\"\\t\\t\",result[[1]] ];
\t\tReturn[{lag, result[[1]]} ];\t
\t\t];
\t];
\t
\t\
\>", "Input",
 InitializationCell->True,
 ImageRegion->{{0, 1}, {0, 1}}],

Cell["\<\
General::spell1: Possible spelling error: new symbol name \"lenV\" is similar \
to existing symbol 
    \"len\".\
\>", "Message",
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowToolbars->{},
Evaluator->"kern",
CellGrouping->Manual,
WindowSize->{830, 1333},
WindowMargins->{{52, Automatic}, {Automatic, 4}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, -1}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 112, 5, 76, "Title"],
Cell[CellGroupData[{
Cell[682, 29, 221, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[928, 39, 54, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[1007, 44, 68, 1, 27, "Subsubsection"],
Cell[1078, 47, 614, 13, 70, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[1729, 65, 66, 1, 21, "Subsubsection"],
Cell[CellGroupData[{
Cell[1820, 70, 69, 1, 70, "Text"],
Cell[1892, 73, 177, 8, 70, "Input"],
Cell[CellGroupData[{
Cell[2094, 85, 401, 9, 70, "Input"],
Cell[2498, 96, 112, 5, 70, "Output"],
Cell[CellGroupData[{
Cell[2635, 105, 53, 1, 70, "Input"],
Cell[2691, 108, 248, 7, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3000, 122, 73, 1, 70, "Text"],
Cell[3076, 125, 321, 11, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3434, 141, 52, 1, 70, "Text"],
Cell[3489, 144, 149, 7, 70, "Input"],
Cell[CellGroupData[{
Cell[3663, 155, 127, 5, 70, "Input"],
Cell[3793, 162, 7127, 825, 70, "Graphics"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[10969, 993, 71, 1, 70, "Text"],
Cell[11043, 996, 437, 21, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[11517, 1022, 59, 1, 70, "Text"],
Cell[11579, 1025, 114, 4, 70, "Input"],
Cell[CellGroupData[{
Cell[11718, 1033, 149, 7, 70, "Input"],
Cell[11870, 1042, 81, 1, 70, "Input"],
Cell[11954, 1045, 142, 5, 70, "Output"]
}, Open  ]],
Cell[12111, 1053, 70, 1, 70, "Input"],
Cell[CellGroupData[{
Cell[12206, 1058, 402, 14, 70, "Input"],
Cell[12611, 1074, 144, 5, 70, "Print"]
}, Open  ]],
Cell[12770, 1082, 281, 11, 70, "Input"],
Cell[13054, 1095, 649, 12, 70, "Input"],
Cell[13706, 1109, 345, 17, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[14088, 1131, 75, 1, 70, "Text"],
Cell[CellGroupData[{
Cell[14188, 1136, 1318, 51, 70, "Input"],
Cell[15509, 1189, 174, 4, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15732, 1199, 80, 1, 70, "Text"],
Cell[15815, 1202, 389, 20, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[16241, 1227, 61, 1, 70, "Text"],
Cell[16305, 1230, 334, 14, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[16676, 1249, 57, 1, 70, "Text"],
Cell[16736, 1252, 1098, 37, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17871, 1294, 195, 8, 70, "Input"],
Cell[18069, 1304, 342, 7, 70, "Output"]
}, Open  ]],
Cell[18426, 1314, 86, 1, 70, "Input"],
Cell[CellGroupData[{
Cell[18537, 1319, 53, 1, 70, "Text"],
Cell[18593, 1322, 1839, 72, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[20469, 1399, 65, 1, 70, "Text"],
Cell[CellGroupData[{
Cell[20559, 1404, 648, 23, 70, "Input"],
Cell[21210, 1429, 149, 6, 70, "Print"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[21408, 1441, 169, 6, 70, "Input"],
Cell[21580, 1449, 44586, 1101, 70, "Output"]
}, Closed]],
Cell[66181, 2553, 120, 3, 70, "Text"],
Cell[CellGroupData[{
Cell[66326, 2560, 56, 1, 70, "Text"],
Cell[CellGroupData[{
Cell[66407, 2565, 439, 16, 70, "Input"],
Cell[66849, 2583, 107, 1, 70, "Message"],
Cell[66959, 2586, 138, 4, 70, "Message"],
Cell[67100, 2592, 138, 4, 70, "Message"],
Cell[67241, 2598, 138, 4, 70, "Message"],
Cell[67382, 2604, 138, 4, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[67569, 2614, 58, 1, 70, "Text"],
Cell[67630, 2617, 251, 10, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[67918, 2632, 66, 1, 70, "Text"],
Cell[CellGroupData[{
Cell[68009, 2637, 998, 40, 70, "Input"],
Cell[69010, 2679, 169, 4, 70, "Message"],
Cell[69182, 2685, 412, 10, 70, "Output"],
Cell[69597, 2697, 412, 10, 70, "Output"],
Cell[70012, 2709, 212, 5, 70, "Message"],
Cell[70227, 2716, 171, 4, 70, "Message"],
Cell[70401, 2722, 171, 4, 70, "Message"],
Cell[70575, 2728, 171, 4, 70, "Message"],
Cell[70749, 2734, 212, 5, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[71010, 2745, 70, 1, 70, "Text"],
Cell[CellGroupData[{
Cell[71105, 2750, 129, 4, 70, "Input"],
Cell[71237, 2756, 152, 5, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[71438, 2767, 63, 1, 70, "Text"],
Cell[CellGroupData[{
Cell[71526, 2772, 347, 13, 70, "Input"],
Cell[CellGroupData[{
Cell[71898, 2789, 90, 1, 70, "Input"],
Cell[CellGroupData[{
Cell[72013, 2794, 147, 5, 70, "Input"],
Cell[72163, 2801, 62, 4, 70, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[72298, 2813, 65, 1, 70, "Text"],
Cell[CellGroupData[{
Cell[72388, 2818, 225, 7, 70, "Input"],
Cell[72616, 2827, 493, 16, 70, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[73158, 2849, 53, 1, 70, "Text"],
Cell[73214, 2852, 1132, 38, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[74383, 2895, 53, 1, 70, "Text"],
Cell[74439, 2898, 1081, 44, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[75557, 2947, 53, 1, 70, "Text"],
Cell[75613, 2950, 691, 30, 70, "Input"]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76377, 2988, 82, 2, 67, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[76484, 2994, 101, 2, 27, "Subsubsection",
 InitializationCell->True],
Cell[76588, 2998, 815, 27, 273, "SmallText",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[77440, 3030, 82, 2, 29, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[77547, 3036, 1254, 47, 534, "Input",
 InitializationCell->True],
Cell[78804, 3085, 173, 5, 31, "Message"],
Cell[78980, 3092, 173, 5, 31, "Message"],
Cell[79156, 3099, 173, 5, 31, "Message"],
Cell[79332, 3106, 153, 4, 20, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79534, 3116, 78, 2, 29, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[79637, 3122, 524, 17, 70, "Input",
 InitializationCell->True],
Cell[80164, 3141, 171, 5, 70, "Message"],
Cell[80338, 3148, 142, 6, 70, "Print",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[80529, 3160, 98, 2, 26, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[80652, 3166, 554, 21, 70, "Input",
 InitializationCell->True],
Cell[81209, 3189, 379, 18, 70, "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[81637, 3213, 88, 2, 21, "Subsubsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81750, 3219, 97, 2, 70, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81872, 3225, 80, 2, 70, "Text",
 InitializationCell->True],
Cell[81955, 3229, 474, 21, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[82466, 3255, 1235, 50, 70, "Input",
 InitializationCell->True],
Cell[83704, 3307, 177, 5, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[83930, 3318, 97, 2, 70, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[84052, 3324, 1316, 52, 70, "Input",
 InitializationCell->True],
Cell[85371, 3378, 173, 4, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[85593, 3388, 97, 2, 70, "Text",
 InitializationCell->True],
Cell[85693, 3392, 1318, 52, 70, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[87060, 3450, 90, 2, 21, "Subsubsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[87175, 3456, 118, 2, 70, "Text",
 InitializationCell->True],
Cell[87296, 3460, 387, 18, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[87720, 3483, 133, 2, 70, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[87878, 3489, 524, 21, 70, "Input",
 InitializationCell->True],
Cell[88405, 3512, 171, 5, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[88625, 3523, 129, 2, 70, "Text",
 InitializationCell->True],
Cell[88757, 3527, 448, 20, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[89242, 3552, 128, 2, 70, "Text",
 InitializationCell->True],
Cell[89373, 3556, 944, 39, 70, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[90366, 3601, 88, 2, 21, "Subsubsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[90479, 3607, 91, 2, 70, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[90595, 3613, 708, 30, 70, "Input",
 InitializationCell->True],
Cell[91306, 3645, 174, 4, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[91529, 3655, 93, 2, 70, "Text",
 InitializationCell->True],
Cell[91625, 3659, 932, 40, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[92594, 3704, 105, 2, 70, "Text",
 InitializationCell->True],
Cell[92702, 3708, 769, 32, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[93508, 3745, 117, 2, 70, "Text",
 InitializationCell->True],
Cell[93628, 3749, 809, 32, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[94474, 3786, 102, 2, 70, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[94601, 3792, 2340, 77, 70, "Input",
 InitializationCell->True],
Cell[96944, 3871, 172, 5, 70, "Message"],
Cell[97119, 3878, 176, 5, 70, "Message"],
Cell[97298, 3885, 171, 5, 70, "Message"],
Cell[97472, 3892, 171, 5, 70, "Message"],
Cell[97646, 3899, 153, 4, 70, "Message"],
Cell[97802, 3905, 175, 5, 70, "Message"],
Cell[97980, 3912, 175, 5, 70, "Message"],
Cell[98158, 3919, 152, 4, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[98359, 3929, 96, 2, 70, "Text",
 InitializationCell->True],
Cell[98458, 3933, 1428, 53, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[99923, 3991, 99, 2, 70, "Text",
 InitializationCell->True],
Cell[100025, 3995, 821, 43, 70, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[100895, 4044, 91, 2, 21, "Subsubsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[101011, 4050, 122, 2, 70, "Text",
 InitializationCell->True],
Cell[101136, 4054, 201, 7, 70, "Input",
 InitializationCell->True],
Cell[101340, 4063, 534, 11, 70, "Input",
 InitializationCell->True],
Cell[101877, 4076, 833, 18, 70, "Input",
 InitializationCell->True],
Cell[102713, 4096, 356, 18, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[103106, 4119, 162, 5, 70, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[103293, 4128, 1686, 67, 70, "Input",
 InitializationCell->True],
Cell[104982, 4197, 174, 4, 70, "Message"],
Cell[105159, 4203, 172, 4, 70, "Message"],
Cell[105334, 4209, 170, 4, 70, "Message"],
Cell[105507, 4215, 175, 4, 70, "Message"],
Cell[105685, 4221, 176, 4, 70, "Message"],
Cell[105864, 4227, 152, 4, 70, "Message"],
Cell[106019, 4233, 170, 4, 70, "Message"],
Cell[106192, 4239, 153, 4, 70, "Message"],
Cell[106348, 4245, 76, 2, 70, "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[106473, 4253, 92, 2, 70, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[106590, 4259, 515, 21, 70, "Input",
 InitializationCell->True],
Cell[107108, 4282, 171, 5, 70, "Message"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

