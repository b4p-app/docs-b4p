	/*fixed array of characters - problem with Lvalue assignment of string	char	charM[5][20];		charM[0]= string;	charM[1]= string;	cout<<"charM[0]: "<<charM[0]<<endl;	cout<<"charM[0]: "<<charM[0]<<endl;*///char array - NOT a null terminated string	char			cArr[] = {'a','b','c','d'};		cout<<"char Array:"<<endl		<<cArr[0]<<cArr[1]<<cArr[2]<<endl;		//strings is character constant - size allocated at declaration	char 			string[] =  "ABCDEF"; 	cout<<"string: "<<string<<endl		<<"first 3: "<<string[0]<<string[1]<<string[2]<<endl		<<"last 3: "<<string[3]<<string[4]<<string[5]<<endl;			cout<<"null terminator looks like: "<<string[6]<<endl;		if( string[5] == '\0') cout<<"string[5] is null term"<<endl;		if( string[6] == '\0') cout<<"string[6] is null term"<<endl;	//	if( string[7] == '\0') cout<<"string[7] is null term";//  DONT ACCESS MEMORY BEYOND WHAT IS ALLOCATED!!!!! CRASH!//array of pointers to pointers of chars	//	ppChar[1] = string;//	cout<<"ppChar[1]: "<<ppChar[1];//	pChar = &string;//	cout<<"*pChar: "<<*pChar;//		cout<<"&pCharL: "<< (unsigned long) &pCharL<<endl;//		*pCharL = CharL;//		cout<<"*pCharL:"<< *pCharL <<endl;//		cout<<"&pCharL: "<< (unsigned long) &pCharL<<endl;				//		cout<<"using address of:<<endl;//		cout<<"&CharL: "<< (unsigned long) &CharL<<endl;//		pCharL = &CharL;//		cout<<"*pCharL:"<< *pCharL <<endl;//		cout<<"&pCharL: "<< (unsigned long) pCharL<<endl;		//		ppChar[j] = &CharL;//		cout<<"ppChar:"<< ppChar[j] <<endl;