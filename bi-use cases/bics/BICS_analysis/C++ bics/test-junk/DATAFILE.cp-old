#include <math.h>#include <iostream.h>				// cin,cout#include <stdio.h>					// NR headers#include <stddef.h>#include <stdlib.h>#include <strstream.h>				//string streams#include <fstream.h>				//stream manager#include <ctype.h>					//isalpha#define  NRANSI#include "nr.h"						//RMR-NR.h#include "memory.h"					//RMR-NRUTIL#include "memory.cp"				//RMR-NRUTIL#include "raf_util.cp"#include "raf_util.h"#include "moment.cp"				//NR#include "four1.cp"					//NR#include "realft.cp"				//NRvoid main(void){	char			word[20];		//character array	char			var[100][20];	//character array of 50 words	char			ansYN;			//single char answer	char 			line[1024];		//line buffer, holds 1024 chars									//but grabs up to nullterm (\0) only	char			filename[40];	//file name, max length 40 chars	long int		i = 0L;			//counter	long int		j = 0L;			//counter	long int 		k = 0L;			//counter	long int		skiprow;		//printing rows skipped	float			value=0;		//data value	long int		ROWS=0L;		//num rows	long int		COLS=0L;		//num colums	long int		DIM=0L;			//num data points	long int		start=0L;		//unsigned long int - for pointers in fstream	//startup message	cout<<lineSeparator<<endl<<scrollUp;	cout<<"REQUIRED FILE FORMAT"<<endl		<<"File:              DOS state, NL/CR"<<endl		<<"Data:              FLOAT"<<endl		<<"Delimiters:        TAB  "<<endl		<<"Missing:           -999"<<endl		<<"NL/CR:             none at end of last row"<<endl		<<"Variable names in first row"<<scrollUp;		//enter file name	cout<< "Enter data file name ==>";	cin >> filename;		//"dir:subdir:filename"//open stream to file	ifstream	INFILE0;						INFILE0.open (filename, ios::in);	if 	( INFILE0.fail() )  nrerror("error opening file");	else		{		cout	<<"first three rows:"<<endl<<lineSeparator<<endl;		for (i=0 ;i<3; i++)			{			ROWS++;			INFILE0.getline( line, sizeof(line) );	//be sure is DOS \n format			cout	<<line<<endl<<lineSeparator<<endl;			};		while ( ! INFILE0.eof()  )			{			ROWS++;			INFILE0.getline( line, sizeof(line) );			}		}	INFILE0.close();			//	cout<<"rewinding and displaying first line"<<endl;//	INFILE0.seekg( 0, ios::beg);		//must be long int to match prototype//	INFILE0.getline( line, sizeof(line)  );//	cout<<"filepos: "<<INFILE0.tellg()<<endl;//	cout<<line<<endl;		//reopen a file stream		ifstream	INFILE(filename, ios::in);		INFILE.getline(line,sizeof(line) );							istrstream  STRING0(line);//instantiate instrstream			if ( STRING0.fail() ) nrerror("string stream failed");		cout<<"ROW 1:"<<endl;		COLS=0;		while( !STRING0 == '\0' )			{			COLS++;			STRING0 >> word;			k=0;			while( word[k] != '\0')		//pp393 Que				{				var[COLS][k] = word[k];	//build string a character at a time				k++;				}			var[COLS][k] = '\0'; //convert from char array to								  //string constant by adding								  //null terminator			}		COLS=COLS-1;		for( j=1; j<=COLS; j++) 				cout<<"["<< j <<"]"<<var[j]<<"\t";		cout<<endl<<lineSeparator<<endl;						//adjust number of float rows in data	cout<<"Total COLS:\t"<<COLS<<endl;	cout<<"Total ROWS:\t"<<ROWS<<endl;	cout<<"Does first row contain variable names?(Y/N):";	cin >> ansYN ;	ansYN = toupper(ansYN);	if ( ansYN == 'Y')		{		ROWS = ROWS - 1;		cout<<"Data ROWS:\t"<<ROWS<<endl;			}						// create float data array of appropriate size		float **data;		data = matrix(1, ROWS, 1 , COLS);//read in array of data		cout<<"skip how many rows between printing: ";		cin>> skiprow;				for (i=1; i<=ROWS; i++)			{			INFILE.getline(line,sizeof(line) );				istrstream	STRING(line);			if ( STRING.fail() ) 					nrerror("string stream2 failed");			for (j=1; j<=COLS; j++)				{				STRING >> value;				data[i][j] = value;				}			if(  ( i % skiprow )== 0 )				{				cout<<lineSeparator<<endl					<<"ROW: "<<i<<endl;				for(j=1; j<=COLS; j++) cout<<data[i][j]<<"\t";				cout<<endl;				}			}		cout<<lineSeparator<<endl;		INFILE.close();				// column selection testcout<<"Sample calculations...."<<endl;long col,row1, row2;cout<<"enter col:"; 	cin>>col;cout<<"enter row1:";	cin>>row1;cout<<"enter row2:";	cin>>row2;int nrows=row2-row1+1;cout<<"nrows: "<<nrows<<endl;float* subv;subv = subvector(data, col, row1, row2);cout<<"subv["<<1<<"]: "<<subv[1]<<endl;cout<<"subv["<<nrows<<"]: "<<subv[nrows]<<endl;float adev,ave,curt,sdev,skew,vrnce;moment(subv, nrows ,&ave,&adev,&sdev,&vrnce,&skew,&curt);		cout<<"Mean:         "<<ave  <<endl			<<"Average Dev:  "<<adev <<endl			<<"Standard Dev: "<<sdev <<endl				<<"Variance:     "<<var  <<endl			<<"Skewness:     "<<skew <<endl			<<"Kurtosis:     "<<curt <<endl;// delete data matrix before exitingcout<<"do you wish to exit Y/N: ";cin>>ansYN;if( toupper(ansYN) == 'Y')	{	free_subvector( subv, row1, row2);	free_matrix(data,1, ROWS, 1 , COLS);	nrerror("released subvec and matrix..");	}return;				//nothing: main's type is void}			