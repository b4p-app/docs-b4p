(*^::[	Information =	"This is a Mathematica Notebook file.  It contains ASCII text, and can be	transferred by email, ftp, or other text-file transfer utility.  It should	be read or edited using a copy of Mathematica or MathReader.  If you 	received this as email, use your mail application or copy/paste to save 	everything from the line containing (*^ down to the line containing ^*)	into a plain text file.  On some systems you may have to give the file a 	name ending with ".ma" to allow Mathematica to recognize it as a Notebook.	The line below identifies what version of Mathematica created this file,	but it can be opened using any other version as well.";	FrontEndVersion = "Macintosh Mathematica Notebook Front End Version 2.2";	MacintoshStandardFontEncoding; 		fontset = title, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, bold, a2, e2,  18, "Helvetica"; 	fontset = subtitle, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, bold, a2, e2,  12, "Helvetica"; 	fontset = subsubtitle, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, italic, a2, e2,  9, "Helvetica"; 	fontset = section, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, grayBox, M22, bold, a2, e2,  14, "Helvetica"; 	fontset = subsection, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, blackBox, M19, bold, a2, e2,  12, "Helvetica"; 	fontset = subsubsection, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, whiteBox, M18, bold, a2, e2,  10, "Helvetica"; 	fontset = text, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  12, "Times"; 	fontset = smalltext, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  10, "Times"; 	fontset = input, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeInput, M42, N23, bold, L-5, a1, e2,  9, "Courier"; 	fontset = output, output, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, L-5, a1, e2,  9, "Courier"; 	fontset = message, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, R65535, L-5, a1, e2,  9, "Courier"; 	fontset = print, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, L-5, a1, e2,  9, "Courier"; 	fontset = info, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, B65535, L-5, a1, e2,  9, "Courier"; 	fontset = postscript, PostScript, formatAsPostScript, output, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeGraphics, M7, l80, w252, h252, a2, e2,  12, "Courier"; 	fontset = name, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, italic, B65535, a2, e2,  9, "Helvetica"; 	fontset = header, inactive, noKeepOnOnePage, preserveAspect, M7, a2, e2,  9, "Helvetica"; 	fontset = leftheader, inactive, L2, a2, e2,  9, "Helvetica"; 	fontset = footer, inactive, noKeepOnOnePage, preserveAspect, center, M7, a2, e2,  9, "Helvetica"; 	fontset = leftfooter, inactive, L2, a2, e2,  9, "Helvetica"; 	fontset = help, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  10, "Times"; 	fontset = clipboard, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  10, "Times"; 	fontset = completions, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  9, "Courier"; 	fontset = special1, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  12, "Times"; 	fontset = special2, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  12, "Times"; 	fontset = special3, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  12, "Times"; 	fontset = special4, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  12, "Times"; 	fontset = special5, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, a2, e2,  12, "Times"; 	remoteKernel = "kern"; ]:[font = title; inactive; preserveAspect]BICS DATA DISPLAY;[s]2:0,0;17,1;18,-1;2:1,19,14,Helvetica,1,18,0,0,0;1,21,15,Helvetica,1,20,0,0,0;:[font = input; Cclosed; preserveAspect; center; startGroup]George Chovanes, M.D.Rafael Richards, M.S.;[s]2:0,1;43,0;44,-1;2:1,10,8,Courier,1,9,0,0,0;1,8,6,Helvetica,2,8,0,0,0;:[font = input; preserveAspect; startGroup]OTHER:[font = subsubsection; inactive; Cclosed; preserveAspect; startGroup]Development:[font = text; inactive; preserveAspect; endGroup]	Automated processing of multiple files in a common directory: putting files in this directory will mean it will be processed. 		Use Mma function Directory and FileNames to get the names of all		these files; then process them				FileNames["*.*","Project:BICS", 2]				EPOCH means: taken by a fixed length vector that shifts. This assumes that the time variable		is fixed sampling rate, and there are not large gaps of missing data.;[s]3:0,0;231,1;265,0;436,-1;2:2,13,9,Times,0,12,0,0,0;1,11,8,Courier,1,9,0,0,0;:[font = subsubsection; inactive; Cclosed; preserveAspect; startGroup]TEST CODE:[font = text; inactive; Cclosed; preserveAspect; startGroup]timing of selColsRows:[font = input; preserveAspect]k=1;While[ k<=10,	tCalc = Timing[ {v1,v2}=selColsRows[data,1,2,1,k*500 ]  ][[1]];	Print[i,"\t",tCalc];	k++	]:[font = input; preserveAspect; startGroup]dat={{501,5.01667},{1001,15.0333},{1501,29.7667},{2001,45.85},{2501,70.3333},{3001,99.6333},{3501,134.267},{4001,173.617},{4501,217.167},{5001,266.}};datplot=ListPlot[dat];line=Fit[dat,{1,x,x^2},x];lineplot=Plot[line,{x,1,5000}];Show[datplot,lineplot];line/. x->20000  /60;[s]3:0,0;5,1;154,0;281,-1;2:2,5,8,Courier,1,9,0,0,0;1,5,8,Courier,0,9,0,0,0;:[font = output; output; inactive; preserveAspect]3.88250702853817433;[o]3.88251:[font = input; preserveAspect; startGroup]line:[font = output; output; inactive; preserveAspect; endGroup; endGroup; endGroup]1.988116235810902174 + 0.002314992984242423691*x + 0.00001010453818181817833*x^2;[o]                                       21.98812 + 0.00231499 x + 0.0000101045 x:[font = text; inactive; Cclosed; preserveAspect; startGroup]testing:    plotVarsDeriv:[font = input; preserveAspect; endGroup]For[j=2, j<=nCols,j++,plotVarsDeriv[data,1,j,1,nRows, 1, 2];plotVarsDeriv[data,1,j,1,nRows, 2, 5];plotVarsDeriv[data,1,j,1,nRows, 3, 7];plotVarsDeriv[data,1,j,1,nRows, 4, 10];plotVarsDeriv[data,1,j,1,nRows, 5, 12];plotVarsDeriv[data,1,j,1,nRows, 10, 20]	]:[font = text; inactive; Cclosed; preserveAspect; startGroup]lags:[font = input; preserveAspect]lagr2={};For[i=-10,i<=10, i++,	lagDat=lagR2[v1,v2,i*10];	AppendTo[lagr2,lagDat];	];	:[font = input; preserveAspect; startGroup]v3=Transpose[lagr2][[1]];v4=Transpose[lagr2][[2]];plotVecsMD[v3,v4];:[font = postscript; PostScript; formatAsPostScript; output; inactive; preserveAspect; pictureLeft = 24; pictureWidth = 384; pictureHeight = 236; endGroup; endGroup]%!%%Creator: Mathematica%%AspectRatio: .61803 MathPictureStart%% Graphics/Courier findfont 8  scalefont  setfont% Scaling calculations0.5 0.0047619 -1.07983 4.12449 [[(-100)] .02381 0 0 2 0 Minner Mrotsboxa[(-50)] .2619 0 0 2 0 Minner Mrotsboxa[(0)] .5 0 0 2 0 Minner Mrotsboxa[(50)] .7381 0 0 2 0 Minner Mrotsboxa[(100)] .97619 0 0 2 0 Minner Mrotsboxa[(v1)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa[(0.28)] -0.0125 .07502 1 0 0 Minner Mrotsboxa[(0.3)] -0.0125 .15751 1 0 0 Minner Mrotsboxa[(0.32)] -0.0125 .24 1 0 0 Minner Mrotsboxa[(0.34)] -0.0125 .32249 1 0 0 Minner Mrotsboxa[(0.36)] -0.0125 .40498 1 0 0 Minner Mrotsboxa[(0.38)] -0.0125 .48747 1 0 0 Minner Mrotsboxa[(0.4)] -0.0125 .56996 1 0 0 Minner Mrotsboxa[(v2)] -0.0125 .30902 1 0 0 -1 0 Mouter Mrotsboxa[(N: 21)] .5 .61803 0 -2 Msboxa[ -0.001 -0.001 0 0 ][ 1.001 .61903 0 0 ]] MathScale% Start of Graphics1 setlinecap1 setlinejoinnewpath[ ] 0 setdash0 gpp.002 w.02381 0 m.02381 .00625 LsP[(-100)] .02381 0 0 2 0 Minner Mrotshowap.002 w.2619 0 m.2619 .00625 LsP[(-50)] .2619 0 0 2 0 Minner Mrotshowap.002 w.5 0 m.5 .00625 LsP[(0)] .5 0 0 2 0 Minner Mrotshowap.002 w.7381 0 m.7381 .00625 LsP[(50)] .7381 0 0 2 0 Minner Mrotshowap.002 w.97619 0 m.97619 .00625 LsP[(100)] .97619 0 0 2 0 Minner Mrotshowap.001 w.07143 0 m.07143 .00375 LsPp.001 w.11905 0 m.11905 .00375 LsPp.001 w.16667 0 m.16667 .00375 LsPp.001 w.21429 0 m.21429 .00375 LsPp.001 w.30952 0 m.30952 .00375 LsPp.001 w.35714 0 m.35714 .00375 LsPp.001 w.40476 0 m.40476 .00375 LsPp.001 w.45238 0 m.45238 .00375 LsPp.001 w.54762 0 m.54762 .00375 LsPp.001 w.59524 0 m.59524 .00375 LsPp.001 w.64286 0 m.64286 .00375 LsPp.001 w.69048 0 m.69048 .00375 LsPp.001 w.78571 0 m.78571 .00375 LsPp.001 w.83333 0 m.83333 .00375 LsPp.001 w.88095 0 m.88095 .00375 LsPp.001 w.92857 0 m.92857 .00375 LsP[(v1)] .5 0 0 2 0 0 -1 Mouter Mrotshowap.002 w0 0 m1 0 LsPp.002 w0 .07502 m.00625 .07502 LsP[(0.28)] -0.0125 .07502 1 0 0 Minner Mrotshowap.002 w0 .15751 m.00625 .15751 LsP[(0.3)] -0.0125 .15751 1 0 0 Minner Mrotshowap.002 w0 .24 m.00625 .24 LsP[(0.32)] -0.0125 .24 1 0 0 Minner Mrotshowap.002 w0 .32249 m.00625 .32249 LsP[(0.34)] -0.0125 .32249 1 0 0 Minner Mrotshowap.002 w0 .40498 m.00625 .40498 LsP[(0.36)] -0.0125 .40498 1 0 0 Minner Mrotshowap.002 w0 .48747 m.00625 .48747 LsP[(0.38)] -0.0125 .48747 1 0 0 Minner Mrotshowap.002 w0 .56996 m.00625 .56996 LsP[(0.4)] -0.0125 .56996 1 0 0 Minner Mrotshowap.001 w0 .09152 m.00375 .09152 LsPp.001 w0 .10802 m.00375 .10802 LsPp.001 w0 .12452 m.00375 .12452 LsPp.001 w0 .14102 m.00375 .14102 LsPp.001 w0 .17401 m.00375 .17401 LsPp.001 w0 .19051 m.00375 .19051 LsPp.001 w0 .20701 m.00375 .20701 LsPp.001 w0 .22351 m.00375 .22351 LsPp.001 w0 .2565 m.00375 .2565 LsPp.001 w0 .273 m.00375 .273 LsPp.001 w0 .2895 m.00375 .2895 LsPp.001 w0 .306 m.00375 .306 LsPp.001 w0 .33899 m.00375 .33899 LsPp.001 w0 .35549 m.00375 .35549 LsPp.001 w0 .37199 m.00375 .37199 LsPp.001 w0 .38849 m.00375 .38849 LsPp.001 w0 .42148 m.00375 .42148 LsPp.001 w0 .43798 m.00375 .43798 LsPp.001 w0 .45448 m.00375 .45448 LsPp.001 w0 .47098 m.00375 .47098 LsPp.001 w0 .50397 m.00375 .50397 LsPp.001 w0 .52047 m.00375 .52047 LsPp.001 w0 .53697 m.00375 .53697 LsPp.001 w0 .55346 m.00375 .55346 LsPp.001 w0 .05853 m.00375 .05853 LsPp.001 w0 .04203 m.00375 .04203 LsPp.001 w0 .02553 m.00375 .02553 LsPp.001 w0 .00903 m.00375 .00903 LsPp.001 w0 .58646 m.00375 .58646 LsPp.001 w0 .60296 m.00375 .60296 LsP[(v2)] -0.0125 .30902 1 0 0 -1 0 Mouter Mrotshowap.002 w0 0 m0 .61803 LsPPpp.002 w.02381 .61178 m.02381 .61803 LsPp.002 w.2619 .61178 m.2619 .61803 LsPp.002 w.5 .61178 m.5 .61803 LsPp.002 w.7381 .61178 m.7381 .61803 LsPp.002 w.97619 .61178 m.97619 .61803 LsPp.001 w.07143 .61428 m.07143 .61803 LsPp.001 w.11905 .61428 m.11905 .61803 LsPp.001 w.16667 .61428 m.16667 .61803 LsPp.001 w.21429 .61428 m.21429 .61803 LsPp.001 w.30952 .61428 m.30952 .61803 LsPp.001 w.35714 .61428 m.35714 .61803 LsPp.001 w.40476 .61428 m.40476 .61803 LsPp.001 w.45238 .61428 m.45238 .61803 LsPp.001 w.54762 .61428 m.54762 .61803 LsPp.001 w.59524 .61428 m.59524 .61803 LsPp.001 w.64286 .61428 m.64286 .61803 LsPp.001 w.69048 .61428 m.69048 .61803 LsPp.001 w.78571 .61428 m.78571 .61803 LsPp.001 w.83333 .61428 m.83333 .61803 LsPp.001 w.88095 .61428 m.88095 .61803 LsPp.001 w.92857 .61428 m.92857 .61803 LsPp.002 w0 .61803 m1 .61803 LsP[(N: 21)] .5 .61803 0 -2 Mshowap.002 w.99375 .07502 m1 .07502 LsPp.002 w.99375 .15751 m1 .15751 LsPp.002 w.99375 .24 m1 .24 LsPp.002 w.99375 .32249 m1 .32249 LsPp.002 w.99375 .40498 m1 .40498 LsPp.002 w.99375 .48747 m1 .48747 LsPp.002 w.99375 .56996 m1 .56996 LsPp.001 w.99625 .09152 m1 .09152 LsPp.001 w.99625 .10802 m1 .10802 LsPp.001 w.99625 .12452 m1 .12452 LsPp.001 w.99625 .14102 m1 .14102 LsPp.001 w.99625 .17401 m1 .17401 LsPp.001 w.99625 .19051 m1 .19051 LsPp.001 w.99625 .20701 m1 .20701 LsPp.001 w.99625 .22351 m1 .22351 LsPp.001 w.99625 .2565 m1 .2565 LsPp.001 w.99625 .273 m1 .273 LsPp.001 w.99625 .2895 m1 .2895 LsPp.001 w.99625 .306 m1 .306 LsPp.001 w.99625 .33899 m1 .33899 LsPp.001 w.99625 .35549 m1 .35549 LsPp.001 w.99625 .37199 m1 .37199 LsPp.001 w.99625 .38849 m1 .38849 LsPp.001 w.99625 .42148 m1 .42148 LsPp.001 w.99625 .43798 m1 .43798 LsPp.001 w.99625 .45448 m1 .45448 LsPp.001 w.99625 .47098 m1 .47098 LsPp.001 w.99625 .50397 m1 .50397 LsPp.001 w.99625 .52047 m1 .52047 LsPp.001 w.99625 .53697 m1 .53697 LsPp.001 w.99625 .55346 m1 .55346 LsPp.001 w.99625 .05853 m1 .05853 LsPp.001 w.99625 .04203 m1 .04203 LsPp.001 w.99625 .02553 m1 .02553 LsPp.001 w.99625 .00903 m1 .00903 LsPp.001 w.99625 .58646 m1 .58646 LsPp.001 w.99625 .60296 m1 .60296 LsPp.002 w1 0 m1 .61803 LsPPpp.002 w0 .07502 m1 .07502 LsPp.002 w.5 0 m.5 .61803 LsPP0 0 m1 0 L1 .61803 L0 .61803 Lclosepathclipnewpathpp.001 w.02381 .47464 Mdot.07143 .42858 Mdot.11905 .38723 Mdot.16667 .47208 Mdot.21429 .60332 Mdot.2619 .5856 Mdot.30952 .56195 Mdot.35714 .55676 Mdot.40476 .58673 Mdot.45238 .56789 Mdot.5 .50975 Mdot.54762 .58565 Mdot.59524 .43899 Mdot.64286 .39627 Mdot.69048 .28051 Mdot.7381 .24955 Mdot.78571 .23183 Mdot.83333 .1992 Mdot.88095 .16749 Mdot.92857 .1154 Mdot.97619 .01472 MdotPP% End of GraphicsMathPictureEnd:[font = text; inactive; Cclosed; preserveAspect; startGroup]cleanDeriv[ c1, r1, r2]:[font = input; preserveAspect; endGroup]cleanDeriv[ vec_, slope1_, slope2_]:=Module[{},v={};For[i=2, i<= Length[vec]-1, i++,	FLAG=1;		If[ Abs[vec[[i+1]] - vec[[i]]  ]  >= slope1,  				FLAG=0 ];	If[ Abs[vec[[i]] - vec[[i-1]]  ]  >= slope1,  				FLAG=0 ];	If[ Abs[vec[[i+1]] - 2 vec[[i]] + vec[[i-1]] ]  >= slope2,  FLAG=0 ];		If[ FLAG != 0, AppendTo[ v, vec[[i]] ]	];		];Return[v];] 	:[font = text; inactive; Cclosed; preserveAspect; startGroup]displayFile:[font = input; preserveAspect]Clear[displayFile];displayFile[file_String]:= Module[{},:[font = input; preserveAspect; startGroup]			file="berg_out";	pathName = StringJoin[ Directory[],":", ToString[file]  ];	:[font = input; preserveAspect]	inStream = OpenRead[pathName];:[font = output; output; inactive; preserveAspect; endGroup]"Project:BICS:data:berg_out";[o]Project:BICS:data:berg_out:[font = input; preserveAspect]Read[inStream,String]:[font = input; preserveAspect; startGroup](*---------print first two lines --------------*)		nPrintLines = 2;			(* number of lines to print *)	nSkipLines  = 0;			(* number of lines to skip *)	Skip[inStream, String, nSkipLines];	Print[ lineSeparator];	Do[		instring= Read[inStream, String];		Print[instring];		Print[ lineSeparator],		{nPrintLines}		];		:[font = print; inactive; preserveAspect; endGroup]------------------------------------------------------------------------------------:[font = input; preserveAspect](*---------calculate total rows --------------*)		(*	SetStreamPosition[inStream, 0];	nRows = 0;	While[ !( Read[inStream,String] === EndOfFile),				nRows = nRows +1				];	Print["ROWS: ",nRows];			*):[font = input; preserveAspect](*---------determine number of var names --------------*)		SetStreamPosition[inStream, 0];		nVars = nVals = 0;	word = Read[inStream, Word];	wordval = ToExpression[word];			While[ !NumberQ[wordval],							If[ NumberQ[wordval], nVals++, nVars++ ];							word = Read[inStream, Word];						(* char string *)							wordval = ToExpression[word];					(*Mathematica expression *)						];							Print["NUM VARS: ", nVars];	Print["NUM VALS: ", nVals];;[s]3:0,0;357,1;368,0;457,-1;2:2,5,8,Courier,1,9,0,0,0;1,5,8,Courier,3,9,0,0,0;:[font = input; preserveAspect; endGroup](*---------read in and print var names --------------*)	SetStreamPosition[inStream, 0];	var={};	For[i=1, i<=nVars,i++,				word = Read[inStream, Word ];				AppendTo[var, word];				];		Return[printNumList[var,5]//MatrixForm ];			Close[inStream];					]:[font = text; inactive; Cclosed; preserveAspect; startGroup]plotFile[ "file", nCols ]:[font = input; preserveAspect; startGroup](* file must be saved as Macintosh format in BBEdit *)Clear[plotFile];plotFile[fileName_String, numCols_]:=Module[{},	pathName = StringJoin[ Directory[],":", ToString[fileName]  ];	inputFormat = Table[ Number, {numCols}];	data 		= ReadList[fileName,inputFormat];	col = Transpose[data];	v[n_]:= col[[n]];	numRows = Length[data];	caseNum = Range[ numRows];	numPoints = numRows*numCols;	Print["Path : ",		"\t \t \t",	pathName];	Print["Rows : ", 		"\t \t \t",	numRows];	Print["Columns :",		"\t \t",	numCols];	Print["Total Points:",	"\t", 		numPoints];	minV1=Min[v[1] ];	maxV1=Max[v[1] ];	Print["Start Time: ",	"\t",		 minV1]	Print["End Time: ",		"\t \t",	 maxV1]		For[ j=2, j<=numCols, j++,		{v1,v2}=nonMissing[ v[1], v[j] ];			(*need min 5 non-missing points to plot *)			If[  Length[v1] > 5,						plotdat=Transpose[ {v1,v2}];				xlabel = var[[1]];			ylabel = var[[j]];						ListPlot[ plotdat,				PlotStyle->{PointSize[.001]},				PlotRange->{minV1, maxV1};				DefaultFont :> {"Courier",8},				Frame -> True,				FrameLabel->{xlabel,ylabel},				RotateLabel->False				]			]				]]:[font = message; inactive; preserveAspect; endGroup; endGroup]General::spell1: Possible spelling error: new symbol name "ylabel"     is similar to existing symbol "xlabel".:[font = text; inactive; Cclosed; preserveAspect; startGroup]{v1,v2}=nonMissing[ v[m], v[n] ]:[font = input; preserveAspect; endGroup]nonMissing[ v1_List, v2_List]:=Module[{},		v1New={};		v2New={};		len=Length[v1];				For[ i=1, i<=len, i++,			If[  (v1[[i]] != -999) && ( v2[[i]] != -999),					AppendTo[ v1New, v1[[i]] ];					AppendTo[ v2New, v2[[i]] ],					Null					];			];				Return[{v1New, v2New}];		]		:[font = text; inactive; Cclosed; preserveAspect; startGroup]containsChars:[font = input; preserveAspect; endGroup]containsChars[word_,chars_]:=Module[{},		charsword = Characters[ToString[word]];		charsearch = Characters[ToString[chars]];		If[ Length[ Intersection[ charsword, charsearch ] ] == 0,			False,			True			]		];		(* Characters -> character array *)		:[font = text; inactive; Cclosed; preserveAspect; startGroup]delimList:[font = input; preserveAspect; endGroup](* function to take parse string by StringPostition of delimiter *)(* parse data: assuming there is a delimiter -before- each value,except for first *)(* delim="\t +/:,"	tab,space,plus,slash,colon, or comma				*)Clear[delimList];delimList[ instring_String, delim_String]:=Module[{},		delimpos = StringPosition[instring, delim];	delims = Map[ First, delimpos ];		(*	outstring = StringReplace[instring,delim->"*"];		Print["INSTRING: ", instring  ];	Print["DELIM:    ", FullForm[delim]  ];		Print["DELIMS:   ", Length[delims ] ];	Print["OUTSTRING:", outstring ];		*)		vals={};	vals = Append[ vals, StringTake[instring,{1, delims[[1]]-1 }]  ];	For[k=0, k < Length[delims], k++,		If[ ( delims[[k+1]] - delims[[k]] ) >1,				(*non-adjacent delims *)			vals = Append[ vals, StringTake[ 							instring, {delims[[k]]+1, delims[[k+1]]-1 }]  ],		(*else missing data*)			vals = Append[ vals,  -999. ]		(* Null  or ToString[ -999.] *)			]	];	Return[vals]]:[font = input; preserveAspect; startGroup]format1=Table[		If[ colStart < i < colEnd, Number, Word]		,		{i,1,Length[row2]}		];recWords=Table[ Word, {i,1,Length[row2]} ]:[font = output; output; inactive; preserveAspect; endGroup]{Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word};[o]{Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word}:[font = input; preserveAspect]record=ReadList["horin50", Record];:[font = text; inactive; Cclosed; preserveAspect; startGroup]other:[font = input; preserveAspect; endGroup]	file="berg1.dos";	pathName = StringJoin[ Directory[],":", ToString[file]  ];	inStream = OpenRead[pathName];		nPrintLines = 2;			(* number of lines to print *)	nSkipLines  = 0;			(* number of lines to skip *)	Skip[inStream, String, nSkipLines];		delim = "\t"		instring1	=Read[inStream, String];	row1=delimList[instring1,delim];		instring2	=Read[inStream, String];	row2=delimList[instring2,delim];			Print[pathName];	Print[ lineSeparator];	Print["ROW_1 VARIABLES: ", Length[row1] ];		Print[ printNumList[row1,6]//TableForm ];	Print[ lineSeparator];		Print["ROW_2 VALUES: ", Length[row2] ];			Print[ printNumList[row2,6]//TableForm ];	Print[ lineSeparator];		If[ Length[row1] != Length[row2], 		Print["WARNING: unequal number of columns in ROW_1 and ROW_2"],Null];	colStart =Input["Enter: first column number"];	colEnd   =Input["Enter: last column number"];	nVars=colEnd-colStart+1;	Print["NUMBER OF VARS: ",nVars];			vars= Take[row1,{colStart,colEnd}];	vals= Take[row2,{colStart,colEnd}]//ToExpression;	varsdata =Transpose[{vars,vals}];	printList[varsdata,2] //TableForm;			(*	streampos1  =StreamPosition[inStream];		SetStreamPosition[inStream, streampos1];	*)			data={};	AppendTo[data,vals];			(*	nRows = 1;	While[ !( Read[inStream,String] === EndOfFile),  				nRows = nRows +1;	*)	(*	nRows = 0;	For[i=1,i<=100,i++,			nRows++;			If[ (Mod[nRows, 25] ==0), Print[nRows], Null];				instring = Read[inStream, String];			row = delimList[instring,delim];			vals = Take[row,{colStart,colEnd}]//ToExpression;			AppendTo[data, vals];				];			Print["NUMBER OF ROWS: ",nRows];		*)	Close[inStream];	:[font = text; inactive; Cclosed; preserveAspect; startGroup]Input  / fileInfo:[font = input; Cclosed; preserveAspect; startGroup]fileName = Input["Enter File Name: "] //ToString;pathName =StringJoin[filePath,fileName];numCols = Input["Enter Number of Columns"];inputFormat = Table[ Number, {numCols}];data 		= ReadList[fileName,inputFormat];col = Transpose[data];v[n_]:= col[[n]]numRows = Length[data];caseNum = Range[ numRows];numPoints = numRows*numCols;fileInfo  := Module[ { },   Print["Path : ",		"\t \t \t",	pathName];   Print["Rows : ", 	"\t \t \t",	numRows];   Print["Columns :",	"\t \t",	numCols];   Print["Total Points:",	"\t", 		numPoints]]fileInfo:[font = print; inactive; preserveAspect; endGroup; endGroup]Path : 	 	 	PB:BICS:1995:jones1Rows : 	 	 	2049Columns :	 	17Total Points:	34833:[font = input; Cclosed; preserveAspect; startGroup]ReadList["Project:BICS:data:horin", {Word},			RecordLists->True,			RecordSeparators->{"\n"}			]:[font = output; output; inactive; preserveAspect; endGroup]{{{"hr"}, {"min"}, {"sec"}, {"BP"}, {"ICP"}, {"CVP"}, {"PAP"}, {"SVO2-J"}, {"SVO2-VC"}, {"CBF-1"}, {"CBF-2"},     {"TCD"}, {"SaO2"}, {"ETPCO2"}, {"Resp-P"}, {"Resp-V"}, {"EKG"}, {"EEG-1"}, {"EEG-2"}}, {{""}},    {{"0.0708"}, {"4.25"}, {"255"}, {"81.72"}, {"3.70"}, {"21.64"}, {"-999"}, {"-999"}, {"-999"}, {"14.94"},     {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.0872"}, {"5.23"}, {"314"}, {"83.63"}, {"4.18"}, {"21.86"}, {"-999"}, {"-999"}, {"-999"}, {"11.98"},     {"-999"}, {"-999"}, {"-999"}, {"2.99"}, {"0.43"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.1036"}, {"6.22"}, {"373"}, {"83.90"}, {"3.66"}, {"21.82"}, {"-999"}, {"-999"}, {"-999"}, {"16.66"},     {"-999"}, {"-999"}, {"-999"}, {"0.56"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.1200"}, {"7.20"}, {"432"}, {"80.24"}, {"3.76"}, {"21.57"}, {"-999"}, {"-999"}, {"-999"}, {"14.89"},     {"-999"}, {"-999"}, {"-999"}, {"0.15"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.1364"}, {"8.18"}, {"491"}, {"81.68"}, {"3.55"}, {"21.54"}, {"-999"}, {"-999"}, {"-999"}, {"14.68"},     {"-999"}, {"-999"}, {"-999"}, {"0.13"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.1528"}, {"9.17"}, {"550"}, {"86.49"}, {"4.02"}, {"-999"}, {"22.69"}, {"-999"}, {"-999"}, {"-999"},     {"-999"}, {"-999"}, {"-999"}, {"0.28"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.1692"}, {"10.15"}, {"609"}, {"83.35"}, {"3.51"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}, {"-999"},     {"-999"}, {"-999"}, {"-999"}, {"0.51"}, {"0.02"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.1856"}, {"11.13"}, {"668"}, {"85.51"}, {"4.01"}, {"-999"}, {"47.30"}, {"-999"}, {"61.24"}, {"59.58"},     {"-999"}, {"-999"}, {"7.70"}, {"32.88"}, {"7.62"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.2019"}, {"12.12"}, {"727"}, {"84.34"}, {"4.10"}, {"-999"}, {"22.61"}, {"-999"}, {"61.76"}, {"52.67"},     {"-999"}, {"-999"}, {"1.66"}, {"2.69"}, {"2.31"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.2183"}, {"13.10"}, {"786"}, {"78.92"}, {"3.56"}, {"-999"}, {"22.47"}, {"-999"}, {"62.01"}, {"55.62"},     {"-999"}, {"-999"}, {"1.91"}, {"2.43"}, {"2.25"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.2347"}, {"14.08"}, {"845"}, {"73.73"}, {"2.69"}, {"-999"}, {"22.04"}, {"-999"}, {"62.01"}, {"55.08"},     {"-999"}, {"-999"}, {"1.33"}, {"7.43"}, {"3.41"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.2511"}, {"15.07"}, {"904"}, {"83.04"}, {"3.79"}, {"-999"}, {"23.38"}, {"-999"}, {"61.31"}, {"54.52"},     {"-999"}, {"-999"}, {"1.67"}, {"1.35"}, {"2.15"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.2675"}, {"16.05"}, {"963"}, {"87.06"}, {"3.63"}, {"-999"}, {"23.13"}, {"-999"}, {"62.71"}, {"55.28"},     {"-999"}, {"-999"}, {"1.74"}, {"4.63"}, {"3.25"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.2839"}, {"17.03"}, {"1022"}, {"82.54"}, {"3.67"}, {"-999"}, {"22.69"}, {"-999"}, {"62.01"}, {"56.21"},     {"-999"}, {"-999"}, {"1.52"}, {"-999"}, {"1.41"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.3003"}, {"18.02"}, {"1081"}, {"78.51"}, {"2.51"}, {"-999"}, {"22.72"}, {"-999"}, {"62.48"}, {"57.05"},     {"-999"}, {"-999"}, {"1.13"}, {"6.84"}, {"3.35"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.3167"}, {"19.00"}, {"1140"}, {"77.98"}, {"2.53"}, {"-999"}, {"22.37"}, {"-999"}, {"62.46"}, {"53.66"},     {"-999"}, {"-999"}, {"1.55"}, {"-999"}, {"1.51"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.3331"}, {"19.98"}, {"1199"}, {"80.91"}, {"2.43"}, {"-999"}, {"22.66"}, {"-999"}, {"62.55"}, {"53.13"},     {"-999"}, {"-999"}, {"1.53"}, {"5.98"}, {"3.49"}, {"-999"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.3494"}, {"20.97"}, {"1258"}, {"79.69"}, {"1.56"}, {"-999"}, {"23.01"}, {"-999"}, {"61.75"}, {"52.15"},     {"-999"}, {"-999"}, {"0.99"}, {"27.05"}, {"9.68"}, {"17.47"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.3658"}, {"21.95"}, {"1317"}, {"78.54"}, {"1.51"}, {"-999"}, {"22.52"}, {"-999"}, {"61.49"}, {"50.40"},     {"-999"}, {"-999"}, {"0.77"}, {"15.39"}, {"13.56"}, {"47.94"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.3822"}, {"22.93"}, {"1376"}, {"76.90"}, {"1.40"}, {"-999"}, {"22.35"}, {"-999"}, {"62.01"}, {"55.34"},     {"-999"}, {"-999"}, {"9.48"}, {"49.03"}, {"13.84"}, {"7.08"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.3986"}, {"23.92"}, {"1435"}, {"71.58"}, {"0.29"}, {"-999"}, {"22.01"}, {"-999"}, {"62.01"}, {"55.76"},     {"-999"}, {"-999"}, {"24.79"}, {"-999"}, {"20.70"}, {"49.82"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.4150"}, {"24.90"}, {"1494"}, {"81.06"}, {"0.64"}, {"-999"}, {"22.69"}, {"-999"}, {"60.52"}, {"53.72"},     {"-999"}, {"-999"}, {"0.67"}, {"-999"}, {"6.85"}, {"36.68"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.4314"}, {"25.88"}, {"1553"}, {"75.73"}, {"-999"}, {"-999"}, {"21.91"}, {"-999"}, {"61.29"}, {"52.67"},     {"-999"}, {"-999"}, {"0.89"}, {"-999"}, {"20.81"}, {"49.85"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.4478"}, {"26.87"}, {"1612"}, {"82.33"}, {"-999"}, {"-999"}, {"22.30"}, {"-999"}, {"62.99"}, {"63.99"},     {"-999"}, {"-999"}, {"22.91"}, {"-999"}, {"13.03"}, {"23.65"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.4642"}, {"27.85"}, {"1671"}, {"79.05"}, {"-999"}, {"-999"}, {"21.90"}, {"-999"}, {"61.82"}, {"63.47"},     {"-999"}, {"-999"}, {"1.46"}, {"-999"}, {"9.78"}, {"8.40"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.4806"}, {"28.83"}, {"1730"}, {"79.11"}, {"-999"}, {"-999"}, {"22.33"}, {"-999"}, {"61.06"}, {"63.23"},     {"-999"}, {"-999"}, {"18.47"}, {"-999"}, {"15.12"}, {"12.99"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.4969"}, {"29.82"}, {"1789"}, {"94.36"}, {"-999"}, {"-999"}, {"22.99"}, {"-999"}, {"62.64"}, {"57.38"},     {"-999"}, {"-999"}, {"1.91"}, {"-999"}, {"10.00"}, {"8.31"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.5133"}, {"30.80"}, {"1848"}, {"83.15"}, {"-999"}, {"-999"}, {"22.59"}, {"-999"}, {"62.96"}, {"59.62"},     {"-999"}, {"-999"}, {"0.84"}, {"-999"}, {"8.07"}, {"22.37"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.5356"}, {"32.13"}, {"1928"}, {"95.12"}, {"-999"}, {"-999"}, {"12.22"}, {"-999"}, {"62.41"}, {"60.26"},     {"-999"}, {"-999"}, {"0.61"}, {"-999"}, {"7.55"}, {"28.80"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.5461"}, {"32.77"}, {"1966"}, {"81.53"}, {"-999"}, {"-999"}, {"23.77"}, {"-999"}, {"62.57"}, {"60.73"},     {"-999"}, {"-999"}, {"5.44"}, {"-999"}, {"12.01"}, {"5.39"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.5625"}, {"33.75"}, {"2025"}, {"84.04"}, {"-999"}, {"-999"}, {"23.38"}, {"-999"}, {"63.96"}, {"62.50"},     {"-999"}, {"-999"}, {"1.71"}, {"-999"}, {"24.56"}, {"49.75"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.5789"}, {"34.73"}, {"2084"}, {"87.72"}, {"-999"}, {"-999"}, {"23.40"}, {"-999"}, {"62.41"}, {"62.22"},     {"-999"}, {"-999"}, {"20.83"}, {"-999"}, {"20.62"}, {"49.84"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.5953"}, {"35.72"}, {"2143"}, {"87.25"}, {"-999"}, {"-999"}, {"23.30"}, {"-999"}, {"63.96"}, {"64.38"},     {"-999"}, {"-999"}, {"24.10"}, {"-999"}, {"20.68"}, {"49.83"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.6117"}, {"36.70"}, {"2202"}, {"86.27"}, {"-999"}, {"-999"}, {"23.03"}, {"-999"}, {"63.96"}, {"61.89"},     {"-999"}, {"-999"}, {"2.01"}, {"-999"}, {"9.95"}, {"5.39"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.6281"}, {"37.68"}, {"2261"}, {"81.21"}, {"-999"}, {"-999"}, {"22.43"}, {"-999"}, {"62.22"}, {"61.60"},     {"-999"}, {"-999"}, {"19.96"}, {"-999"}, {"20.60"}, {"49.69"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.6444"}, {"38.67"}, {"2320"}, {"84.35"}, {"-999"}, {"-999"}, {"23.08"}, {"-999"}, {"64.94"}, {"65.20"},     {"-999"}, {"-999"}, {"17.57"}, {"-999"}, {"15.23"}, {"12.11"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.6608"}, {"39.65"}, {"2379"}, {"81.46"}, {"-999"}, {"-999"}, {"23.45"}, {"-999"}, {"64.62"}, {"65.69"},     {"-999"}, {"-999"}, {"21.93"}, {"-999"}, {"20.62"}, {"49.85"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.6772"}, {"40.63"}, {"2438"}, {"78.42"}, {"-999"}, {"-999"}, {"23.38"}, {"-999"}, {"66.76"}, {"67.80"},     {"-999"}, {"-999"}, {"20.03"}, {"-999"}, {"20.57"}, {"46.40"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.6936"}, {"41.62"}, {"2497"}, {"88.10"}, {"-999"}, {"-999"}, {"23.38"}, {"-999"}, {"65.61"}, {"68.31"},     {"-999"}, {"-999"}, {"21.02"}, {"-999"}, {"20.67"}, {"49.83"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.7100"}, {"42.60"}, {"2556"}, {"84.19"}, {"-999"}, {"-999"}, {"23.01"}, {"-999"}, {"65.92"}, {"71.95"},     {"-999"}, {"-999"}, {"1.83"}, {"-999"}, {"28.10"}, {"49.76"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.7264"}, {"43.58"}, {"2615"}, {"85.28"}, {"-999"}, {"-999"}, {"23.23"}, {"-999"}, {"66.26"}, {"70.41"},     {"-999"}, {"-999"}, {"19.77"}, {"-999"}, {"20.62"}, {"48.66"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.7428"}, {"44.57"}, {"2674"}, {"83.12"}, {"-999"}, {"-999"}, {"23.25"}, {"-999"}, {"66.90"}, {"64.58"},     {"-999"}, {"-999"}, {"18.16"}, {"-999"}, {"13.46"}, {"13.52"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.7592"}, {"45.55"}, {"2733"}, {"83.35"}, {"-999"}, {"-999"}, {"22.49"}, {"-999"}, {"67.23"}, {"61.19"},     {"-999"}, {"-999"}, {"12.16"}, {"-999"}, {"20.65"}, {"49.80"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.7756"}, {"46.53"}, {"2792"}, {"85.15"}, {"-999"}, {"-999"}, {"22.72"}, {"-999"}, {"66.89"}, {"61.21"},     {"-999"}, {"-999"}, {"1.07"}, {"-999"}, {"9.28"}, {"7.44"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.7919"}, {"47.52"}, {"2851"}, {"86.09"}, {"-999"}, {"-999"}, {"22.04"}, {"-999"}, {"65.98"}, {"60.67"},     {"-999"}, {"-999"}, {"1.15"}, {"-999"}, {"25.58"}, {"49.81"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.8083"}, {"48.50"}, {"2910"}, {"84.02"}, {"0.01"}, {"-999"}, {"22.44"}, {"-999"}, {"66.31"}, {"60.33"},     {"-999"}, {"-999"}, {"20.86"}, {"-999"}, {"20.70"}, {"49.79"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.8247"}, {"49.48"}, {"2969"}, {"84.38"}, {"0.68"}, {"-999"}, {"22.53"}, {"-999"}, {"66.89"}, {"60.28"},     {"-999"}, {"-999"}, {"1.36"}, {"-999"}, {"9.23"}, {"13.90"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.8411"}, {"50.47"}, {"3028"}, {"80.92"}, {"0.98"}, {"-999"}, {"21.92"}, {"-999"}, {"66.89"}, {"58.52"},     {"-999"}, {"-999"}, {"22.49"}, {"-999"}, {"14.45"}, {"21.24"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.8575"}, {"51.45"}, {"3087"}, {"88.12"}, {"2.15"}, {"-999"}, {"23.19"}, {"-999"}, {"67.87"}, {"57.33"},     {"-999"}, {"-999"}, {"2.61"}, {"-999"}, {"25.67"}, {"50.82"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.8739"}, {"52.43"}, {"3146"}, {"89.82"}, {"1.03"}, {"-999"}, {"22.05"}, {"-999"}, {"69.20"}, {"63.10"},     {"-999"}, {"-999"}, {"23.49"}, {"-999"}, {"21.61"}, {"50.64"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.8903"}, {"53.42"}, {"3205"}, {"78.61"}, {"0.32"}, {"-999"}, {"20.95"}, {"-999"}, {"72.07"}, {"61.97"},     {"-999"}, {"-999"}, {"19.80"}, {"-999"}, {"20.45"}, {"49.76"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.9067"}, {"54.40"}, {"3264"}, {"81.04"}, {"1.44"}, {"-999"}, {"21.23"}, {"-999"}, {"71.22"}, {"58.79"},     {"-999"}, {"-999"}, {"22.78"}, {"-999"}, {"20.47"}, {"49.78"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.9231"}, {"55.38"}, {"3323"}, {"84.78"}, {"2.47"}, {"-999"}, {"21.42"}, {"-999"}, {"69.12"}, {"57.18"},     {"-999"}, {"-999"}, {"12.64"}, {"-999"}, {"20.51"}, {"49.83"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.9394"}, {"56.37"}, {"3382"}, {"84.90"}, {"3.40"}, {"-999"}, {"21.28"}, {"-999"}, {"63.58"}, {"56.51"},     {"-999"}, {"-999"}, {"19.82"}, {"-999"}, {"20.47"}, {"47.69"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.9558"}, {"57.35"}, {"3441"}, {"84.64"}, {"3.42"}, {"-999"}, {"21.49"}, {"-999"}, {"62.99"}, {"57.01"},     {"-999"}, {"-999"}, {"21.18"}, {"-999"}, {"13.97"}, {"19.64"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.9722"}, {"58.33"}, {"3500"}, {"79.40"}, {"3.49"}, {"-999"}, {"21.13"}, {"-999"}, {"62.99"}, {"56.76"},     {"-999"}, {"-999"}, {"23.52"}, {"-999"}, {"20.50"}, {"49.77"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"0.9886"}, {"59.32"}, {"3559"}, {"84.19"}, {"4.36"}, {"-999"}, {"21.07"}, {"-999"}, {"62.14"}, {"55.90"},     {"-999"}, {"-999"}, {"1.35"}, {"-999"}, {"18.07"}, {"49.62"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.0050"}, {"60.30"}, {"3618"}, {"86.43"}, {"4.63"}, {"-999"}, {"21.44"}, {"-999"}, {"62.01"}, {"56.42"},     {"-999"}, {"-999"}, {"1.31"}, {"-999"}, {"9.23"}, {"15.54"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.0253"}, {"61.52"}, {"3691"}, {"84.77"}, {"5.22"}, {"-999"}, {"21.17"}, {"-999"}, {"62.99"}, {"56.63"},     {"-999"}, {"-999"}, {"2.39"}, {"-999"}, {"10.29"}, {"10.66"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.0378"}, {"62.27"}, {"3736"}, {"88.63"}, {"5.06"}, {"-999"}, {"21.55"}, {"-999"}, {"62.35"}, {"56.74"},     {"-999"}, {"-999"}, {"19.46"}, {"-999"}, {"20.44"}, {"47.59"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.0542"}, {"63.25"}, {"3795"}, {"82.24"}, {"4.79"}, {"-999"}, {"21.01"}, {"-999"}, {"62.61"}, {"57.10"},     {"-999"}, {"-999"}, {"14.93"}, {"-999"}, {"15.01"}, {"10.55"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.0706"}, {"64.23"}, {"3854"}, {"88.99"}, {"5.70"}, {"-999"}, {"21.41"}, {"-999"}, {"62.01"}, {"56.16"},     {"-999"}, {"-999"}, {"5.57"}, {"-999"}, {"12.28"}, {"6.02"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.0869"}, {"65.22"}, {"3913"}, {"85.28"}, {"5.37"}, {"-999"}, {"21.21"}, {"-999"}, {"62.37"}, {"56.26"},     {"-999"}, {"-999"}, {"0.63"}, {"-999"}, {"8.88"}, {"20.74"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.1033"}, {"66.20"}, {"3972"}, {"89.28"}, {"6.14"}, {"-999"}, {"21.32"}, {"-999"}, {"62.01"}, {"57.08"},     {"-999"}, {"-999"}, {"24.13"}, {"-999"}, {"20.39"}, {"49.80"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.1197"}, {"67.18"}, {"4031"}, {"86.54"}, {"6.09"}, {"-999"}, {"20.97"}, {"-999"}, {"62.99"}, {"61.84"},     {"-999"}, {"-999"}, {"15.58"}, {"-999"}, {"16.81"}, {"7.17"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.1361"}, {"68.17"}, {"4090"}, {"85.09"}, {"5.98"}, {"-999"}, {"20.96"}, {"-999"}, {"62.78"}, {"66.23"},     {"-999"}, {"-999"}, {"19.06"}, {"-999"}, {"11.57"}, {"16.82"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.1525"}, {"69.15"}, {"4149"}, {"85.23"}, {"6.49"}, {"-999"}, {"21.10"}, {"-999"}, {"62.38"}, {"63.47"},     {"-999"}, {"-999"}, {"21.17"}, {"-999"}, {"20.42"}, {"49.79"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.1689"}, {"70.13"}, {"4208"}, {"88.93"}, {"7.21"}, {"-999"}, {"21.17"}, {"-999"}, {"62.01"}, {"61.60"},     {"-999"}, {"-999"}, {"18.22"}, {"-999"}, {"13.52"}, {"15.10"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.1853"}, {"71.12"}, {"4267"}, {"84.86"}, {"6.82"}, {"-999"}, {"20.58"}, {"-999"}, {"62.12"}, {"61.88"},     {"-999"}, {"-999"}, {"19.54"}, {"-999"}, {"20.41"}, {"49.72"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.2017"}, {"72.10"}, {"4326"}, {"89.09"}, {"7.07"}, {"-999"}, {"21.14"}, {"-999"}, {"61.92"}, {"60.54"},     {"-999"}, {"-999"}, {"13.86"}, {"-999"}, {"20.38"}, {"49.81"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.2181"}, {"73.08"}, {"4385"}, {"83.31"}, {"7.13"}, {"-999"}, {"20.77"}, {"-999"}, {"62.01"}, {"56.72"},     {"-999"}, {"-999"}, {"15.26"}, {"-999"}, {"15.98"}, {"8.15"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.2344"}, {"74.07"}, {"4444"}, {"88.92"}, {"7.91"}, {"-999"}, {"21.28"}, {"-999"}, {"62.01"}, {"55.47"},     {"-999"}, {"-999"}, {"18.19"}, {"-999"}, {"12.38"}, {"14.51"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.2508"}, {"75.05"}, {"4503"}, {"82.75"}, {"7.42"}, {"-999"}, {"21.03"}, {"-999"}, {"62.27"}, {"56.34"},     {"-999"}, {"-999"}, {"19.92"}, {"-999"}, {"20.42"}, {"49.77"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.2672"}, {"76.03"}, {"4562"}, {"85.91"}, {"7.63"}, {"-999"}, {"21.29"}, {"-999"}, {"61.15"}, {"56.35"},     {"-999"}, {"-999"}, {"1.46"}, {"-999"}, {"9.65"}, {"7.27"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.2836"}, {"77.02"}, {"4621"}, {"87.08"}, {"7.77"}, {"-999"}, {"21.11"}, {"-999"}, {"62.12"}, {"56.67"},     {"-999"}, {"-999"}, {"24.03"}, {"-999"}, {"20.42"}, {"49.78"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.3000"}, {"78.00"}, {"4680"}, {"80.85"}, {"7.26"}, {"-999"}, {"21.08"}, {"-999"}, {"61.39"}, {"54.79"},     {"-999"}, {"-999"}, {"12.18"}, {"-999"}, {"20.45"}, {"49.84"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.3164"}, {"78.98"}, {"4739"}, {"88.95"}, {"8.49"}, {"-999"}, {"21.02"}, {"-999"}, {"61.65"}, {"53.45"},     {"-999"}, {"-999"}, {"14.08"}, {"-999"}, {"20.41"}, {"49.79"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.3328"}, {"79.97"}, {"4798"}, {"78.42"}, {"7.42"}, {"-999"}, {"20.82"}, {"-999"}, {"61.04"}, {"55.70"},     {"-999"}, {"-999"}, {"21.29"}, {"-999"}, {"20.17"}, {"44.38"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.3492"}, {"80.95"}, {"4857"}, {"85.93"}, {"7.70"}, {"-999"}, {"21.14"}, {"-999"}, {"61.40"}, {"60.78"},     {"-999"}, {"-999"}, {"1.81"}, {"-999"}, {"25.75"}, {"49.82"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.3656"}, {"81.93"}, {"4916"}, {"85.98"}, {"7.94"}, {"-999"}, {"20.94"}, {"-999"}, {"62.01"}, {"60.13"},     {"-999"}, {"-999"}, {"0.96"}, {"-999"}, {"23.57"}, {"49.75"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.3819"}, {"82.92"}, {"4975"}, {"89.32"}, {"8.35"}, {"-999"}, {"21.00"}, {"-999"}, {"61.04"}, {"60.42"},     {"-999"}, {"-999"}, {"7.63"}, {"-999"}, {"13.47"}, {"5.87"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.3983"}, {"83.90"}, {"5034"}, {"84.02"}, {"7.82"}, {"-999"}, {"21.07"}, {"-999"}, {"60.78"}, {"58.16"},     {"-999"}, {"-999"}, {"17.92"}, {"-999"}, {"14.27"}, {"14.21"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.4147"}, {"84.88"}, {"5093"}, {"85.27"}, {"7.58"}, {"-999"}, {"21.09"}, {"-999"}, {"61.04"}, {"57.30"},     {"-999"}, {"-999"}, {"22.31"}, {"-999"}, {"20.40"}, {"49.79"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.4311"}, {"85.87"}, {"5152"}, {"84.47"}, {"7.31"}, {"-999"}, {"21.09"}, {"-999"}, {"61.04"}, {"56.12"},     {"-999"}, {"-999"}, {"4.56"}, {"-999"}, {"11.66"}, {"5.37"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.4475"}, {"86.85"}, {"5211"}, {"84.52"}, {"7.56"}, {"-999"}, {"21.26"}, {"-999"}, {"60.27"}, {"55.07"},     {"-999"}, {"-999"}, {"25.39"}, {"-999"}, {"14.57"}, {"29.24"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.4639"}, {"87.83"}, {"5270"}, {"81.01"}, {"7.08"}, {"-999"}, {"20.96"}, {"-999"}, {"61.80"}, {"55.59"},     {"-999"}, {"-999"}, {"13.13"}, {"-999"}, {"17.49"}, {"6.44"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.4803"}, {"88.82"}, {"5329"}, {"85.35"}, {"7.89"}, {"-999"}, {"21.02"}, {"-999"}, {"61.04"}, {"53.08"},     {"-999"}, {"-999"}, {"14.41"}, {"-999"}, {"20.40"}, {"49.78"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.4967"}, {"89.80"}, {"5388"}, {"84.52"}, {"7.97"}, {"-999"}, {"20.98"}, {"-999"}, {"61.38"}, {"52.81"},     {"-999"}, {"-999"}, {"3.85"}, {"-999"}, {"11.00"}, {"4.89"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.5169"}, {"91.02"}, {"5461"}, {"85.06"}, {"8.27"}, {"-999"}, {"20.85"}, {"-999"}, {"60.52"}, {"54.22"},     {"-999"}, {"-999"}, {"12.23"}, {"-999"}, {"15.81"}, {"6.54"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.5294"}, {"91.77"}, {"5506"}, {"87.01"}, {"7.87"}, {"-999"}, {"21.01"}, {"-999"}, {"62.01"}, {"54.43"},     {"-999"}, {"-999"}, {"13.03"}, {"-999"}, {"20.43"}, {"49.85"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.5458"}, {"92.75"}, {"5565"}, {"82.08"}, {"7.67"}, {"-999"}, {"20.96"}, {"-999"}, {"61.13"}, {"53.41"},     {"-999"}, {"-999"}, {"7.18"}, {"-999"}, {"13.64"}, {"5.99"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.5622"}, {"93.73"}, {"5624"}, {"84.77"}, {"8.09"}, {"-999"}, {"20.94"}, {"-999"}, {"60.66"}, {"53.76"},     {"-999"}, {"-999"}, {"20.16"}, {"-999"}, {"20.41"}, {"45.88"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.5786"}, {"94.72"}, {"5683"}, {"84.31"}, {"8.27"}, {"-999"}, {"20.94"}, {"-999"}, {"60.57"}, {"53.53"},     {"-999"}, {"-999"}, {"22.06"}, {"-999"}, {"19.17"}, {"41.39"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.5950"}, {"95.70"}, {"5742"}, {"81.68"}, {"7.91"}, {"-999"}, {"20.73"}, {"-999"}, {"61.04"}, {"54.79"},     {"-999"}, {"-999"}, {"20.31"}, {"-999"}, {"20.11"}, {"45.83"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.6114"}, {"96.68"}, {"5801"}, {"87.18"}, {"8.24"}, {"-999"}, {"21.18"}, {"-999"}, {"60.78"}, {"62.65"},     {"-999"}, {"-999"}, {"24.46"}, {"-999"}, {"20.38"}, {"49.80"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.6278"}, {"97.67"}, {"5860"}, {"87.22"}, {"8.16"}, {"-999"}, {"21.38"}, {"-999"}, {"61.24"}, {"64.86"},     {"-999"}, {"-999"}, {"23.01"}, {"-999"}, {"20.43"}, {"49.83"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.6442"}, {"98.65"}, {"5919"}, {"82.32"}, {"8.33"}, {"-999"}, {"21.10"}, {"-999"}, {"62.01"}, {"62.46"},     {"-999"}, {"-999"}, {"11.54"}, {"-999"}, {"20.39"}, {"49.80"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.6606"}, {"99.63"}, {"5978"}, {"83.87"}, {"8.26"}, {"-999"}, {"21.30"}, {"-999"}, {"61.55"}, {"61.87"},     {"-999"}, {"-999"}, {"17.91"}, {"-999"}, {"12.75"}, {"13.94"}, {"-999"}, {"-999"}, {"-999"}}, {{""}},    {{"1.6769"}, {"100.62"}, {"6037"}, {"81.71"}, {"8.20"}, {"-999"}, {"21.27"}, {"-999"}, {"61.17"}, {"59.12"},     {"-999"}, {"-999"}, {"18.96"}, {"-999"}, {"20.40"}, {"49.82"}, {"-999"}, {"-999"}, {"-999"}}};[o]{{{hr}, {min}, {sec}, {BP}, {ICP}, {CVP}, {PAP}, {SVO2-J}, {SVO2-VC}, {CBF-1}, {CBF-2}, {TCD}, {SaO2},     {ETPCO2}, {Resp-P}, {Resp-V}, {EKG}, {EEG-1}, {EEG-2}}, {{}},    {{0.0708}, {4.25}, {255}, {81.72}, {3.70}, {21.64}, {-999}, {-999}, {-999}, {14.94}, {-999}, {-999}, {-999},     {-999}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.0872}, {5.23}, {314}, {83.63}, {4.18}, {21.86}, {-999}, {-999}, {-999}, {11.98}, {-999}, {-999}, {-999},     {2.99}, {0.43}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.1036}, {6.22}, {373}, {83.90}, {3.66}, {21.82}, {-999}, {-999}, {-999}, {16.66}, {-999}, {-999}, {-999},     {0.56}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.1200}, {7.20}, {432}, {80.24}, {3.76}, {21.57}, {-999}, {-999}, {-999}, {14.89}, {-999}, {-999}, {-999},     {0.15}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.1364}, {8.18}, {491}, {81.68}, {3.55}, {21.54}, {-999}, {-999}, {-999}, {14.68}, {-999}, {-999}, {-999},     {0.13}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.1528}, {9.17}, {550}, {86.49}, {4.02}, {-999}, {22.69}, {-999}, {-999}, {-999}, {-999}, {-999}, {-999},     {0.28}, {-999}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.1692}, {10.15}, {609}, {83.35}, {3.51}, {-999}, {-999}, {-999}, {-999}, {-999}, {-999}, {-999}, {-999},     {0.51}, {0.02}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.1856}, {11.13}, {668}, {85.51}, {4.01}, {-999}, {47.30}, {-999}, {61.24}, {59.58}, {-999}, {-999},     {7.70}, {32.88}, {7.62}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.2019}, {12.12}, {727}, {84.34}, {4.10}, {-999}, {22.61}, {-999}, {61.76}, {52.67}, {-999}, {-999},     {1.66}, {2.69}, {2.31}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.2183}, {13.10}, {786}, {78.92}, {3.56}, {-999}, {22.47}, {-999}, {62.01}, {55.62}, {-999}, {-999},     {1.91}, {2.43}, {2.25}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.2347}, {14.08}, {845}, {73.73}, {2.69}, {-999}, {22.04}, {-999}, {62.01}, {55.08}, {-999}, {-999},     {1.33}, {7.43}, {3.41}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.2511}, {15.07}, {904}, {83.04}, {3.79}, {-999}, {23.38}, {-999}, {61.31}, {54.52}, {-999}, {-999},     {1.67}, {1.35}, {2.15}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.2675}, {16.05}, {963}, {87.06}, {3.63}, {-999}, {23.13}, {-999}, {62.71}, {55.28}, {-999}, {-999},     {1.74}, {4.63}, {3.25}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.2839}, {17.03}, {1022}, {82.54}, {3.67}, {-999}, {22.69}, {-999}, {62.01}, {56.21}, {-999}, {-999},     {1.52}, {-999}, {1.41}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.3003}, {18.02}, {1081}, {78.51}, {2.51}, {-999}, {22.72}, {-999}, {62.48}, {57.05}, {-999}, {-999},     {1.13}, {6.84}, {3.35}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.3167}, {19.00}, {1140}, {77.98}, {2.53}, {-999}, {22.37}, {-999}, {62.46}, {53.66}, {-999}, {-999},     {1.55}, {-999}, {1.51}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.3331}, {19.98}, {1199}, {80.91}, {2.43}, {-999}, {22.66}, {-999}, {62.55}, {53.13}, {-999}, {-999},     {1.53}, {5.98}, {3.49}, {-999}, {-999}, {-999}, {-999}}, {{}},    {{0.3494}, {20.97}, {1258}, {79.69}, {1.56}, {-999}, {23.01}, {-999}, {61.75}, {52.15}, {-999}, {-999},     {0.99}, {27.05}, {9.68}, {17.47}, {-999}, {-999}, {-999}}, {{}},    {{0.3658}, {21.95}, {1317}, {78.54}, {1.51}, {-999}, {22.52}, {-999}, {61.49}, {50.40}, {-999}, {-999},     {0.77}, {15.39}, {13.56}, {47.94}, {-999}, {-999}, {-999}}, {{}},    {{0.3822}, {22.93}, {1376}, {76.90}, {1.40}, {-999}, {22.35}, {-999}, {62.01}, {55.34}, {-999}, {-999},     {9.48}, {49.03}, {13.84}, {7.08}, {-999}, {-999}, {-999}}, {{}},    {{0.3986}, {23.92}, {1435}, {71.58}, {0.29}, {-999}, {22.01}, {-999}, {62.01}, {55.76}, {-999}, {-999},     {24.79}, {-999}, {20.70}, {49.82}, {-999}, {-999}, {-999}}, {{}},    {{0.4150}, {24.90}, {1494}, {81.06}, {0.64}, {-999}, {22.69}, {-999}, {60.52}, {53.72}, {-999}, {-999},     {0.67}, {-999}, {6.85}, {36.68}, {-999}, {-999}, {-999}}, {{}},    {{0.4314}, {25.88}, {1553}, {75.73}, {-999}, {-999}, {21.91}, {-999}, {61.29}, {52.67}, {-999}, {-999},     {0.89}, {-999}, {20.81}, {49.85}, {-999}, {-999}, {-999}}, {{}},    {{0.4478}, {26.87}, {1612}, {82.33}, {-999}, {-999}, {22.30}, {-999}, {62.99}, {63.99}, {-999}, {-999},     {22.91}, {-999}, {13.03}, {23.65}, {-999}, {-999}, {-999}}, {{}},    {{0.4642}, {27.85}, {1671}, {79.05}, {-999}, {-999}, {21.90}, {-999}, {61.82}, {63.47}, {-999}, {-999},     {1.46}, {-999}, {9.78}, {8.40}, {-999}, {-999}, {-999}}, {{}},    {{0.4806}, {28.83}, {1730}, {79.11}, {-999}, {-999}, {22.33}, {-999}, {61.06}, {63.23}, {-999}, {-999},     {18.47}, {-999}, {15.12}, {12.99}, {-999}, {-999}, {-999}}, {{}},    {{0.4969}, {29.82}, {1789}, {94.36}, {-999}, {-999}, {22.99}, {-999}, {62.64}, {57.38}, {-999}, {-999},     {1.91}, {-999}, {10.00}, {8.31}, {-999}, {-999}, {-999}}, {{}},    {{0.5133}, {30.80}, {1848}, {83.15}, {-999}, {-999}, {22.59}, {-999}, {62.96}, {59.62}, {-999}, {-999},     {0.84}, {-999}, {8.07}, {22.37}, {-999}, {-999}, {-999}}, {{}},    {{0.5356}, {32.13}, {1928}, {95.12}, {-999}, {-999}, {12.22}, {-999}, {62.41}, {60.26}, {-999}, {-999},     {0.61}, {-999}, {7.55}, {28.80}, {-999}, {-999}, {-999}}, {{}},    {{0.5461}, {32.77}, {1966}, {81.53}, {-999}, {-999}, {23.77}, {-999}, {62.57}, {60.73}, {-999}, {-999},     {5.44}, {-999}, {12.01}, {5.39}, {-999}, {-999}, {-999}}, {{}},    {{0.5625}, {33.75}, {2025}, {84.04}, {-999}, {-999}, {23.38}, {-999}, {63.96}, {62.50}, {-999}, {-999},     {1.71}, {-999}, {24.56}, {49.75}, {-999}, {-999}, {-999}}, {{}},    {{0.5789}, {34.73}, {2084}, {87.72}, {-999}, {-999}, {23.40}, {-999}, {62.41}, {62.22}, {-999}, {-999},     {20.83}, {-999}, {20.62}, {49.84}, {-999}, {-999}, {-999}}, {{}},    {{0.5953}, {35.72}, {2143}, {87.25}, {-999}, {-999}, {23.30}, {-999}, {63.96}, {64.38}, {-999}, {-999},     {24.10}, {-999}, {20.68}, {49.83}, {-999}, {-999}, {-999}}, {{}},    {{0.6117}, {36.70}, {2202}, {86.27}, {-999}, {-999}, {23.03}, {-999}, {63.96}, {61.89}, {-999}, {-999},     {2.01}, {-999}, {9.95}, {5.39}, {-999}, {-999}, {-999}}, {{}},    {{0.6281}, {37.68}, {2261}, {81.21}, {-999}, {-999}, {22.43}, {-999}, {62.22}, {61.60}, {-999}, {-999},     {19.96}, {-999}, {20.60}, {49.69}, {-999}, {-999}, {-999}}, {{}},    {{0.6444}, {38.67}, {2320}, {84.35}, {-999}, {-999}, {23.08}, {-999}, {64.94}, {65.20}, {-999}, {-999},     {17.57}, {-999}, {15.23}, {12.11}, {-999}, {-999}, {-999}}, {{}},    {{0.6608}, {39.65}, {2379}, {81.46}, {-999}, {-999}, {23.45}, {-999}, {64.62}, {65.69}, {-999}, {-999},     {21.93}, {-999}, {20.62}, {49.85}, {-999}, {-999}, {-999}}, {{}},    {{0.6772}, {40.63}, {2438}, {78.42}, {-999}, {-999}, {23.38}, {-999}, {66.76}, {67.80}, {-999}, {-999},     {20.03}, {-999}, {20.57}, {46.40}, {-999}, {-999}, {-999}}, {{}},    {{0.6936}, {41.62}, {2497}, {88.10}, {-999}, {-999}, {23.38}, {-999}, {65.61}, {68.31}, {-999}, {-999},     {21.02}, {-999}, {20.67}, {49.83}, {-999}, {-999}, {-999}}, {{}},    {{0.7100}, {42.60}, {2556}, {84.19}, {-999}, {-999}, {23.01}, {-999}, {65.92}, {71.95}, {-999}, {-999},     {1.83}, {-999}, {28.10}, {49.76}, {-999}, {-999}, {-999}}, {{}},    {{0.7264}, {43.58}, {2615}, {85.28}, {-999}, {-999}, {23.23}, {-999}, {66.26}, {70.41}, {-999}, {-999},     {19.77}, {-999}, {20.62}, {48.66}, {-999}, {-999}, {-999}}, {{}},    {{0.7428}, {44.57}, {2674}, {83.12}, {-999}, {-999}, {23.25}, {-999}, {66.90}, {64.58}, {-999}, {-999},     {18.16}, {-999}, {13.46}, {13.52}, {-999}, {-999}, {-999}}, {{}},    {{0.7592}, {45.55}, {2733}, {83.35}, {-999}, {-999}, {22.49}, {-999}, {67.23}, {61.19}, {-999}, {-999},     {12.16}, {-999}, {20.65}, {49.80}, {-999}, {-999}, {-999}}, {{}},    {{0.7756}, {46.53}, {2792}, {85.15}, {-999}, {-999}, {22.72}, {-999}, {66.89}, {61.21}, {-999}, {-999},     {1.07}, {-999}, {9.28}, {7.44}, {-999}, {-999}, {-999}}, {{}},    {{0.7919}, {47.52}, {2851}, {86.09}, {-999}, {-999}, {22.04}, {-999}, {65.98}, {60.67}, {-999}, {-999},     {1.15}, {-999}, {25.58}, {49.81}, {-999}, {-999}, {-999}}, {{}},    {{0.8083}, {48.50}, {2910}, {84.02}, {0.01}, {-999}, {22.44}, {-999}, {66.31}, {60.33}, {-999}, {-999},     {20.86}, {-999}, {20.70}, {49.79}, {-999}, {-999}, {-999}}, {{}},    {{0.8247}, {49.48}, {2969}, {84.38}, {0.68}, {-999}, {22.53}, {-999}, {66.89}, {60.28}, {-999}, {-999},     {1.36}, {-999}, {9.23}, {13.90}, {-999}, {-999}, {-999}}, {{}},    {{0.8411}, {50.47}, {3028}, {80.92}, {0.98}, {-999}, {21.92}, {-999}, {66.89}, {58.52}, {-999}, {-999},     {22.49}, {-999}, {14.45}, {21.24}, {-999}, {-999}, {-999}}, {{}},    {{0.8575}, {51.45}, {3087}, {88.12}, {2.15}, {-999}, {23.19}, {-999}, {67.87}, {57.33}, {-999}, {-999},     {2.61}, {-999}, {25.67}, {50.82}, {-999}, {-999}, {-999}}, {{}},    {{0.8739}, {52.43}, {3146}, {89.82}, {1.03}, {-999}, {22.05}, {-999}, {69.20}, {63.10}, {-999}, {-999},     {23.49}, {-999}, {21.61}, {50.64}, {-999}, {-999}, {-999}}, {{}},    {{0.8903}, {53.42}, {3205}, {78.61}, {0.32}, {-999}, {20.95}, {-999}, {72.07}, {61.97}, {-999}, {-999},     {19.80}, {-999}, {20.45}, {49.76}, {-999}, {-999}, {-999}}, {{}},    {{0.9067}, {54.40}, {3264}, {81.04}, {1.44}, {-999}, {21.23}, {-999}, {71.22}, {58.79}, {-999}, {-999},     {22.78}, {-999}, {20.47}, {49.78}, {-999}, {-999}, {-999}}, {{}},    {{0.9231}, {55.38}, {3323}, {84.78}, {2.47}, {-999}, {21.42}, {-999}, {69.12}, {57.18}, {-999}, {-999},     {12.64}, {-999}, {20.51}, {49.83}, {-999}, {-999}, {-999}}, {{}},    {{0.9394}, {56.37}, {3382}, {84.90}, {3.40}, {-999}, {21.28}, {-999}, {63.58}, {56.51}, {-999}, {-999},     {19.82}, {-999}, {20.47}, {47.69}, {-999}, {-999}, {-999}}, {{}},    {{0.9558}, {57.35}, {3441}, {84.64}, {3.42}, {-999}, {21.49}, {-999}, {62.99}, {57.01}, {-999}, {-999},     {21.18}, {-999}, {13.97}, {19.64}, {-999}, {-999}, {-999}}, {{}},    {{0.9722}, {58.33}, {3500}, {79.40}, {3.49}, {-999}, {21.13}, {-999}, {62.99}, {56.76}, {-999}, {-999},     {23.52}, {-999}, {20.50}, {49.77}, {-999}, {-999}, {-999}}, {{}},    {{0.9886}, {59.32}, {3559}, {84.19}, {4.36}, {-999}, {21.07}, {-999}, {62.14}, {55.90}, {-999}, {-999},     {1.35}, {-999}, {18.07}, {49.62}, {-999}, {-999}, {-999}}, {{}},    {{1.0050}, {60.30}, {3618}, {86.43}, {4.63}, {-999}, {21.44}, {-999}, {62.01}, {56.42}, {-999}, {-999},     {1.31}, {-999}, {9.23}, {15.54}, {-999}, {-999}, {-999}}, {{}},    {{1.0253}, {61.52}, {3691}, {84.77}, {5.22}, {-999}, {21.17}, {-999}, {62.99}, {56.63}, {-999}, {-999},     {2.39}, {-999}, {10.29}, {10.66}, {-999}, {-999}, {-999}}, {{}},    {{1.0378}, {62.27}, {3736}, {88.63}, {5.06}, {-999}, {21.55}, {-999}, {62.35}, {56.74}, {-999}, {-999},     {19.46}, {-999}, {20.44}, {47.59}, {-999}, {-999}, {-999}}, {{}},    {{1.0542}, {63.25}, {3795}, {82.24}, {4.79}, {-999}, {21.01}, {-999}, {62.61}, {57.10}, {-999}, {-999},     {14.93}, {-999}, {15.01}, {10.55}, {-999}, {-999}, {-999}}, {{}},    {{1.0706}, {64.23}, {3854}, {88.99}, {5.70}, {-999}, {21.41}, {-999}, {62.01}, {56.16}, {-999}, {-999},     {5.57}, {-999}, {12.28}, {6.02}, {-999}, {-999}, {-999}}, {{}},    {{1.0869}, {65.22}, {3913}, {85.28}, {5.37}, {-999}, {21.21}, {-999}, {62.37}, {56.26}, {-999}, {-999},     {0.63}, {-999}, {8.88}, {20.74}, {-999}, {-999}, {-999}}, {{}},    {{1.1033}, {66.20}, {3972}, {89.28}, {6.14}, {-999}, {21.32}, {-999}, {62.01}, {57.08}, {-999}, {-999},     {24.13}, {-999}, {20.39}, {49.80}, {-999}, {-999}, {-999}}, {{}},    {{1.1197}, {67.18}, {4031}, {86.54}, {6.09}, {-999}, {20.97}, {-999}, {62.99}, {61.84}, {-999}, {-999},     {15.58}, {-999}, {16.81}, {7.17}, {-999}, {-999}, {-999}}, {{}},    {{1.1361}, {68.17}, {4090}, {85.09}, {5.98}, {-999}, {20.96}, {-999}, {62.78}, {66.23}, {-999}, {-999},     {19.06}, {-999}, {11.57}, {16.82}, {-999}, {-999}, {-999}}, {{}},    {{1.1525}, {69.15}, {4149}, {85.23}, {6.49}, {-999}, {21.10}, {-999}, {62.38}, {63.47}, {-999}, {-999},     {21.17}, {-999}, {20.42}, {49.79}, {-999}, {-999}, {-999}}, {{}},    {{1.1689}, {70.13}, {4208}, {88.93}, {7.21}, {-999}, {21.17}, {-999}, {62.01}, {61.60}, {-999}, {-999},     {18.22}, {-999}, {13.52}, {15.10}, {-999}, {-999}, {-999}}, {{}},    {{1.1853}, {71.12}, {4267}, {84.86}, {6.82}, {-999}, {20.58}, {-999}, {62.12}, {61.88}, {-999}, {-999},     {19.54}, {-999}, {20.41}, {49.72}, {-999}, {-999}, {-999}}, {{}},    {{1.2017}, {72.10}, {4326}, {89.09}, {7.07}, {-999}, {21.14}, {-999}, {61.92}, {60.54}, {-999}, {-999},     {13.86}, {-999}, {20.38}, {49.81}, {-999}, {-999}, {-999}}, {{}},    {{1.2181}, {73.08}, {4385}, {83.31}, {7.13}, {-999}, {20.77}, {-999}, {62.01}, {56.72}, {-999}, {-999},     {15.26}, {-999}, {15.98}, {8.15}, {-999}, {-999}, {-999}}, {{}},    {{1.2344}, {74.07}, {4444}, {88.92}, {7.91}, {-999}, {21.28}, {-999}, {62.01}, {55.47}, {-999}, {-999},     {18.19}, {-999}, {12.38}, {14.51}, {-999}, {-999}, {-999}}, {{}},    {{1.2508}, {75.05}, {4503}, {82.75}, {7.42}, {-999}, {21.03}, {-999}, {62.27}, {56.34}, {-999}, {-999},     {19.92}, {-999}, {20.42}, {49.77}, {-999}, {-999}, {-999}}, {{}},    {{1.2672}, {76.03}, {4562}, {85.91}, {7.63}, {-999}, {21.29}, {-999}, {61.15}, {56.35}, {-999}, {-999},     {1.46}, {-999}, {9.65}, {7.27}, {-999}, {-999}, {-999}}, {{}},    {{1.2836}, {77.02}, {4621}, {87.08}, {7.77}, {-999}, {21.11}, {-999}, {62.12}, {56.67}, {-999}, {-999},     {24.03}, {-999}, {20.42}, {49.78}, {-999}, {-999}, {-999}}, {{}},    {{1.3000}, {78.00}, {4680}, {80.85}, {7.26}, {-999}, {21.08}, {-999}, {61.39}, {54.79}, {-999}, {-999},     {12.18}, {-999}, {20.45}, {49.84}, {-999}, {-999}, {-999}}, {{}},    {{1.3164}, {78.98}, {4739}, {88.95}, {8.49}, {-999}, {21.02}, {-999}, {61.65}, {53.45}, {-999}, {-999},     {14.08}, {-999}, {20.41}, {49.79}, {-999}, {-999}, {-999}}, {{}},    {{1.3328}, {79.97}, {4798}, {78.42}, {7.42}, {-999}, {20.82}, {-999}, {61.04}, {55.70}, {-999}, {-999},     {21.29}, {-999}, {20.17}, {44.38}, {-999}, {-999}, {-999}}, {{}},    {{1.3492}, {80.95}, {4857}, {85.93}, {7.70}, {-999}, {21.14}, {-999}, {61.40}, {60.78}, {-999}, {-999},     {1.81}, {-999}, {25.75}, {49.82}, {-999}, {-999}, {-999}}, {{}},    {{1.3656}, {81.93}, {4916}, {85.98}, {7.94}, {-999}, {20.94}, {-999}, {62.01}, {60.13}, {-999}, {-999},     {0.96}, {-999}, {23.57}, {49.75}, {-999}, {-999}, {-999}}, {{}},    {{1.3819}, {82.92}, {4975}, {89.32}, {8.35}, {-999}, {21.00}, {-999}, {61.04}, {60.42}, {-999}, {-999},     {7.63}, {-999}, {13.47}, {5.87}, {-999}, {-999}, {-999}}, {{}},    {{1.3983}, {83.90}, {5034}, {84.02}, {7.82}, {-999}, {21.07}, {-999}, {60.78}, {58.16}, {-999}, {-999},     {17.92}, {-999}, {14.27}, {14.21}, {-999}, {-999}, {-999}}, {{}},    {{1.4147}, {84.88}, {5093}, {85.27}, {7.58}, {-999}, {21.09}, {-999}, {61.04}, {57.30}, {-999}, {-999},     {22.31}, {-999}, {20.40}, {49.79}, {-999}, {-999}, {-999}}, {{}},    {{1.4311}, {85.87}, {5152}, {84.47}, {7.31}, {-999}, {21.09}, {-999}, {61.04}, {56.12}, {-999}, {-999},     {4.56}, {-999}, {11.66}, {5.37}, {-999}, {-999}, {-999}}, {{}},    {{1.4475}, {86.85}, {5211}, {84.52}, {7.56}, {-999}, {21.26}, {-999}, {60.27}, {55.07}, {-999}, {-999},     {25.39}, {-999}, {14.57}, {29.24}, {-999}, {-999}, {-999}}, {{}},    {{1.4639}, {87.83}, {5270}, {81.01}, {7.08}, {-999}, {20.96}, {-999}, {61.80}, {55.59}, {-999}, {-999},     {13.13}, {-999}, {17.49}, {6.44}, {-999}, {-999}, {-999}}, {{}},    {{1.4803}, {88.82}, {5329}, {85.35}, {7.89}, {-999}, {21.02}, {-999}, {61.04}, {53.08}, {-999}, {-999},     {14.41}, {-999}, {20.40}, {49.78}, {-999}, {-999}, {-999}}, {{}},    {{1.4967}, {89.80}, {5388}, {84.52}, {7.97}, {-999}, {20.98}, {-999}, {61.38}, {52.81}, {-999}, {-999},     {3.85}, {-999}, {11.00}, {4.89}, {-999}, {-999}, {-999}}, {{}},    {{1.5169}, {91.02}, {5461}, {85.06}, {8.27}, {-999}, {20.85}, {-999}, {60.52}, {54.22}, {-999}, {-999},     {12.23}, {-999}, {15.81}, {6.54}, {-999}, {-999}, {-999}}, {{}},    {{1.5294}, {91.77}, {5506}, {87.01}, {7.87}, {-999}, {21.01}, {-999}, {62.01}, {54.43}, {-999}, {-999},     {13.03}, {-999}, {20.43}, {49.85}, {-999}, {-999}, {-999}}, {{}},    {{1.5458}, {92.75}, {5565}, {82.08}, {7.67}, {-999}, {20.96}, {-999}, {61.13}, {53.41}, {-999}, {-999},     {7.18}, {-999}, {13.64}, {5.99}, {-999}, {-999}, {-999}}, {{}},    {{1.5622}, {93.73}, {5624}, {84.77}, {8.09}, {-999}, {20.94}, {-999}, {60.66}, {53.76}, {-999}, {-999},     {20.16}, {-999}, {20.41}, {45.88}, {-999}, {-999}, {-999}}, {{}},    {{1.5786}, {94.72}, {5683}, {84.31}, {8.27}, {-999}, {20.94}, {-999}, {60.57}, {53.53}, {-999}, {-999},     {22.06}, {-999}, {19.17}, {41.39}, {-999}, {-999}, {-999}}, {{}},    {{1.5950}, {95.70}, {5742}, {81.68}, {7.91}, {-999}, {20.73}, {-999}, {61.04}, {54.79}, {-999}, {-999},     {20.31}, {-999}, {20.11}, {45.83}, {-999}, {-999}, {-999}}, {{}},    {{1.6114}, {96.68}, {5801}, {87.18}, {8.24}, {-999}, {21.18}, {-999}, {60.78}, {62.65}, {-999}, {-999},     {24.46}, {-999}, {20.38}, {49.80}, {-999}, {-999}, {-999}}, {{}},    {{1.6278}, {97.67}, {5860}, {87.22}, {8.16}, {-999}, {21.38}, {-999}, {61.24}, {64.86}, {-999}, {-999},     {23.01}, {-999}, {20.43}, {49.83}, {-999}, {-999}, {-999}}, {{}},    {{1.6442}, {98.65}, {5919}, {82.32}, {8.33}, {-999}, {21.10}, {-999}, {62.01}, {62.46}, {-999}, {-999},     {11.54}, {-999}, {20.39}, {49.80}, {-999}, {-999}, {-999}}, {{}},    {{1.6606}, {99.63}, {5978}, {83.87}, {8.26}, {-999}, {21.30}, {-999}, {61.55}, {61.87}, {-999}, {-999},     {17.91}, {-999}, {12.75}, {13.94}, {-999}, {-999}, {-999}}, {{}},    {{1.6769}, {100.62}, {6037}, {81.71}, {8.20}, {-999}, {21.27}, {-999}, {61.17}, {59.12}, {-999}, {-999},     {18.96}, {-999}, {20.40}, {49.82}, {-999}, {-999}, {-999}}}:[font = text; inactive; preserveAspect]Reads in any file, parses it as required, and writes output file:[font = text; inactive; Cclosed; preserveAspect; startGroup]instring:[font = input; preserveAspect; startGroup]	file="DCAB.TXT";	pathName = StringJoin[ Directory[],":", ToString[file]  ];	inStream = OpenRead[pathName];		nPrintLines = 2;			(* number of lines to print *)	nSkipLines  = 0;			(* number of lines to skip *)	Skip[inStream, String, nSkipLines];			instring1 =Read[inStream, String];	instring2 =Read[inStream, String];	 		Close[inStream];					:[font = message; inactive; preserveAspect]OpenRead::noopen: Can't open Project:BICS:data:DCAB.TXT.:[font = message; inactive; preserveAspect]General::stream: $Failed is not a string, InputStream[ ], or OutputStream[ ].:[font = message; inactive; preserveAspect]General::stream: $Failed is not a string, InputStream[ ], or OutputStream[ ].:[font = message; inactive; preserveAspect]General::stream: $Failed is not a string, InputStream[ ], or OutputStream[ ].:[font = message; inactive; preserveAspect; endGroup; endGroup]General::stream: $Failed is not a string, InputStream[ ], or OutputStream[ ].:[font = text; inactive; Cclosed; preserveAspect; startGroup]delimRules:[font = input; preserveAspect; endGroup]	(* replacement rules for delimiters *)	delimRules={ "\r" -> "\t",				":"  -> "\t",				"/"  -> "\t",				","  -> "\t",				" "  -> "\t"				};:[font = text; inactive; Cclosed; preserveAspect; startGroup]String Maniplation:[font = input; preserveAspect; startGroup]tabstring1=StringReplace[instring1, delimRules];	(* .015 sec *)tabstring2=StringReplace[instring2, delimRules];  vars=delimList[tabstring1, "\t"]; 					(* slow: .18 sec *)vals=delimList[tabstring2,"\t"];nVars=Length[vars];nVals=Length[vals];printNumList[vars,6]//MatrixFormprintNumList[vals,6]//MatrixForm(* numCol=Input["total columns to input"]; *)varBeg= Input["Enter start column number: "];varEnd= Input["Enter end column number:"];varOut=Take[vars,{varBeg,varEnd}];valBeg= Input["Enter start column number: "];valEnd= Input["Enter end column number:"];valOut=Take[vals,{valBeg,valEnd}];(*varSel = Input[		"Enter list of variable numbers.		.........USE CURLY BRACES........		{3,5,6,7,9,12,...} "];varOut=vars[[ varSel ]]valSel = Input["Enter list of data column numbers. 				.........USE CURLY BRACES........				{2,3,4,7,9,12,...} "];valOut=vals[[ valSel ]]*):[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "nVals" is similar to existing symbol "nVars".:[font = output; output; inactive; preserveAspect; fontLeading = 0]MatrixForm[printNumList[delimList[StringReplace[Read[$Failed, String],       {"\r" -> "\t", ":" -> "\t", "/" -> "\t", "," -> "\t", " " -> "\t"}], "\t"], 6]];[o]printNumList[delimList[StringReplace[Read[$Failed, String], { -> 	, : -> 	, / -> 	, , -> 	,   -> 	}], 	], 6]:[font = output; output; inactive; preserveAspect; fontLeading = 0]MatrixForm[printNumList[delimList[StringReplace[Read[$Failed, String],       {"\r" -> "\t", ":" -> "\t", "/" -> "\t", "," -> "\t", " " -> "\t"}], "\t"], 6]];[o]printNumList[delimList[StringReplace[Read[$Failed, String], { -> 	, : -> 	, / -> 	, , -> 	,   -> 	}], 	], 6]:[font = message; inactive; preserveAspect]Take::take: Cannot take positions 5 through 8 in     delimList[StringReplace[Read[$Failed, String], { -> 	, : -> 	, / -> 	, , -> 	,   -> 	}], 	].:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "valBeg" is similar to existing symbol "varBeg".:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "valEnd" is similar to existing symbol "varEnd".:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "valOut" is similar to existing symbol "varOut".:[font = message; inactive; preserveAspect; endGroup; endGroup]Take::take: Cannot take positions 4 through 8 in     delimList[StringReplace[Read[$Failed, String], { -> 	, : -> 	, / -> 	, , -> 	,   -> 	}], 	].:[font = text; inactive; Cclosed; preserveAspect; startGroup]Character Manipulation:[font = input; preserveAspect; startGroup]chars2=instring2//Characters;Map[ Replace[ #, delimRules]& ,  chars2]	:[font = output; output; inactive; preserveAspect; endGroup; endGroup]Characters[Read[$Failed, String]];[o]Characters[Read[$Failed, String]]:[font = text; inactive; Cclosed; preserveAspect; startGroup]ReadList - Word:[font = input; preserveAspect; startGroup]ClearAll[data]; Remove[data];lSeparator="";rSeparator="\n";data=ReadList["horin100", Word,					WordSeparators->{"\r","\t","/",":"," "},					NullWords->True,					RecordLists->True,					RecordSeparators->{"\n"}									];					:[font = input; preserveAspect; startGroup]Do[ Print[ data[[i]]//Length ], {i,1,10}]:[font = input; preserveAspect; startGroup]namesVar= Take[data, Length[row1] ]  (*cannot use ToExpression on var names*)					:[font = input; preserveAspect; endGroup; endGroup; endGroup; endGroup]row1:[font = text; inactive; Cclosed; preserveAspect; startGroup]ReadList - Record:[font = input; preserveAspect; startGroup]data=ReadList["horin50",Record];Print["ROWS: ", Length[data]  ];Print[ "1st ROW ",lineSeparator, data[[1]]  ];Print[ "2nd ROW ",lineSeparator, data[[2]]  ];:[font = print; inactive; preserveAspect; endGroup; endGroup]ROWS: 211st ROW ------------------------------------------------------------------------------------   Date	Time	hr	min	sec	BP	ICP	CVP	PAP	SVO2_J	SVO2_VC	CBF_1	CBF_2	TCD	SaO2	ETPCO2	Resp_P	Resp_V	EKG	EEG_1	EEG_2	2nd ROW ------------------------------------------------------------------------------------   9/30/94	6:13:37 PM	0.0556	3.33	200	84.77	4.90	21.92				17.63										:[font = text; inactive; Cclosed; preserveAspect; startGroup]test1:[font = input; preserveAspect; endGroup](* pp386 - turn off message about new symbol creation for var names *)	file="hoang.dos";	pathName = StringJoin[ Directory[],":", ToString[file]  ];	inStream = OpenRead[pathName];		nPrintLines = 2;			(* number of lines to print *)	nSkipLines  = 0;			(* number of lines to skip *)	Skip[inStream, String, nSkipLines];	Print[ lineSeparator];		delim="\t";			instring1	=Read[inStream, String];		delimpos1	=StringPosition[instring1, delim];		delims1		=Length[ delimpos1 ];			Print["DELIMITERS: ", delims1 ];		outstring1	=StringReplace[instring1,delim->"*"];		Print[outstring1];		Print[ lineSeparator];		instring2	=Read[inStream, String];		delimpos2	=StringPosition[instring2, delim];		delims2		=Length[ delimpos2 ];			Print["DELIMITERS: ", delims2 ];		outstring1	=StringReplace[instring2,delim->"*"];		Print[outstring2];		Print[ lineSeparator];								If[ delims1 != delims2, Print["DELIMITERS: unequal number in row1 and row2"], Null];						Close[inStream];:[font = text; inactive; Cclosed; preserveAspect; startGroup]test2:[font = input; preserveAspect; endGroup]		file="hoang.dos";	pathName = StringJoin[ Directory[],":", ToString[file]  ];	inStream = OpenRead[pathName];		nPrintLines = 2;			(* number of lines to print *)	nSkipLines  = 0;			(* number of lines to skip *)	Skip[inStream, String, nSkipLines];	Print[ lineSeparator];		instring	=Read[inStream, String];	delim = "\t"	delimpos = StringPosition[instring, delim];	delims = Map[ First, delimpos ];		Print["DELIMS: ",   Length[ delims ] ];	outstring = StringReplace[instring,delim->"*"];	Print[outstring];		vals={};	vals = Append[ vals, StringTake[instring,{1, delims[[1]]-1 }]  ];	For[k=0, k < Length[delims], k++,		If[ ( delims[[k+1]] - delims[[k]] ) >1,				(*non-adjacent delims *)			vals = Append[ vals, StringTake[ 							instring, {delims[[k]]+1, delims[[k+1]]-1 }]  ],		(*else missing data*)			vals = Append[ vals, ToString[ -999] ]			]	]		Print[vals];	Print[ printList[vals,8] //TableForm ]	Close[inStream];		:[font = text; inactive; Cclosed; preserveAspect; startGroup]test3:[font = input; preserveAspect; endGroup; endGroup; endGroup; endGroup]	(*		SetStreamPosition[inStream, 0];	line = Read[inStream, String]			(* fstream *)	lineString = StringToStream[line];		(* instrstream *)	var = ReadList[lineString, Text];		(* parse as text *)	Close[lineString];		numvars = Length[var];	Print["VARS: ",numvars];	For[i=1, i<=numvars,i++, 			Print[i,"\t\t",var[[i]]  ]			]	*)	(*	For[ i=1, i<=150, i++,			word = Read[inStream, Word ];			wordval = ToExpression[Read[inStream, Word] ];						If[ !NumberQ[wordval], 				nVars++, 				Null				]		]*)			strstream = StringToStream[word];	(* string stream *):[font = section; inactive; initialization; Cclosed; preserveAspect; startGroup]MAIN:[font = subsubsection; inactive; initialization; Cclosed; preserveAspect; startGroup]Input File Format:[font = smalltext; inactive; initialization; preserveAspect; endGroup]FORMAT of files* Saved as MACINTOSH format from BBEdit* Number of variables must match number of valid data columns* ASCII file* TAB delimited* NL at end of each lineFILE HEADER* First row:  contains two numbers: number of columns (tab) number of rows* Second row:  variable names (separated by tabs)* Third and later rows:  data columns. NAMES of variables and files* VALID - Alphanumeric string of any length, beginning with character, or containing underscore "_"								EEG,  EEG1, EEG_1			* INVALID - containing operator symbols (minus, plus, division, decimal point,equals) :								EEG.1, EEG-1, EEG+1, EEG/1, EEG=*May not begin with a number or operator								1EEG:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]startup:[font = input; initialization; preserveAspect; startGroup]*)(* Input["Enter File Name: "] //ToString; *)(* streams:  String=linebuf \n; Word= wordbuf \t *)(*  !!filename		display contents *)(* Put relevant data and package files in path *)(* MAC *)$Path = Join[$Path, {"PB:Apps:Mathematica:Packages:Statistics "}];(* WIN  $Path = Join[$Path, {"c:\\richards\\wnmath22\\packages\\numerica\\"}];$Path = Join[$Path, {"c:\\richards\\wnmath22\\packages\\graphics\\"}];$Path = Join[$Path, {"c:\\richards\\wnmath22\\packages\\preload\\"}];$Path = Join[$Path, {"c:\\richards\\bics"}];filePath = "c:\\richards\\bics\\"*)(* -------- SET DIRECTORY -------------- *)(*FileInformation["file"] *)SetDirectory["Project:BICS:data"];(*---------- TURN OFF SYMBOL WARNING pp386 SWolf ----*)Off[General::newsym];lineSeparator ="------------------------------------------------------------------------------------\r";(* ------DEFAULT VARIABLE NAMES-------*)var = {			Hours, var2, var3, var4, var5, var6, var7, var8, var9, var10,		var11, var12, var13, var14, var15, var16, var17, var18, var19, var20,		var21, var22, var23, var24		};(*:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "var12" is similar to existing symbol     "var2".:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "var13" is similar to existing symbol     "var3".:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "var14" is similar to existing symbol     "var4".:[font = message; inactive; preserveAspect; endGroup; endGroup]General::stop: Further output of General::spell1 will be suppressed during this calculation.:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]dir:[font = input; initialization; preserveAspect; startGroup]*)Clear[dir];dir = Module[{dirname,dirs,files,numfiles},			dirname  = StringJoin["DIRECTORY:  ", Directory[] ];		files 	 = FileNames[];		dirs     = FileNames["*.*"];		numfiles = StringJoin["FILES:      ", ToString[Length[files] ] ];		numdirs	 = StringJoin["DIRS :      ", ToString[Length[dirs] ] ];						Print[dirname];		Print[numdirs];		Print[numfiles];				printList[files,6]//MatrixForm		];(*:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "dirs" is similar to existing symbol     "dir".:[font = print; inactive; initialization; preserveAspect; endGroup; endGroup]DIRECTORY:  Project:BICS:dataDIRS :      3FILES:      17:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]printList[ list, width]:[font = input; initialization; preserveAspect; startGroup]*)(* pad item list so the number of columns is integer divisor of total number of items *)Clear[printNumList];printNumList[ lis_List, printWidth_Integer ]:=Module[{},		width=printWidth;		len=Length[lis];	nulls = width - Mod[ len,width];	nulltable = Table["-", {nulls}];	lisPadded=Append[lis,nulltable]//Flatten;			index=Table[i, {i, 1,Length[lisPadded] } ];	pairs=Transpose[{index,lisPadded}];	lines=Partition[pairs,width];	Return[lines]	](*:[font = input; initialization; preserveAspect; endGroup; endGroup]*)Clear[printList];printList[ lis_List, printWidth_Integer ]:=Module[{},		width = printWidth;	len=Length[lis];		nulls = width - Mod[ len,width];	nulltable = Table["-", {nulls}];	lisPadded=Append[lis,nulltable]//Flatten;	lines=Partition[lisPadded,width];	Return[lines]	]	(*:[font = subsubsection; inactive; initialization; Cclosed; preserveAspect; startGroup]Read:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]readFileOut[ "file"]:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]extra:[font = input; initialization; preserveAspect; endGroup]*)(* EXTRA FUNCTIONS----- calculate time var -----	begT   =  data[[1,1]] ;	endT   =  data[[dataRows,1]] ;	deltaT = endT-begT;	Print["Elapsed time: \t",deltaT];----- display index,varname,firstval -----outTable=Table[ StringJoin[	"[",ToString[i],"] ",varNames[[i]],"\t",ToString[data[[1,i]] ]  ],	{i,1,nCols}	];	Return[ printList[outTable,3] //MatrixForm];*)(*:[font = input; initialization; preserveAspect; startGroup]*)readFileOut[fileName_String]:=Module[{stream1,varFormat,dataFormat,dataRows},		Clear[nRows,nCols,varNames,data];	stream1=OpenRead[fileName];	SetStreamPosition[stream1,0];(*----- read header -----*)	nRows=Read[stream1, Number];	nCols=Read[stream1, Number];	Print["nRows: \t\t\t", nRows];	Print["nCols: \t\t\t", nCols];		varFormat=Table[Word, {nCols}];	dataFormat=Table[Number,{nCols}];(*----- read var names -----*)	varNames=Read[ stream1, varFormat];	Print["Vars: \t\t\t", varNames ];	(*---- read in data -----*)	Print["reading rows..."];	dataRows=0;	data={{}};				(* create empty array *)	For[i=1, i<=nRows,i++,		line= Read[ stream1, dataFormat];				If[ line[[1]] != -999,			AppendTo[data, line];	(* probably spends much time										allocating memory here... *)			dataRows++			,Null			];				If[ Mod[i,500]==0, Print["\t\t\t\t",i] ];		];			nRows = dataRows;		Print["\t\t\t\t",nRows];		(*----- drop the first,empty, member of data -----*)	data= Drop[data,1];		Print["\t\t\t\t","DONE READING FILE"];];(*:[font = message; inactive; preserveAspect; endGroup; endGroup]General::spell: Possible spelling error: new symbol name "line" is similar to existing symbols     {Line, lines}.:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]readFileReg[ "file"]:[font = input; initialization; preserveAspect; startGroup]*)readFileReg[fileName_String]:=Module[{stream1,varFormat,dataFormat,dataRows},		Clear[nRows,nCols,nCases,nVars,varNames,data];		stream1=OpenRead[fileName];	SetStreamPosition[stream1,0];(*----- read header -----*)	nRows  = Read[stream1, Number];	nCols  = Read[stream1, Number];	nCases = Read[stream1,Number];	nVars  = Read[stream1,Number];		Print["nRows: \t\t\t", nRows];	Print["nCols: \t\t\t", nCols];	Print["nCases:\t\t\t", nCases];	Print["nVars: \t\t\t", nVars];		varFormat=Table[Word, {nVars}];	dataFormat=Table[Number,{nCols}];(*----- read var names -----*)	varNames=Read[ stream1, varFormat];	Print["varNames: \t\t", varNames ];	(*---- read in data -----*)	Print["reading rows..."];	dataRows=0;	data={{}};				(* create array *)	For[i=1, i<=nRows,i++,		line= Read[ stream1, dataFormat];				If[ line[[1]] != -999,			AppendTo[data, line]; dataRows++,			Null			];				If[ Mod[i,500]==0, Print["\t\t\t\t",i] ];		];			nRows = dataRows;		Print["\t\t\t\t",nRows];			(*----- drop the first,empty, member of data -----*)	data= Drop[data,1];			Print["\t\t\t\t","DONE READING FILE"]	];(*:[font = message; inactive; preserveAspect; endGroup; endGroup]General::spell1: Possible spelling error: new symbol name "nCases"     is similar to existing symbol "Cases".:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]readFileLag[ "file"]:[font = input; initialization; preserveAspect; endGroup; endGroup]*)readFileLag[fileName_String]:=Module[{stream1,varFormat,dataFormat,dataRows},		Clear[nRows,nCols,nCases,nVars,varNames,data];		stream1=OpenRead[fileName];	SetStreamPosition[stream1,0];(*----- read header -----*)	nRows  = Read[stream1, Number];	nCols  = Read[stream1, Number];	nCases = Read[stream1,Number];	nVars  = Read[stream1,Number];		Print["nRows: \t\t\t", nRows];	Print["nCols: \t\t\t", nCols];	Print["nCases:\t\t\t", nCases];	Print["nVars: \t\t\t", nVars];		varFormat=Table[Word, {nVars}];	dataFormat=Table[Number,{nCols}];(*----- read var names -----*)	varNames=Read[ stream1, varFormat];	Print["varNames: \t\t", varNames ];	(*---- read in data -----*)	Print["reading rows..."];	dataRows=0;	data={{}};				(* create array *)	For[i=1, i<=nRows,i++,		line= Read[ stream1, dataFormat];				If[ line[[1]] != -999,			AppendTo[data, line]; dataRows++,			Null			];				If[ Mod[i,500]==0, Print["\t\t\t\t",i  ] ];		];			nRows = dataRows;		Print["\t\t\t\t",nRows];			(*----- drop the first,empty, member of data -----*)	data= Drop[data,1];			Print["\t\t\t\t","DONE READING FILE"]	];(*:[font = subsubsection; inactive; initialization; Cclosed; preserveAspect; startGroup]Select:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]selColsRows[ data,c1,c2,r1,r2]    -> v1, v2:[font = input; initialization; preserveAspect; endGroup]*)selColsRows[data_,c1_,c2_,row1_,row2_]:=Module[{},		v1=v2={};		For[ i=row1, i<=row2, i++,						If[ (data[[i,c1]] != -999) && (data[[i,c2]] != -999),				AppendTo[ v1, data[[i,c1]] ];				AppendTo[ v2, data[[i,c2]] ];				];			];				Return[ {v1, v2}];		]				(*:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]selCaseCols3[ data,caseNo,c1,c2,c3]    -> vars, v1, v2, v3:[font = input; initialization; preserveAspect; startGroup]*)Clear[selCaseCols3];selCaseCols3[data_,caseNo_,c1_,c2_,c3_]:=Module[{i,v1,v2,v3,vars},v1=v2=v3={};For[ i=1, i<=nRows, i++,	If[ data[[i,1]] == caseNo, 		vars = {data[[i,2]], data[[i,3]] };		If[data[[i,c1]] != -999 && data[[i,c2]] != -999 &&  data[[i,c3]] != -999,			AppendTo[ v1, data[[i,c1]] ];			AppendTo[ v2, data[[i,c2]] ];			AppendTo[ v3, data[[i,c3]] ]			  ];	  ];   ];   {vars,v1, v2, v3 }//Return];(*:[font = message; inactive; preserveAspect; endGroup; endGroup]General::spell1: Possible spelling error: new symbol name "vars" is similar to existing symbol     "var".:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]selCaseCols2[ data,caseNo,c1,c2,c3]    -> vars, v1, v2:[font = input; initialization; preserveAspect; endGroup]*)Clear[selCaseCols2];selCaseCols2[data_,caseNo_,c1_,c2_]:=Module[{i,v1,v2,vars},v1=v2={};For[ i=1, i<=nRows, i++,	If[ data[[i,1]] == caseNo, 		vars = {data[[i,2]], data[[i,3]] };		If[data[[i,c1]] != -999 && data[[i,c2]] != -999,			AppendTo[ v1, data[[i,c1]] ];			AppendTo[ v2, data[[i,c2]] ];		  ];	  ];   ];   {vars,v1, v2 }//Return];(*:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]selColsRowsDeriv[ data,c1,c2,r1,r2, d1,d2]  -> v1, v2:[font = input; initialization; preserveAspect; endGroup; endGroup]*)(* 	c1,c2:	column1, column2	r1,r2:	row1, row2	d1,d2:	first, second derivative cutoff values*)selColsRowsDeriv[data_,c1_,c2_,row1_,row2_,slope1_, slope2_]:=Module[{},	(*----- eliminate missing data -----*)	v1=v2={};	For[ i=row1, i<=row2, i++,				If[ (data[[i,c1]]!=-999) && (data[[i,c2]]!=-999),			AppendTo[ v1, data[[i,c1]] ];			AppendTo[ v2, data[[i,c2]] ];			];		];			(*----- 1st & 2nd derivative test -----*)	vec1=vec2={};	For[i=2, i<= Length[v2]-1, i++,		FLAG=1;			If[ Abs[v2[[i+1]] - v2[[i]]  ]  >= slope1,  			FLAG=0 ];		If[ Abs[v2[[i]] - v2[[i-1]]  ]  >= slope1,  			FLAG=0 ];		If[ Abs[v2[[i+1]] - 2 v2[[i]] + v2[[i-1]] ]  >= slope2,	FLAG=0 ];			If[ FLAG != 0, 	AppendTo[ vec1, v1[[i]]  ];						AppendTo[ vec2, v2[[i]]	 ], 	];		];Return[{vec1,vec2}];]				(*:[font = subsubsection; inactive; initialization; Cclosed; preserveAspect; startGroup]Plot:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]plotVecs[ v1,v2]:[font = input; initialization; preserveAspect; startGroup]*)plotVecs[v1_, v2_]:=Module[{},	minV1=Min[ v1 ];	maxV1=Max[ v1 ];	lenV1=Length[v1];		(*need min 5 non-missing points to plot *)			If[  lenV1 < 5, Print["N too small to plot"],						plotdat=Transpose[ {v1,v2}];				xlabel = "v1";			ylabel = "v2";			plotname=StringJoin["N: ",ToString[lenV1] ];						ListPlot[ plotdat,				PlotStyle->{PointSize[.001]},				PlotRange->{minV1, maxV1};				DefaultFont :> {"Courier",8},				Frame -> True,				PlotLabel-> plotname,				FrameLabel->{xlabel,ylabel},				RotateLabel->False				]			]			](*:[font = message; inactive; preserveAspect; endGroup; endGroup]General::spell1: Possible spelling error: new symbol name "ylabel"     is similar to existing symbol "xlabel".:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]plotVecsMD[ v1,v2]:[font = input; initialization; preserveAspect; endGroup]*)plotVecsMD[vec1_, vec2_]:=Module[{},		v1=v2={};		For[ i=1, i<=Length[vec1], i++,						If[ (vec1[[i]] != -999) && (vec2[[i]] != -999),				AppendTo[ v1, vec1[[i]] ];				AppendTo[ v2, vec2[[i]] ];				];			];			minV1=Min[ v1 ];	maxV1=Max[ v1 ];	lenV1=Length[v1];			(*need min 5 non-missing points to plot *)			If[  lenV1  < 5, Print["N too small to plot"],						plotdat=Transpose[ {v1,v2}];				xlabel = "v1";			ylabel = "v2";			plotname=StringJoin["N: ",ToString[lenV1] ];						ListPlot[ plotdat,				PlotStyle->{PointSize[.001]},				PlotRange->{minV1, maxV1};				DefaultFont :> {"Courier",8},				Frame -> True,				FrameLabel->{xlabel,ylabel},				PlotLabel-> plotname,								RotateLabel->False				]			]			](*:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]plotCols[ data, c1,c2, r1, r2]:[font = input; initialization; preserveAspect; endGroup]*)plotCols[data_,c1_, c2_, r1_, r2_]:=Module[{},	{v1,v2} = selColsRows[data,c1,c2,r1,r2];	minV1=Min[ v1 ];	maxV1=Max[ v1 ];	lenV1=Length[v1];		(*need min 5 non-missing points to plot *)			If[  lenV1 > 5,						plotdat=Transpose[ {v1,v2}];				xlabel = varNames[[c1]];			ylabel = varNames[[c2]];			plotname=StringJoin["N: ",ToString[lenV1] ];								ListPlot[ plotdat,				PlotStyle->{PointSize[.001]},				PlotRange->{minV1, maxV1};				DefaultFont :> {"Courier",8},				Frame -> True,				FrameLabel->{xlabel,ylabel},				PlotLabel-> plotname,										RotateLabel->False				]			]			];(*:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]plotColsDeriv[ data, c1,c2, r1, r2, d1,d2]:[font = input; initialization; preserveAspect; endGroup]*)plotColsDeriv[data_,c1_, c2_, r1_, r2_, slope1_, slope2_]:=Module[{},	{v1,v2} = selColsRowsDeriv[data,c1,c2,r1,r2, slope1, slope2];	minV1=Min[ v1 ];	maxV1=Max[ v1 ];	lenV1=Length[v1];		(*need min 5 non-missing points to plot *)			If[  lenV1 > 5,						plotdat=Transpose[ {v1,v2}];				xlabel = varNames[[c1]];			ylabel = varNames[[c2]];			plotname=StringJoin["N: ",ToString[lenV1] ];						ListPlot[ plotdat,				PlotStyle->{PointSize[.001]},				PlotRange->{minV1, maxV1};				DefaultFont :> {"Courier",8},				Frame -> True,				FrameLabel->{xlabel,ylabel},				PlotLabel-> plotname,										RotateLabel->False				]			]			];(*:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]plotSlopesR2[vars,v1,v2,v3]:[font = input; initialization; preserveAspect; startGroup]*)plotSlopesR2[vars_,v1_, v2_, v3_]:=	Module[{Nvalid,tCol,rCol,bCol,bMin,bMax,xMin,xMax,xRange,			yMin,yMax,rLocal,theta,xLocal,yLocal,ptsEnd,ptsCenter,points,lines,			xlabel,ylabel,plotlabel			},		Nvalid = Length[v1];						If[ Nvalid <=3, Null,				tCol = v1;				bCol = v2;				rCol = v3;				tMin  = Min[tCol];				tMax  = Max[tCol];												bMin  = Min[bCol];				bMax  = Max[bCol];							xMin  = Min[tCol];				xMax  = Max[tCol];				xRange = xMin-xMax;								yMin  = Min[rCol];				yMax  = Max[rCol];				(*----------------------------*)				rLocal   = 1.0;						(* radius of circle *)				theta  = - ArcTan[bCol];				xLocal = rLocal Cos[theta];				yLocal = rLocal Sin[theta]/xRange;	(* scale y by xRange *)					ptsEnd = Table[{{ tCol[[i]] + xLocal[[i]], rCol[[i]] + yLocal[[i]] },							 { tCol[[i]] - xLocal[[i]], rCol[[i]] - yLocal[[i]] }},												{i,1,Nvalid}							];											ptsCenter = Table[	{ tCol[[i]], rCol[[i]] },								{i,1,Nvalid}								];				points = Prepend[Map[Point,ptsCenter],  AbsolutePointSize[3]  ];				lines =  Prepend[Map[Line, ptsEnd],  AbsoluteThickness[.001]  ];				(*----------------------------*)				xlabel = "Hours";				ylabel = "R^2";												plotlabel = StringJoin[	varNames[[ vars[[1]]  ]],										" vs ",										varNames[[  vars[[2]] ]],										" // N:",										ToString[Nvalid],										"   B:",										ToString[PaddedForm[bMin,{5,4}]],										"...",										ToString[PaddedForm[bMax,{5,4}]]										];																			Show[ Graphics[points], Graphics[lines],						PlotRange->{{tMin,tMax},{-0.1,1.0}},						DefaultFont :> {"Courier",8},						Frame -> True,						FrameLabel->{xlabel,ylabel},						RotateLabel -> False,						PlotLabel->FontForm[plotlabel,{"Courier",8}]					 ]				]			]						(*			PlotRange->{{xMin-1,xMax+1},{-0.1,1.0}},			*)(*:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "rCol" is similar to existing symbol     "tCol".:[font = message; inactive; preserveAspect]General::spell: Possible spelling error: new symbol name "bCol" is similar to existing symbols     {rCol, tCol}.:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "bMin" is similar to existing symbol     "Min".:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "bMax" is similar to existing symbol     "Max".:[font = message; inactive; preserveAspect]General::stop: Further output of General::spell1 will be suppressed during this calculation.:[font = message; inactive; preserveAspect]General::spell: Possible spelling error: new symbol name "xMin" is similar to existing symbols     {bMin, Min}.:[font = message; inactive; preserveAspect]General::spell: Possible spelling error: new symbol name "xMax" is similar to existing symbols     {bMax, Max}.:[font = message; inactive; preserveAspect; endGroup; endGroup]General::stop: Further output of General::spell will be suppressed during this calculation.:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]plotLagR2[vars,v1,v2]:[font = input; initialization; preserveAspect; endGroup]*)plotLagR2[vars_,v1_, v2_]:=	Module[{Nvalid,tCol,rCol,xMin,xMax,			yMin,yMax,rLocal,theta,xLocal,yLocal,ptsEnd,ptsCenter,points,lines,			xlabel,ylabel,plotlabel			},		Nvalid = Length[v1];						If[ Nvalid <=3, Null,											xMin  = Min[v1];				xMax  = Max[v1];								yMin  = Min[v2];				yMax  = Max[v2];								i=1;				While[  v2[[i]] < yMax, i++];				lagVal = v1[[i]];									(*----------------------------*)				xlabel = "Lag";				ylabel = "R^2";												plotlabel = StringJoin[	varNames[[ vars[[1]]  ]],										" vs ",										varNames[[  vars[[2]] ]],										" // N:",										ToString[Nvalid],										"  R^2 :",										ToString[PaddedForm[yMax,{5,4}]],										"  Lag: ",										ToString[ lagVal ]										];				plotdat=Transpose[ {v1,v2}];					ListPlot[ plotdat,					PlotStyle->{PointSize[.001]},					(* PlotRange->{{xMin,xMax},{-0.1,1.0}},  *)					DefaultFont :> {"Courier",8},					Frame -> True,					FrameLabel->{xlabel,ylabel},					RotateLabel->False,					PlotLabel->FontForm[plotlabel,{"Courier",8}]					]			]	]			(*:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]plotFile[  " *.ext " ]:[font = input; initialization; preserveAspect; endGroup; endGroup]*)plotFile[ filename_String ]:=Module[{extension},	extension = StringTake[filename,-3];			(*---   *.OUT  ----*)	If[ StringMatchQ[ extension, "out" ],		readFileOut[filename];		For[ k=2, k<=nCols,k++,			plotCols[data,1,k,1,nRows]			]		];			(*---   *.REG   ---*)	If[ StringMatchQ[ extension, "reg" ],		readFileReg[filename];			For[ k=1, k<=nCases,k++,			{vars,v1,v2,v3}=selCaseCols3[data,k,4,5,6];					plotSlopesR2[vars,v1,v2,v3]			]		];				(*---   *.LAG   ---*)	If[ StringMatchQ[ extension, "lag" ],		readFileLag[filename];			For[ k=1, k<=nCases,k++,			{vars,v1,v2}=selCaseCols2[data,k,4,5];					plotLagR2[vars,v1,v2]			]		];				](*:[font = subsubsection; inactive; initialization; Cclosed; preserveAspect; startGroup]Regress:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]Tcrit[ dof ]                           (p<.005):[font = input; initialization; preserveAspect]*)(*p005=ReadList["Mac:BICS:p005",{Number,Number}];mu005 = Transpose[p005] [[1]];t005 = Transpose[p005] [[2]];  *)(*:[font = input; initialization; preserveAspect]*)muCrit = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 160, 170, 180, 190, 200, 250, 300, 350, 400, 450, 500, 600, 700, 800, 900, 1000, 1000000};(*:[font = input; initialization; preserveAspect]*)t005 = {63.657, 9.925, 5.841, 4.604, 4.032, 3.707, 3.499, 3.355, 3.25,   3.169, 3.106, 3.055, 3.012, 2.977, 2.947, 2.921, 2.898, 2.878, 2.845, 2.845,   2.831, 2.819, 2.807, 2.797, 2.787, 2.779, 2.771, 2.763, 2.756, 2.75, 2.744,   2.738, 2.733, 2.728, 2.724, 2.719, 2.715, 2.712, 2.708, 2.704, 2.701, 2.698,   2.695, 2.692, 2.69, 2.687, 2.685, 2.682, 2.68, 2.678, 2.674, 2.67, 2.667,   2.663, 2.66, 2.657, 2.655, 2.652, 2.65, 2.648, 2.646, 2.644, 2.642, 2.64,   2.639, 2.637, 2.636, 2.634, 2.633, 2.632, 2.63, 2.629, 2.628, 2.627, 2.626,   2.623, 2.621, 2.619, 2.617, 2.616, 2.614, 2.613, 2.611, 2.61, 2.609, 2.607,   2.605, 2.603, 2.602, 2.601, 2.596, 2.592, 2.59, 2.588, 2.587, 2.586, 2.584,   2.583, 2.582, 2.581, 2.581, 2.5758};(*:[font = input; initialization; preserveAspect; endGroup]*)Tcrit[dof_]:=Module[{},		(* index of critical t-value *)	iCrit[val_]:=				Do[ If[			muCrit[[i]] <= val && muCrit[[i+1]] >= val,					Return[i +1], Null					],			{i,0,Length[muCrit]-1}			];				Return[ t005[[ iCrit[dof]  ]]  ]		](*:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]R2[xdat, ydat]                      (= -500 if p>.005   and   = -999 if N<3 ):[font = input; initialization; preserveAspect; startGroup]*)(* If T>Tcrit then p>.005, and printed R2-> -500, a missing value *)  R2[Xdat_,Ydat_]:=Module[{	Ndat,totDF,regDF,resDF,Xsum,Ysum, 							XYsum,YYsum,XXsum,xySS,xxSS,yySS, 							totSS,regSS,resSS, 							totMS,regMS,resMS,Sxy, 							b,Sb,t,rSqr,rSqrCrit	},			vMean[list_List] := Apply[Plus, list] / Length[list];	vSum[list_List]:=Apply[Plus, list];	Ndat = Length[Xdat];		totDF = Ndat -1;	regDF = 1;	resDF = Ndat - 2;			(* residual DOF *)(* PROTECT FROM NULL DATA *)If[ Ndat <= 3, Return[-999],				Xsum = Xdat //vSum;	Ysum = Ydat //vSum;		XYsum = Xdat Ydat //vSum;	YYsum = Ydat Ydat //vSum;	XXsum = Xdat Xdat //vSum;		xySS  = XYsum - (Xsum Ysum)/Ndat;	xxSS  = XXsum - (Xsum Xsum)/Ndat;	(* xxSS *)	yySS  = YYsum - (Ysum Ysum)/Ndat;		totSS = yySS;	regSS = (xySS)^2/xxSS;	resSS = totSS - regSS;		(* residual sum of squares *)		totMS = totSS/totDF;	regMS = regSS/regDF;	resMS = resSS/resDF;	Sxy = Sqrt[resMS];	(*VARIABLES	b			slope	Sb			SE: std error of estimate (of slope)	rSqr		coeff of determination	rSqrCrit	adjusted rSqr for p<.005 significance	*)		b     = xySS/xxSS;				Sb	  = Re[Sqrt[Sxy^2/xxSS]];	(* take real part *)	If[ Sb==0, Sb= .000001 ]; 		(* avoid zero division *)	t     = b/Sb;			rSqr  = regSS/totSS ;					(* 	CHECK CRITICAL T-VALUE: significance of R2 *)		(* if p>.005,  rSqrCrit -> -500(or -999) *)		If[ t < Tcrit[resDF], rSqrCrit = -999,	rSqrCrit = rSqr];		output={rSqrCrit,b};		Return[output]	]							];(*:[font = message; inactive; preserveAspect]General::spell: Possible spelling error: new symbol name "Ndat"     is similar to existing symbols {Xdat, Ydat}.:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "resDF"     is similar to existing symbol "regDF".:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "Ysum"     is similar to existing symbol "Xsum".:[font = message; inactive; preserveAspect]General::spell: Possible spelling error: new symbol name "XYsum"     is similar to existing symbols {Xsum, Ysum}.:[font = message; inactive; preserveAspect]General::spell: Possible spelling error: new symbol name "YYsum"     is similar to existing symbols {XYsum, Ysum}.:[font = message; inactive; preserveAspect]General::stop: Further output of General::spell will be suppressed during this calculation.:[font = message; inactive; preserveAspect]General::spell1: Possible spelling error: new symbol name "xxSS"     is similar to existing symbol "xySS".:[font = message; inactive; preserveAspect]General::stop: Further output of General::spell1 will be suppressed during this calculation.:[font = input; initialization; preserveAspect; endGroup; endGroup]:[font = text; inactive; initialization; Cclosed; preserveAspect; startGroup]lagR2[v1,v2, lag]:[font = input; initialization; preserveAspect; startGroup]*)Clear[lagR2];lagR2[v1_,v2_, lag_]:=Module[{},	lenV=Length[v1];	len= lenV-Abs[lag];	If[len <=3, Print["N<3 data for lag: ",lag]; Return[{lag,-999}],							v1Lag= Drop[v1, - Sign[lag] Abs[lag] ];	(*rotate left/right*)		v2Lag= Drop[v2,   Sign[lag] Abs[lag] ];	(*rotate right/left*)				result=R2[ v1Lag, v2Lag];		Print[lag,"\t\t",result[[1]] ];		Return[{lag, result[[1]]} ];			];	];		(*:[font = message; inactive; preserveAspect; endGroup; endGroup; endGroup; endGroup]General::spell1: Possible spelling error: new symbol name "lenV" is similar to existing symbol     "len".^*)